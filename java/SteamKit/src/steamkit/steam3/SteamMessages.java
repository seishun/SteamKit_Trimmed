package steamkit.steam3;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SteamMessages.proto

public final class SteamMessages {
  private SteamMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CMsgProtoBufHeader extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgProtoBufHeader.newBuilder() to construct.
    private CMsgProtoBufHeader() {
      initFields();
    }
    private CMsgProtoBufHeader(boolean noInit) {}
    
    private static final CMsgProtoBufHeader defaultInstance;
    public static CMsgProtoBufHeader getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgProtoBufHeader getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgProtoBufHeader_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgProtoBufHeader_fieldAccessorTable;
    }
    
    // optional fixed64 client_steam_id = 1;
    public static final int CLIENT_STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasClientSteamId;
    private long clientSteamId_ = 0L;
    public boolean hasClientSteamId() { return hasClientSteamId; }
    public long getClientSteamId() { return clientSteamId_; }
    
    // optional int32 client_session_id = 2;
    public static final int CLIENT_SESSION_ID_FIELD_NUMBER = 2;
    private boolean hasClientSessionId;
    private int clientSessionId_ = 0;
    public boolean hasClientSessionId() { return hasClientSessionId; }
    public int getClientSessionId() { return clientSessionId_; }
    
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    public static final int JOB_ID_SOURCE_FIELD_NUMBER = 10;
    private boolean hasJobIdSource;
    private long jobIdSource_ = -1L;
    public boolean hasJobIdSource() { return hasJobIdSource; }
    public long getJobIdSource() { return jobIdSource_; }
    
    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    public static final int JOB_ID_TARGET_FIELD_NUMBER = 11;
    private boolean hasJobIdTarget;
    private long jobIdTarget_ = -1L;
    public boolean hasJobIdTarget() { return hasJobIdTarget; }
    public long getJobIdTarget() { return jobIdTarget_; }
    
    // optional string target_job_name = 12;
    public static final int TARGET_JOB_NAME_FIELD_NUMBER = 12;
    private boolean hasTargetJobName;
    private java.lang.String targetJobName_ = "";
    public boolean hasTargetJobName() { return hasTargetJobName; }
    public java.lang.String getTargetJobName() { return targetJobName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClientSteamId()) {
        output.writeFixed64(1, getClientSteamId());
      }
      if (hasClientSessionId()) {
        output.writeInt32(2, getClientSessionId());
      }
      if (hasJobIdSource()) {
        output.writeFixed64(10, getJobIdSource());
      }
      if (hasJobIdTarget()) {
        output.writeFixed64(11, getJobIdTarget());
      }
      if (hasTargetJobName()) {
        output.writeString(12, getTargetJobName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClientSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getClientSteamId());
      }
      if (hasClientSessionId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getClientSessionId());
      }
      if (hasJobIdSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, getJobIdSource());
      }
      if (hasJobIdTarget()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(11, getJobIdTarget());
      }
      if (hasTargetJobName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getTargetJobName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgProtoBufHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgProtoBufHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgProtoBufHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgProtoBufHeader result;
      
      // Construct using SteamMessages.CMsgProtoBufHeader.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgProtoBufHeader();
        return builder;
      }
      
      protected SteamMessages.CMsgProtoBufHeader internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgProtoBufHeader();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgProtoBufHeader.getDescriptor();
      }
      
      public SteamMessages.CMsgProtoBufHeader getDefaultInstanceForType() {
        return SteamMessages.CMsgProtoBufHeader.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgProtoBufHeader build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgProtoBufHeader buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgProtoBufHeader buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgProtoBufHeader returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgProtoBufHeader) {
          return mergeFrom((SteamMessages.CMsgProtoBufHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgProtoBufHeader other) {
        if (other == SteamMessages.CMsgProtoBufHeader.getDefaultInstance()) return this;
        if (other.hasClientSteamId()) {
          setClientSteamId(other.getClientSteamId());
        }
        if (other.hasClientSessionId()) {
          setClientSessionId(other.getClientSessionId());
        }
        if (other.hasJobIdSource()) {
          setJobIdSource(other.getJobIdSource());
        }
        if (other.hasJobIdTarget()) {
          setJobIdTarget(other.getJobIdTarget());
        }
        if (other.hasTargetJobName()) {
          setTargetJobName(other.getTargetJobName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setClientSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setClientSessionId(input.readInt32());
              break;
            }
            case 81: {
              setJobIdSource(input.readFixed64());
              break;
            }
            case 89: {
              setJobIdTarget(input.readFixed64());
              break;
            }
            case 98: {
              setTargetJobName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 client_steam_id = 1;
      public boolean hasClientSteamId() {
        return result.hasClientSteamId();
      }
      public long getClientSteamId() {
        return result.getClientSteamId();
      }
      public Builder setClientSteamId(long value) {
        result.hasClientSteamId = true;
        result.clientSteamId_ = value;
        return this;
      }
      public Builder clearClientSteamId() {
        result.hasClientSteamId = false;
        result.clientSteamId_ = 0L;
        return this;
      }
      
      // optional int32 client_session_id = 2;
      public boolean hasClientSessionId() {
        return result.hasClientSessionId();
      }
      public int getClientSessionId() {
        return result.getClientSessionId();
      }
      public Builder setClientSessionId(int value) {
        result.hasClientSessionId = true;
        result.clientSessionId_ = value;
        return this;
      }
      public Builder clearClientSessionId() {
        result.hasClientSessionId = false;
        result.clientSessionId_ = 0;
        return this;
      }
      
      // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
      public boolean hasJobIdSource() {
        return result.hasJobIdSource();
      }
      public long getJobIdSource() {
        return result.getJobIdSource();
      }
      public Builder setJobIdSource(long value) {
        result.hasJobIdSource = true;
        result.jobIdSource_ = value;
        return this;
      }
      public Builder clearJobIdSource() {
        result.hasJobIdSource = false;
        result.jobIdSource_ = -1L;
        return this;
      }
      
      // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
      public boolean hasJobIdTarget() {
        return result.hasJobIdTarget();
      }
      public long getJobIdTarget() {
        return result.getJobIdTarget();
      }
      public Builder setJobIdTarget(long value) {
        result.hasJobIdTarget = true;
        result.jobIdTarget_ = value;
        return this;
      }
      public Builder clearJobIdTarget() {
        result.hasJobIdTarget = false;
        result.jobIdTarget_ = -1L;
        return this;
      }
      
      // optional string target_job_name = 12;
      public boolean hasTargetJobName() {
        return result.hasTargetJobName();
      }
      public java.lang.String getTargetJobName() {
        return result.getTargetJobName();
      }
      public Builder setTargetJobName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTargetJobName = true;
        result.targetJobName_ = value;
        return this;
      }
      public Builder clearTargetJobName() {
        result.hasTargetJobName = false;
        result.targetJobName_ = getDefaultInstance().getTargetJobName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgProtoBufHeader)
    }
    
    static {
      defaultInstance = new CMsgProtoBufHeader(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgProtoBufHeader)
  }
  
  public static final class CMsgMulti extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgMulti.newBuilder() to construct.
    private CMsgMulti() {
      initFields();
    }
    private CMsgMulti(boolean noInit) {}
    
    private static final CMsgMulti defaultInstance;
    public static CMsgMulti getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgMulti getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgMulti_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgMulti_fieldAccessorTable;
    }
    
    // optional uint32 size_unzipped = 1;
    public static final int SIZE_UNZIPPED_FIELD_NUMBER = 1;
    private boolean hasSizeUnzipped;
    private int sizeUnzipped_ = 0;
    public boolean hasSizeUnzipped() { return hasSizeUnzipped; }
    public int getSizeUnzipped() { return sizeUnzipped_; }
    
    // optional bytes message_body = 2;
    public static final int MESSAGE_BODY_FIELD_NUMBER = 2;
    private boolean hasMessageBody;
    private com.google.protobuf.ByteString messageBody_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMessageBody() { return hasMessageBody; }
    public com.google.protobuf.ByteString getMessageBody() { return messageBody_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSizeUnzipped()) {
        output.writeUInt32(1, getSizeUnzipped());
      }
      if (hasMessageBody()) {
        output.writeBytes(2, getMessageBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSizeUnzipped()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSizeUnzipped());
      }
      if (hasMessageBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgMulti parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgMulti parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgMulti parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgMulti parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgMulti parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgMulti prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgMulti result;
      
      // Construct using SteamMessages.CMsgMulti.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgMulti();
        return builder;
      }
      
      protected SteamMessages.CMsgMulti internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgMulti();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgMulti.getDescriptor();
      }
      
      public SteamMessages.CMsgMulti getDefaultInstanceForType() {
        return SteamMessages.CMsgMulti.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgMulti build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgMulti buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgMulti buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgMulti returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgMulti) {
          return mergeFrom((SteamMessages.CMsgMulti)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgMulti other) {
        if (other == SteamMessages.CMsgMulti.getDefaultInstance()) return this;
        if (other.hasSizeUnzipped()) {
          setSizeUnzipped(other.getSizeUnzipped());
        }
        if (other.hasMessageBody()) {
          setMessageBody(other.getMessageBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSizeUnzipped(input.readUInt32());
              break;
            }
            case 18: {
              setMessageBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 size_unzipped = 1;
      public boolean hasSizeUnzipped() {
        return result.hasSizeUnzipped();
      }
      public int getSizeUnzipped() {
        return result.getSizeUnzipped();
      }
      public Builder setSizeUnzipped(int value) {
        result.hasSizeUnzipped = true;
        result.sizeUnzipped_ = value;
        return this;
      }
      public Builder clearSizeUnzipped() {
        result.hasSizeUnzipped = false;
        result.sizeUnzipped_ = 0;
        return this;
      }
      
      // optional bytes message_body = 2;
      public boolean hasMessageBody() {
        return result.hasMessageBody();
      }
      public com.google.protobuf.ByteString getMessageBody() {
        return result.getMessageBody();
      }
      public Builder setMessageBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageBody = true;
        result.messageBody_ = value;
        return this;
      }
      public Builder clearMessageBody() {
        result.hasMessageBody = false;
        result.messageBody_ = getDefaultInstance().getMessageBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgMulti)
    }
    
    static {
      defaultInstance = new CMsgMulti(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgMulti)
  }
  
  public static final class CMsgAMGetAccountDetails extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMGetAccountDetails.newBuilder() to construct.
    private CMsgAMGetAccountDetails() {
      initFields();
    }
    private CMsgAMGetAccountDetails(boolean noInit) {}
    
    private static final CMsgAMGetAccountDetails defaultInstance;
    public static CMsgAMGetAccountDetails getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMGetAccountDetails getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMGetAccountDetails_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMGetAccountDetails_fieldAccessorTable;
    }
    
    // optional fixed64 authenticated_steam_id = 1;
    public static final int AUTHENTICATED_STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasAuthenticatedSteamId;
    private long authenticatedSteamId_ = 0L;
    public boolean hasAuthenticatedSteamId() { return hasAuthenticatedSteamId; }
    public long getAuthenticatedSteamId() { return authenticatedSteamId_; }
    
    // optional uint32 requester_flags = 2;
    public static final int REQUESTER_FLAGS_FIELD_NUMBER = 2;
    private boolean hasRequesterFlags;
    private int requesterFlags_ = 0;
    public boolean hasRequesterFlags() { return hasRequesterFlags; }
    public int getRequesterFlags() { return requesterFlags_; }
    
    // repeated fixed64 account_list = 3;
    public static final int ACCOUNT_LIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> accountList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getAccountListList() {
      return accountList_;
    }
    public int getAccountListCount() { return accountList_.size(); }
    public long getAccountList(int index) {
      return accountList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAuthenticatedSteamId()) {
        output.writeFixed64(1, getAuthenticatedSteamId());
      }
      if (hasRequesterFlags()) {
        output.writeUInt32(2, getRequesterFlags());
      }
      for (long element : getAccountListList()) {
        output.writeFixed64(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAuthenticatedSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getAuthenticatedSteamId());
      }
      if (hasRequesterFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getRequesterFlags());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAccountListList().size();
        size += dataSize;
        size += 1 * getAccountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMGetAccountDetails result;
      
      // Construct using SteamMessages.CMsgAMGetAccountDetails.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMGetAccountDetails();
        return builder;
      }
      
      protected SteamMessages.CMsgAMGetAccountDetails internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMGetAccountDetails();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMGetAccountDetails.getDescriptor();
      }
      
      public SteamMessages.CMsgAMGetAccountDetails getDefaultInstanceForType() {
        return SteamMessages.CMsgAMGetAccountDetails.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMGetAccountDetails build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMGetAccountDetails buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMGetAccountDetails buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accountList_ != java.util.Collections.EMPTY_LIST) {
          result.accountList_ =
            java.util.Collections.unmodifiableList(result.accountList_);
        }
        SteamMessages.CMsgAMGetAccountDetails returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMGetAccountDetails) {
          return mergeFrom((SteamMessages.CMsgAMGetAccountDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetails other) {
        if (other == SteamMessages.CMsgAMGetAccountDetails.getDefaultInstance()) return this;
        if (other.hasAuthenticatedSteamId()) {
          setAuthenticatedSteamId(other.getAuthenticatedSteamId());
        }
        if (other.hasRequesterFlags()) {
          setRequesterFlags(other.getRequesterFlags());
        }
        if (!other.accountList_.isEmpty()) {
          if (result.accountList_.isEmpty()) {
            result.accountList_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.accountList_.addAll(other.accountList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setAuthenticatedSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setRequesterFlags(input.readUInt32());
              break;
            }
            case 25: {
              addAccountList(input.readFixed64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAccountList(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 authenticated_steam_id = 1;
      public boolean hasAuthenticatedSteamId() {
        return result.hasAuthenticatedSteamId();
      }
      public long getAuthenticatedSteamId() {
        return result.getAuthenticatedSteamId();
      }
      public Builder setAuthenticatedSteamId(long value) {
        result.hasAuthenticatedSteamId = true;
        result.authenticatedSteamId_ = value;
        return this;
      }
      public Builder clearAuthenticatedSteamId() {
        result.hasAuthenticatedSteamId = false;
        result.authenticatedSteamId_ = 0L;
        return this;
      }
      
      // optional uint32 requester_flags = 2;
      public boolean hasRequesterFlags() {
        return result.hasRequesterFlags();
      }
      public int getRequesterFlags() {
        return result.getRequesterFlags();
      }
      public Builder setRequesterFlags(int value) {
        result.hasRequesterFlags = true;
        result.requesterFlags_ = value;
        return this;
      }
      public Builder clearRequesterFlags() {
        result.hasRequesterFlags = false;
        result.requesterFlags_ = 0;
        return this;
      }
      
      // repeated fixed64 account_list = 3;
      public java.util.List<java.lang.Long> getAccountListList() {
        return java.util.Collections.unmodifiableList(result.accountList_);
      }
      public int getAccountListCount() {
        return result.getAccountListCount();
      }
      public long getAccountList(int index) {
        return result.getAccountList(index);
      }
      public Builder setAccountList(int index, long value) {
        result.accountList_.set(index, value);
        return this;
      }
      public Builder addAccountList(long value) {
        if (result.accountList_.isEmpty()) {
          result.accountList_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.accountList_.add(value);
        return this;
      }
      public Builder addAllAccountList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.accountList_.isEmpty()) {
          result.accountList_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.accountList_);
        return this;
      }
      public Builder clearAccountList() {
        result.accountList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetails)
    }
    
    static {
      defaultInstance = new CMsgAMGetAccountDetails(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetails)
  }
  
  public static final class CMsgAMGetAccountDetailsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMGetAccountDetailsResponse.newBuilder() to construct.
    private CMsgAMGetAccountDetailsResponse() {
      initFields();
    }
    private CMsgAMGetAccountDetailsResponse(boolean noInit) {}
    
    private static final CMsgAMGetAccountDetailsResponse defaultInstance;
    public static CMsgAMGetAccountDetailsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMGetAccountDetailsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_fieldAccessorTable;
    }
    
    public static final class AccountDetail extends
        com.google.protobuf.GeneratedMessage {
      // Use AccountDetail.newBuilder() to construct.
      private AccountDetail() {
        initFields();
      }
      private AccountDetail(boolean noInit) {}
      
      private static final AccountDetail defaultInstance;
      public static AccountDetail getDefaultInstance() {
        return defaultInstance;
      }
      
      public AccountDetail getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_fieldAccessorTable;
      }
      
      public static final class License extends
          com.google.protobuf.GeneratedMessage {
        // Use License.newBuilder() to construct.
        private License() {
          initFields();
        }
        private License(boolean noInit) {}
        
        private static final License defaultInstance;
        public static License getDefaultInstance() {
          return defaultInstance;
        }
        
        public License getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_fieldAccessorTable;
        }
        
        // optional int32 package_id = 1;
        public static final int PACKAGE_ID_FIELD_NUMBER = 1;
        private boolean hasPackageId;
        private int packageId_ = 0;
        public boolean hasPackageId() { return hasPackageId; }
        public int getPackageId() { return packageId_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasPackageId()) {
            output.writeInt32(1, getPackageId());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasPackageId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, getPackageId());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License result;
          
          // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License) {
              return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License other) {
            if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.getDefaultInstance()) return this;
            if (other.hasPackageId()) {
              setPackageId(other.getPackageId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 8: {
                  setPackageId(input.readInt32());
                  break;
                }
              }
            }
          }
          
          
          // optional int32 package_id = 1;
          public boolean hasPackageId() {
            return result.hasPackageId();
          }
          public int getPackageId() {
            return result.getPackageId();
          }
          public Builder setPackageId(int value) {
            result.hasPackageId = true;
            result.packageId_ = value;
            return this;
          }
          public Builder clearPackageId() {
            result.hasPackageId = false;
            result.packageId_ = 0;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.License)
        }
        
        static {
          defaultInstance = new License(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.License)
      }
      
      public static final class GamePlayed extends
          com.google.protobuf.GeneratedMessage {
        // Use GamePlayed.newBuilder() to construct.
        private GamePlayed() {
          initFields();
        }
        private GamePlayed(boolean noInit) {}
        
        private static final GamePlayed defaultInstance;
        public static GamePlayed getDefaultInstance() {
          return defaultInstance;
        }
        
        public GamePlayed getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_fieldAccessorTable;
        }
        
        // optional fixed64 game_id = 1;
        public static final int GAME_ID_FIELD_NUMBER = 1;
        private boolean hasGameId;
        private long gameId_ = 0L;
        public boolean hasGameId() { return hasGameId; }
        public long getGameId() { return gameId_; }
        
        // optional uint32 minutes_played_last_two_weeks = 2;
        public static final int MINUTES_PLAYED_LAST_TWO_WEEKS_FIELD_NUMBER = 2;
        private boolean hasMinutesPlayedLastTwoWeeks;
        private int minutesPlayedLastTwoWeeks_ = 0;
        public boolean hasMinutesPlayedLastTwoWeeks() { return hasMinutesPlayedLastTwoWeeks; }
        public int getMinutesPlayedLastTwoWeeks() { return minutesPlayedLastTwoWeeks_; }
        
        // optional uint32 minutes_played_forever = 3;
        public static final int MINUTES_PLAYED_FOREVER_FIELD_NUMBER = 3;
        private boolean hasMinutesPlayedForever;
        private int minutesPlayedForever_ = 0;
        public boolean hasMinutesPlayedForever() { return hasMinutesPlayedForever; }
        public int getMinutesPlayedForever() { return minutesPlayedForever_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasGameId()) {
            output.writeFixed64(1, getGameId());
          }
          if (hasMinutesPlayedLastTwoWeeks()) {
            output.writeUInt32(2, getMinutesPlayedLastTwoWeeks());
          }
          if (hasMinutesPlayedForever()) {
            output.writeUInt32(3, getMinutesPlayedForever());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasGameId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(1, getGameId());
          }
          if (hasMinutesPlayedLastTwoWeeks()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, getMinutesPlayedLastTwoWeeks());
          }
          if (hasMinutesPlayedForever()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, getMinutesPlayedForever());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed result;
          
          // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed) {
              return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed other) {
            if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.getDefaultInstance()) return this;
            if (other.hasGameId()) {
              setGameId(other.getGameId());
            }
            if (other.hasMinutesPlayedLastTwoWeeks()) {
              setMinutesPlayedLastTwoWeeks(other.getMinutesPlayedLastTwoWeeks());
            }
            if (other.hasMinutesPlayedForever()) {
              setMinutesPlayedForever(other.getMinutesPlayedForever());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 9: {
                  setGameId(input.readFixed64());
                  break;
                }
                case 16: {
                  setMinutesPlayedLastTwoWeeks(input.readUInt32());
                  break;
                }
                case 24: {
                  setMinutesPlayedForever(input.readUInt32());
                  break;
                }
              }
            }
          }
          
          
          // optional fixed64 game_id = 1;
          public boolean hasGameId() {
            return result.hasGameId();
          }
          public long getGameId() {
            return result.getGameId();
          }
          public Builder setGameId(long value) {
            result.hasGameId = true;
            result.gameId_ = value;
            return this;
          }
          public Builder clearGameId() {
            result.hasGameId = false;
            result.gameId_ = 0L;
            return this;
          }
          
          // optional uint32 minutes_played_last_two_weeks = 2;
          public boolean hasMinutesPlayedLastTwoWeeks() {
            return result.hasMinutesPlayedLastTwoWeeks();
          }
          public int getMinutesPlayedLastTwoWeeks() {
            return result.getMinutesPlayedLastTwoWeeks();
          }
          public Builder setMinutesPlayedLastTwoWeeks(int value) {
            result.hasMinutesPlayedLastTwoWeeks = true;
            result.minutesPlayedLastTwoWeeks_ = value;
            return this;
          }
          public Builder clearMinutesPlayedLastTwoWeeks() {
            result.hasMinutesPlayedLastTwoWeeks = false;
            result.minutesPlayedLastTwoWeeks_ = 0;
            return this;
          }
          
          // optional uint32 minutes_played_forever = 3;
          public boolean hasMinutesPlayedForever() {
            return result.hasMinutesPlayedForever();
          }
          public int getMinutesPlayedForever() {
            return result.getMinutesPlayedForever();
          }
          public Builder setMinutesPlayedForever(int value) {
            result.hasMinutesPlayedForever = true;
            result.minutesPlayedForever_ = value;
            return this;
          }
          public Builder clearMinutesPlayedForever() {
            result.hasMinutesPlayedForever = false;
            result.minutesPlayedForever_ = 0;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed)
        }
        
        static {
          defaultInstance = new GamePlayed(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed)
      }
      
      public static final class AccountPublicData extends
          com.google.protobuf.GeneratedMessage {
        // Use AccountPublicData.newBuilder() to construct.
        private AccountPublicData() {
          initFields();
        }
        private AccountPublicData(boolean noInit) {}
        
        private static final AccountPublicData defaultInstance;
        public static AccountPublicData getDefaultInstance() {
          return defaultInstance;
        }
        
        public AccountPublicData getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable;
        }
        
        // required fixed64 steam_id = 1;
        public static final int STEAM_ID_FIELD_NUMBER = 1;
        private boolean hasSteamId;
        private long steamId_ = 0L;
        public boolean hasSteamId() { return hasSteamId; }
        public long getSteamId() { return steamId_; }
        
        // optional int32 visibility_state = 2;
        public static final int VISIBILITY_STATE_FIELD_NUMBER = 2;
        private boolean hasVisibilityState;
        private int visibilityState_ = 0;
        public boolean hasVisibilityState() { return hasVisibilityState; }
        public int getVisibilityState() { return visibilityState_; }
        
        // optional int32 privacy_state = 3;
        public static final int PRIVACY_STATE_FIELD_NUMBER = 3;
        private boolean hasPrivacyState;
        private int privacyState_ = 0;
        public boolean hasPrivacyState() { return hasPrivacyState; }
        public int getPrivacyState() { return privacyState_; }
        
        // optional int32 profile_state = 4;
        public static final int PROFILE_STATE_FIELD_NUMBER = 4;
        private boolean hasProfileState;
        private int profileState_ = 0;
        public boolean hasProfileState() { return hasProfileState; }
        public int getProfileState() { return profileState_; }
        
        // optional int32 comment_permission = 5;
        public static final int COMMENT_PERMISSION_FIELD_NUMBER = 5;
        private boolean hasCommentPermission;
        private int commentPermission_ = 0;
        public boolean hasCommentPermission() { return hasCommentPermission; }
        public int getCommentPermission() { return commentPermission_; }
        
        // optional uint32 last_logoff_time = 6;
        public static final int LAST_LOGOFF_TIME_FIELD_NUMBER = 6;
        private boolean hasLastLogoffTime;
        private int lastLogoffTime_ = 0;
        public boolean hasLastLogoffTime() { return hasLastLogoffTime; }
        public int getLastLogoffTime() { return lastLogoffTime_; }
        
        // optional uint32 ban_expires_time = 7;
        public static final int BAN_EXPIRES_TIME_FIELD_NUMBER = 7;
        private boolean hasBanExpiresTime;
        private int banExpiresTime_ = 0;
        public boolean hasBanExpiresTime() { return hasBanExpiresTime; }
        public int getBanExpiresTime() { return banExpiresTime_; }
        
        // optional uint32 account_flags = 8;
        public static final int ACCOUNT_FLAGS_FIELD_NUMBER = 8;
        private boolean hasAccountFlags;
        private int accountFlags_ = 0;
        public boolean hasAccountFlags() { return hasAccountFlags; }
        public int getAccountFlags() { return accountFlags_; }
        
        // optional bytes sha_digest_avatar = 9;
        public static final int SHA_DIGEST_AVATAR_FIELD_NUMBER = 9;
        private boolean hasShaDigestAvatar;
        private com.google.protobuf.ByteString shaDigestAvatar_ = com.google.protobuf.ByteString.EMPTY;
        public boolean hasShaDigestAvatar() { return hasShaDigestAvatar; }
        public com.google.protobuf.ByteString getShaDigestAvatar() { return shaDigestAvatar_; }
        
        // optional int32 clan_count = 10;
        public static final int CLAN_COUNT_FIELD_NUMBER = 10;
        private boolean hasClanCount;
        private int clanCount_ = 0;
        public boolean hasClanCount() { return hasClanCount; }
        public int getClanCount() { return clanCount_; }
        
        // optional string persona_name = 11;
        public static final int PERSONA_NAME_FIELD_NUMBER = 11;
        private boolean hasPersonaName;
        private java.lang.String personaName_ = "";
        public boolean hasPersonaName() { return hasPersonaName; }
        public java.lang.String getPersonaName() { return personaName_; }
        
        // optional string profile_url = 12;
        public static final int PROFILE_URL_FIELD_NUMBER = 12;
        private boolean hasProfileUrl;
        private java.lang.String profileUrl_ = "";
        public boolean hasProfileUrl() { return hasProfileUrl; }
        public java.lang.String getProfileUrl() { return profileUrl_; }
        
        // optional bool is_vac_banned = 13;
        public static final int IS_VAC_BANNED_FIELD_NUMBER = 13;
        private boolean hasIsVacBanned;
        private boolean isVacBanned_ = false;
        public boolean hasIsVacBanned() { return hasIsVacBanned; }
        public boolean getIsVacBanned() { return isVacBanned_; }
        
        // optional bool is_limited_account = 14;
        public static final int IS_LIMITED_ACCOUNT_FIELD_NUMBER = 14;
        private boolean hasIsLimitedAccount;
        private boolean isLimitedAccount_ = false;
        public boolean hasIsLimitedAccount() { return hasIsLimitedAccount; }
        public boolean getIsLimitedAccount() { return isLimitedAccount_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          if (!hasSteamId) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasSteamId()) {
            output.writeFixed64(1, getSteamId());
          }
          if (hasVisibilityState()) {
            output.writeInt32(2, getVisibilityState());
          }
          if (hasPrivacyState()) {
            output.writeInt32(3, getPrivacyState());
          }
          if (hasProfileState()) {
            output.writeInt32(4, getProfileState());
          }
          if (hasCommentPermission()) {
            output.writeInt32(5, getCommentPermission());
          }
          if (hasLastLogoffTime()) {
            output.writeUInt32(6, getLastLogoffTime());
          }
          if (hasBanExpiresTime()) {
            output.writeUInt32(7, getBanExpiresTime());
          }
          if (hasAccountFlags()) {
            output.writeUInt32(8, getAccountFlags());
          }
          if (hasShaDigestAvatar()) {
            output.writeBytes(9, getShaDigestAvatar());
          }
          if (hasClanCount()) {
            output.writeInt32(10, getClanCount());
          }
          if (hasPersonaName()) {
            output.writeString(11, getPersonaName());
          }
          if (hasProfileUrl()) {
            output.writeString(12, getProfileUrl());
          }
          if (hasIsVacBanned()) {
            output.writeBool(13, getIsVacBanned());
          }
          if (hasIsLimitedAccount()) {
            output.writeBool(14, getIsLimitedAccount());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasSteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(1, getSteamId());
          }
          if (hasVisibilityState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, getVisibilityState());
          }
          if (hasPrivacyState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, getPrivacyState());
          }
          if (hasProfileState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, getProfileState());
          }
          if (hasCommentPermission()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, getCommentPermission());
          }
          if (hasLastLogoffTime()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, getLastLogoffTime());
          }
          if (hasBanExpiresTime()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, getBanExpiresTime());
          }
          if (hasAccountFlags()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, getAccountFlags());
          }
          if (hasShaDigestAvatar()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(9, getShaDigestAvatar());
          }
          if (hasClanCount()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(10, getClanCount());
          }
          if (hasPersonaName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(11, getPersonaName());
          }
          if (hasProfileUrl()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(12, getProfileUrl());
          }
          if (hasIsVacBanned()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, getIsVacBanned());
          }
          if (hasIsLimitedAccount()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(14, getIsLimitedAccount());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData result;
          
          // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData) {
              return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData other) {
            if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance()) return this;
            if (other.hasSteamId()) {
              setSteamId(other.getSteamId());
            }
            if (other.hasVisibilityState()) {
              setVisibilityState(other.getVisibilityState());
            }
            if (other.hasPrivacyState()) {
              setPrivacyState(other.getPrivacyState());
            }
            if (other.hasProfileState()) {
              setProfileState(other.getProfileState());
            }
            if (other.hasCommentPermission()) {
              setCommentPermission(other.getCommentPermission());
            }
            if (other.hasLastLogoffTime()) {
              setLastLogoffTime(other.getLastLogoffTime());
            }
            if (other.hasBanExpiresTime()) {
              setBanExpiresTime(other.getBanExpiresTime());
            }
            if (other.hasAccountFlags()) {
              setAccountFlags(other.getAccountFlags());
            }
            if (other.hasShaDigestAvatar()) {
              setShaDigestAvatar(other.getShaDigestAvatar());
            }
            if (other.hasClanCount()) {
              setClanCount(other.getClanCount());
            }
            if (other.hasPersonaName()) {
              setPersonaName(other.getPersonaName());
            }
            if (other.hasProfileUrl()) {
              setProfileUrl(other.getProfileUrl());
            }
            if (other.hasIsVacBanned()) {
              setIsVacBanned(other.getIsVacBanned());
            }
            if (other.hasIsLimitedAccount()) {
              setIsLimitedAccount(other.getIsLimitedAccount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 9: {
                  setSteamId(input.readFixed64());
                  break;
                }
                case 16: {
                  setVisibilityState(input.readInt32());
                  break;
                }
                case 24: {
                  setPrivacyState(input.readInt32());
                  break;
                }
                case 32: {
                  setProfileState(input.readInt32());
                  break;
                }
                case 40: {
                  setCommentPermission(input.readInt32());
                  break;
                }
                case 48: {
                  setLastLogoffTime(input.readUInt32());
                  break;
                }
                case 56: {
                  setBanExpiresTime(input.readUInt32());
                  break;
                }
                case 64: {
                  setAccountFlags(input.readUInt32());
                  break;
                }
                case 74: {
                  setShaDigestAvatar(input.readBytes());
                  break;
                }
                case 80: {
                  setClanCount(input.readInt32());
                  break;
                }
                case 90: {
                  setPersonaName(input.readString());
                  break;
                }
                case 98: {
                  setProfileUrl(input.readString());
                  break;
                }
                case 104: {
                  setIsVacBanned(input.readBool());
                  break;
                }
                case 112: {
                  setIsLimitedAccount(input.readBool());
                  break;
                }
              }
            }
          }
          
          
          // required fixed64 steam_id = 1;
          public boolean hasSteamId() {
            return result.hasSteamId();
          }
          public long getSteamId() {
            return result.getSteamId();
          }
          public Builder setSteamId(long value) {
            result.hasSteamId = true;
            result.steamId_ = value;
            return this;
          }
          public Builder clearSteamId() {
            result.hasSteamId = false;
            result.steamId_ = 0L;
            return this;
          }
          
          // optional int32 visibility_state = 2;
          public boolean hasVisibilityState() {
            return result.hasVisibilityState();
          }
          public int getVisibilityState() {
            return result.getVisibilityState();
          }
          public Builder setVisibilityState(int value) {
            result.hasVisibilityState = true;
            result.visibilityState_ = value;
            return this;
          }
          public Builder clearVisibilityState() {
            result.hasVisibilityState = false;
            result.visibilityState_ = 0;
            return this;
          }
          
          // optional int32 privacy_state = 3;
          public boolean hasPrivacyState() {
            return result.hasPrivacyState();
          }
          public int getPrivacyState() {
            return result.getPrivacyState();
          }
          public Builder setPrivacyState(int value) {
            result.hasPrivacyState = true;
            result.privacyState_ = value;
            return this;
          }
          public Builder clearPrivacyState() {
            result.hasPrivacyState = false;
            result.privacyState_ = 0;
            return this;
          }
          
          // optional int32 profile_state = 4;
          public boolean hasProfileState() {
            return result.hasProfileState();
          }
          public int getProfileState() {
            return result.getProfileState();
          }
          public Builder setProfileState(int value) {
            result.hasProfileState = true;
            result.profileState_ = value;
            return this;
          }
          public Builder clearProfileState() {
            result.hasProfileState = false;
            result.profileState_ = 0;
            return this;
          }
          
          // optional int32 comment_permission = 5;
          public boolean hasCommentPermission() {
            return result.hasCommentPermission();
          }
          public int getCommentPermission() {
            return result.getCommentPermission();
          }
          public Builder setCommentPermission(int value) {
            result.hasCommentPermission = true;
            result.commentPermission_ = value;
            return this;
          }
          public Builder clearCommentPermission() {
            result.hasCommentPermission = false;
            result.commentPermission_ = 0;
            return this;
          }
          
          // optional uint32 last_logoff_time = 6;
          public boolean hasLastLogoffTime() {
            return result.hasLastLogoffTime();
          }
          public int getLastLogoffTime() {
            return result.getLastLogoffTime();
          }
          public Builder setLastLogoffTime(int value) {
            result.hasLastLogoffTime = true;
            result.lastLogoffTime_ = value;
            return this;
          }
          public Builder clearLastLogoffTime() {
            result.hasLastLogoffTime = false;
            result.lastLogoffTime_ = 0;
            return this;
          }
          
          // optional uint32 ban_expires_time = 7;
          public boolean hasBanExpiresTime() {
            return result.hasBanExpiresTime();
          }
          public int getBanExpiresTime() {
            return result.getBanExpiresTime();
          }
          public Builder setBanExpiresTime(int value) {
            result.hasBanExpiresTime = true;
            result.banExpiresTime_ = value;
            return this;
          }
          public Builder clearBanExpiresTime() {
            result.hasBanExpiresTime = false;
            result.banExpiresTime_ = 0;
            return this;
          }
          
          // optional uint32 account_flags = 8;
          public boolean hasAccountFlags() {
            return result.hasAccountFlags();
          }
          public int getAccountFlags() {
            return result.getAccountFlags();
          }
          public Builder setAccountFlags(int value) {
            result.hasAccountFlags = true;
            result.accountFlags_ = value;
            return this;
          }
          public Builder clearAccountFlags() {
            result.hasAccountFlags = false;
            result.accountFlags_ = 0;
            return this;
          }
          
          // optional bytes sha_digest_avatar = 9;
          public boolean hasShaDigestAvatar() {
            return result.hasShaDigestAvatar();
          }
          public com.google.protobuf.ByteString getShaDigestAvatar() {
            return result.getShaDigestAvatar();
          }
          public Builder setShaDigestAvatar(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasShaDigestAvatar = true;
            result.shaDigestAvatar_ = value;
            return this;
          }
          public Builder clearShaDigestAvatar() {
            result.hasShaDigestAvatar = false;
            result.shaDigestAvatar_ = getDefaultInstance().getShaDigestAvatar();
            return this;
          }
          
          // optional int32 clan_count = 10;
          public boolean hasClanCount() {
            return result.hasClanCount();
          }
          public int getClanCount() {
            return result.getClanCount();
          }
          public Builder setClanCount(int value) {
            result.hasClanCount = true;
            result.clanCount_ = value;
            return this;
          }
          public Builder clearClanCount() {
            result.hasClanCount = false;
            result.clanCount_ = 0;
            return this;
          }
          
          // optional string persona_name = 11;
          public boolean hasPersonaName() {
            return result.hasPersonaName();
          }
          public java.lang.String getPersonaName() {
            return result.getPersonaName();
          }
          public Builder setPersonaName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
            result.personaName_ = value;
            return this;
          }
          public Builder clearPersonaName() {
            result.hasPersonaName = false;
            result.personaName_ = getDefaultInstance().getPersonaName();
            return this;
          }
          
          // optional string profile_url = 12;
          public boolean hasProfileUrl() {
            return result.hasProfileUrl();
          }
          public java.lang.String getProfileUrl() {
            return result.getProfileUrl();
          }
          public Builder setProfileUrl(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasProfileUrl = true;
            result.profileUrl_ = value;
            return this;
          }
          public Builder clearProfileUrl() {
            result.hasProfileUrl = false;
            result.profileUrl_ = getDefaultInstance().getProfileUrl();
            return this;
          }
          
          // optional bool is_vac_banned = 13;
          public boolean hasIsVacBanned() {
            return result.hasIsVacBanned();
          }
          public boolean getIsVacBanned() {
            return result.getIsVacBanned();
          }
          public Builder setIsVacBanned(boolean value) {
            result.hasIsVacBanned = true;
            result.isVacBanned_ = value;
            return this;
          }
          public Builder clearIsVacBanned() {
            result.hasIsVacBanned = false;
            result.isVacBanned_ = false;
            return this;
          }
          
          // optional bool is_limited_account = 14;
          public boolean hasIsLimitedAccount() {
            return result.hasIsLimitedAccount();
          }
          public boolean getIsLimitedAccount() {
            return result.getIsLimitedAccount();
          }
          public Builder setIsLimitedAccount(boolean value) {
            result.hasIsLimitedAccount = true;
            result.isLimitedAccount_ = value;
            return this;
          }
          public Builder clearIsLimitedAccount() {
            result.hasIsLimitedAccount = false;
            result.isLimitedAccount_ = false;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData)
        }
        
        static {
          defaultInstance = new AccountPublicData(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData)
      }
      
      public static final class AccountPrivateData extends
          com.google.protobuf.GeneratedMessage {
        // Use AccountPrivateData.newBuilder() to construct.
        private AccountPrivateData() {
          initFields();
        }
        private AccountPrivateData(boolean noInit) {}
        
        private static final AccountPrivateData defaultInstance;
        public static AccountPrivateData getDefaultInstance() {
          return defaultInstance;
        }
        
        public AccountPrivateData getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable;
        }
        
        // optional int32 persona_state = 1;
        public static final int PERSONA_STATE_FIELD_NUMBER = 1;
        private boolean hasPersonaState;
        private int personaState_ = 0;
        public boolean hasPersonaState() { return hasPersonaState; }
        public int getPersonaState() { return personaState_; }
        
        // optional fixed64 primary_clan_id = 2;
        public static final int PRIMARY_CLAN_ID_FIELD_NUMBER = 2;
        private boolean hasPrimaryClanId;
        private long primaryClanId_ = 0L;
        public boolean hasPrimaryClanId() { return hasPrimaryClanId; }
        public long getPrimaryClanId() { return primaryClanId_; }
        
        // optional int32 friends_count = 3;
        public static final int FRIENDS_COUNT_FIELD_NUMBER = 3;
        private boolean hasFriendsCount;
        private int friendsCount_ = 0;
        public boolean hasFriendsCount() { return hasFriendsCount; }
        public int getFriendsCount() { return friendsCount_; }
        
        // optional int32 city_id = 4;
        public static final int CITY_ID_FIELD_NUMBER = 4;
        private boolean hasCityId;
        private int cityId_ = 0;
        public boolean hasCityId() { return hasCityId; }
        public int getCityId() { return cityId_; }
        
        // optional int32 favorite_app_id = 5;
        public static final int FAVORITE_APP_ID_FIELD_NUMBER = 5;
        private boolean hasFavoriteAppId;
        private int favoriteAppId_ = 0;
        public boolean hasFavoriteAppId() { return hasFavoriteAppId; }
        public int getFavoriteAppId() { return favoriteAppId_; }
        
        // optional uint32 time_created = 6;
        public static final int TIME_CREATED_FIELD_NUMBER = 6;
        private boolean hasTimeCreated;
        private int timeCreated_ = 0;
        public boolean hasTimeCreated() { return hasTimeCreated; }
        public int getTimeCreated() { return timeCreated_; }
        
        // optional fixed64 game_id = 7;
        public static final int GAME_ID_FIELD_NUMBER = 7;
        private boolean hasGameId;
        private long gameId_ = 0L;
        public boolean hasGameId() { return hasGameId; }
        public long getGameId() { return gameId_; }
        
        // optional fixed64 game_server_steam_id = 8;
        public static final int GAME_SERVER_STEAM_ID_FIELD_NUMBER = 8;
        private boolean hasGameServerSteamId;
        private long gameServerSteamId_ = 0L;
        public boolean hasGameServerSteamId() { return hasGameServerSteamId; }
        public long getGameServerSteamId() { return gameServerSteamId_; }
        
        // optional uint32 game_server_ip_address = 9;
        public static final int GAME_SERVER_IP_ADDRESS_FIELD_NUMBER = 9;
        private boolean hasGameServerIpAddress;
        private int gameServerIpAddress_ = 0;
        public boolean hasGameServerIpAddress() { return hasGameServerIpAddress; }
        public int getGameServerIpAddress() { return gameServerIpAddress_; }
        
        // optional uint32 game_server_port = 10;
        public static final int GAME_SERVER_PORT_FIELD_NUMBER = 10;
        private boolean hasGameServerPort;
        private int gameServerPort_ = 0;
        public boolean hasGameServerPort() { return hasGameServerPort; }
        public int getGameServerPort() { return gameServerPort_; }
        
        // optional int32 skin_id = 11;
        public static final int SKIN_ID_FIELD_NUMBER = 11;
        private boolean hasSkinId;
        private int skinId_ = 0;
        public boolean hasSkinId() { return hasSkinId; }
        public int getSkinId() { return skinId_; }
        
        // optional uint32 wishlist_item_count = 12;
        public static final int WISHLIST_ITEM_COUNT_FIELD_NUMBER = 12;
        private boolean hasWishlistItemCount;
        private int wishlistItemCount_ = 0;
        public boolean hasWishlistItemCount() { return hasWishlistItemCount; }
        public int getWishlistItemCount() { return wishlistItemCount_; }
        
        // optional string game_extra_info = 13;
        public static final int GAME_EXTRA_INFO_FIELD_NUMBER = 13;
        private boolean hasGameExtraInfo;
        private java.lang.String gameExtraInfo_ = "";
        public boolean hasGameExtraInfo() { return hasGameExtraInfo; }
        public java.lang.String getGameExtraInfo() { return gameExtraInfo_; }
        
        // optional string real_name = 14;
        public static final int REAL_NAME_FIELD_NUMBER = 14;
        private boolean hasRealName;
        private java.lang.String realName_ = "";
        public boolean hasRealName() { return hasRealName; }
        public java.lang.String getRealName() { return realName_; }
        
        // optional string state_code = 15;
        public static final int STATE_CODE_FIELD_NUMBER = 15;
        private boolean hasStateCode;
        private java.lang.String stateCode_ = "";
        public boolean hasStateCode() { return hasStateCode; }
        public java.lang.String getStateCode() { return stateCode_; }
        
        // optional string country_code = 16;
        public static final int COUNTRY_CODE_FIELD_NUMBER = 16;
        private boolean hasCountryCode;
        private java.lang.String countryCode_ = "";
        public boolean hasCountryCode() { return hasCountryCode; }
        public java.lang.String getCountryCode() { return countryCode_; }
        
        // optional string email = 17;
        public static final int EMAIL_FIELD_NUMBER = 17;
        private boolean hasEmail;
        private java.lang.String email_ = "";
        public boolean hasEmail() { return hasEmail; }
        public java.lang.String getEmail() { return email_; }
        
        // optional string headline = 18;
        public static final int HEADLINE_FIELD_NUMBER = 18;
        private boolean hasHeadline;
        private java.lang.String headline_ = "";
        public boolean hasHeadline() { return hasHeadline; }
        public java.lang.String getHeadline() { return headline_; }
        
        // optional string summary = 19;
        public static final int SUMMARY_FIELD_NUMBER = 19;
        private boolean hasSummary;
        private java.lang.String summary_ = "";
        public boolean hasSummary() { return hasSummary; }
        public java.lang.String getSummary() { return summary_; }
        
        // optional string account_name = 20;
        public static final int ACCOUNT_NAME_FIELD_NUMBER = 20;
        private boolean hasAccountName;
        private java.lang.String accountName_ = "";
        public boolean hasAccountName() { return hasAccountName; }
        public java.lang.String getAccountName() { return accountName_; }
        
        // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.License licenses = 21;
        public static final int LICENSES_FIELD_NUMBER = 21;
        private java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> licenses_ =
          java.util.Collections.emptyList();
        public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> getLicensesList() {
          return licenses_;
        }
        public int getLicensesCount() { return licenses_.size(); }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License getLicenses(int index) {
          return licenses_.get(index);
        }
        
        // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.License temp_licenses = 22;
        public static final int TEMP_LICENSES_FIELD_NUMBER = 22;
        private java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> tempLicenses_ =
          java.util.Collections.emptyList();
        public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> getTempLicensesList() {
          return tempLicenses_;
        }
        public int getTempLicensesCount() { return tempLicenses_.size(); }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License getTempLicenses(int index) {
          return tempLicenses_.get(index);
        }
        
        // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed games_played = 23;
        public static final int GAMES_PLAYED_FIELD_NUMBER = 23;
        private java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed> gamesPlayed_ =
          java.util.Collections.emptyList();
        public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed> getGamesPlayedList() {
          return gamesPlayed_;
        }
        public int getGamesPlayedCount() { return gamesPlayed_.size(); }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed getGamesPlayed(int index) {
          return gamesPlayed_.get(index);
        }
        
        // optional fixed64 lobby_steam_id = 24;
        public static final int LOBBY_STEAM_ID_FIELD_NUMBER = 24;
        private boolean hasLobbySteamId;
        private long lobbySteamId_ = 0L;
        public boolean hasLobbySteamId() { return hasLobbySteamId; }
        public long getLobbySteamId() { return lobbySteamId_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasPersonaState()) {
            output.writeInt32(1, getPersonaState());
          }
          if (hasPrimaryClanId()) {
            output.writeFixed64(2, getPrimaryClanId());
          }
          if (hasFriendsCount()) {
            output.writeInt32(3, getFriendsCount());
          }
          if (hasCityId()) {
            output.writeInt32(4, getCityId());
          }
          if (hasFavoriteAppId()) {
            output.writeInt32(5, getFavoriteAppId());
          }
          if (hasTimeCreated()) {
            output.writeUInt32(6, getTimeCreated());
          }
          if (hasGameId()) {
            output.writeFixed64(7, getGameId());
          }
          if (hasGameServerSteamId()) {
            output.writeFixed64(8, getGameServerSteamId());
          }
          if (hasGameServerIpAddress()) {
            output.writeUInt32(9, getGameServerIpAddress());
          }
          if (hasGameServerPort()) {
            output.writeUInt32(10, getGameServerPort());
          }
          if (hasSkinId()) {
            output.writeInt32(11, getSkinId());
          }
          if (hasWishlistItemCount()) {
            output.writeUInt32(12, getWishlistItemCount());
          }
          if (hasGameExtraInfo()) {
            output.writeString(13, getGameExtraInfo());
          }
          if (hasRealName()) {
            output.writeString(14, getRealName());
          }
          if (hasStateCode()) {
            output.writeString(15, getStateCode());
          }
          if (hasCountryCode()) {
            output.writeString(16, getCountryCode());
          }
          if (hasEmail()) {
            output.writeString(17, getEmail());
          }
          if (hasHeadline()) {
            output.writeString(18, getHeadline());
          }
          if (hasSummary()) {
            output.writeString(19, getSummary());
          }
          if (hasAccountName()) {
            output.writeString(20, getAccountName());
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License element : getLicensesList()) {
            output.writeMessage(21, element);
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License element : getTempLicensesList()) {
            output.writeMessage(22, element);
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed element : getGamesPlayedList()) {
            output.writeMessage(23, element);
          }
          if (hasLobbySteamId()) {
            output.writeFixed64(24, getLobbySteamId());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasPersonaState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, getPersonaState());
          }
          if (hasPrimaryClanId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(2, getPrimaryClanId());
          }
          if (hasFriendsCount()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, getFriendsCount());
          }
          if (hasCityId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, getCityId());
          }
          if (hasFavoriteAppId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, getFavoriteAppId());
          }
          if (hasTimeCreated()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, getTimeCreated());
          }
          if (hasGameId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(7, getGameId());
          }
          if (hasGameServerSteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(8, getGameServerSteamId());
          }
          if (hasGameServerIpAddress()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(9, getGameServerIpAddress());
          }
          if (hasGameServerPort()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(10, getGameServerPort());
          }
          if (hasSkinId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(11, getSkinId());
          }
          if (hasWishlistItemCount()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(12, getWishlistItemCount());
          }
          if (hasGameExtraInfo()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(13, getGameExtraInfo());
          }
          if (hasRealName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(14, getRealName());
          }
          if (hasStateCode()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(15, getStateCode());
          }
          if (hasCountryCode()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(16, getCountryCode());
          }
          if (hasEmail()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(17, getEmail());
          }
          if (hasHeadline()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(18, getHeadline());
          }
          if (hasSummary()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(19, getSummary());
          }
          if (hasAccountName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(20, getAccountName());
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License element : getLicensesList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(21, element);
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License element : getTempLicensesList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(22, element);
          }
          for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed element : getGamesPlayedList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(23, element);
          }
          if (hasLobbySteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(24, getLobbySteamId());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData result;
          
          // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.licenses_ != java.util.Collections.EMPTY_LIST) {
              result.licenses_ =
                java.util.Collections.unmodifiableList(result.licenses_);
            }
            if (result.tempLicenses_ != java.util.Collections.EMPTY_LIST) {
              result.tempLicenses_ =
                java.util.Collections.unmodifiableList(result.tempLicenses_);
            }
            if (result.gamesPlayed_ != java.util.Collections.EMPTY_LIST) {
              result.gamesPlayed_ =
                java.util.Collections.unmodifiableList(result.gamesPlayed_);
            }
            SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData) {
              return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData other) {
            if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance()) return this;
            if (other.hasPersonaState()) {
              setPersonaState(other.getPersonaState());
            }
            if (other.hasPrimaryClanId()) {
              setPrimaryClanId(other.getPrimaryClanId());
            }
            if (other.hasFriendsCount()) {
              setFriendsCount(other.getFriendsCount());
            }
            if (other.hasCityId()) {
              setCityId(other.getCityId());
            }
            if (other.hasFavoriteAppId()) {
              setFavoriteAppId(other.getFavoriteAppId());
            }
            if (other.hasTimeCreated()) {
              setTimeCreated(other.getTimeCreated());
            }
            if (other.hasGameId()) {
              setGameId(other.getGameId());
            }
            if (other.hasGameServerSteamId()) {
              setGameServerSteamId(other.getGameServerSteamId());
            }
            if (other.hasGameServerIpAddress()) {
              setGameServerIpAddress(other.getGameServerIpAddress());
            }
            if (other.hasGameServerPort()) {
              setGameServerPort(other.getGameServerPort());
            }
            if (other.hasSkinId()) {
              setSkinId(other.getSkinId());
            }
            if (other.hasWishlistItemCount()) {
              setWishlistItemCount(other.getWishlistItemCount());
            }
            if (other.hasGameExtraInfo()) {
              setGameExtraInfo(other.getGameExtraInfo());
            }
            if (other.hasRealName()) {
              setRealName(other.getRealName());
            }
            if (other.hasStateCode()) {
              setStateCode(other.getStateCode());
            }
            if (other.hasCountryCode()) {
              setCountryCode(other.getCountryCode());
            }
            if (other.hasEmail()) {
              setEmail(other.getEmail());
            }
            if (other.hasHeadline()) {
              setHeadline(other.getHeadline());
            }
            if (other.hasSummary()) {
              setSummary(other.getSummary());
            }
            if (other.hasAccountName()) {
              setAccountName(other.getAccountName());
            }
            if (!other.licenses_.isEmpty()) {
              if (result.licenses_.isEmpty()) {
                result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
              }
              result.licenses_.addAll(other.licenses_);
            }
            if (!other.tempLicenses_.isEmpty()) {
              if (result.tempLicenses_.isEmpty()) {
                result.tempLicenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
              }
              result.tempLicenses_.addAll(other.tempLicenses_);
            }
            if (!other.gamesPlayed_.isEmpty()) {
              if (result.gamesPlayed_.isEmpty()) {
                result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed>();
              }
              result.gamesPlayed_.addAll(other.gamesPlayed_);
            }
            if (other.hasLobbySteamId()) {
              setLobbySteamId(other.getLobbySteamId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 8: {
                  setPersonaState(input.readInt32());
                  break;
                }
                case 17: {
                  setPrimaryClanId(input.readFixed64());
                  break;
                }
                case 24: {
                  setFriendsCount(input.readInt32());
                  break;
                }
                case 32: {
                  setCityId(input.readInt32());
                  break;
                }
                case 40: {
                  setFavoriteAppId(input.readInt32());
                  break;
                }
                case 48: {
                  setTimeCreated(input.readUInt32());
                  break;
                }
                case 57: {
                  setGameId(input.readFixed64());
                  break;
                }
                case 65: {
                  setGameServerSteamId(input.readFixed64());
                  break;
                }
                case 72: {
                  setGameServerIpAddress(input.readUInt32());
                  break;
                }
                case 80: {
                  setGameServerPort(input.readUInt32());
                  break;
                }
                case 88: {
                  setSkinId(input.readInt32());
                  break;
                }
                case 96: {
                  setWishlistItemCount(input.readUInt32());
                  break;
                }
                case 106: {
                  setGameExtraInfo(input.readString());
                  break;
                }
                case 114: {
                  setRealName(input.readString());
                  break;
                }
                case 122: {
                  setStateCode(input.readString());
                  break;
                }
                case 130: {
                  setCountryCode(input.readString());
                  break;
                }
                case 138: {
                  setEmail(input.readString());
                  break;
                }
                case 146: {
                  setHeadline(input.readString());
                  break;
                }
                case 154: {
                  setSummary(input.readString());
                  break;
                }
                case 162: {
                  setAccountName(input.readString());
                  break;
                }
                case 170: {
                  SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addLicenses(subBuilder.buildPartial());
                  break;
                }
                case 178: {
                  SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addTempLicenses(subBuilder.buildPartial());
                  break;
                }
                case 186: {
                  SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addGamesPlayed(subBuilder.buildPartial());
                  break;
                }
                case 193: {
                  setLobbySteamId(input.readFixed64());
                  break;
                }
              }
            }
          }
          
          
          // optional int32 persona_state = 1;
          public boolean hasPersonaState() {
            return result.hasPersonaState();
          }
          public int getPersonaState() {
            return result.getPersonaState();
          }
          public Builder setPersonaState(int value) {
            result.hasPersonaState = true;
            result.personaState_ = value;
            return this;
          }
          public Builder clearPersonaState() {
            result.hasPersonaState = false;
            result.personaState_ = 0;
            return this;
          }
          
          // optional fixed64 primary_clan_id = 2;
          public boolean hasPrimaryClanId() {
            return result.hasPrimaryClanId();
          }
          public long getPrimaryClanId() {
            return result.getPrimaryClanId();
          }
          public Builder setPrimaryClanId(long value) {
            result.hasPrimaryClanId = true;
            result.primaryClanId_ = value;
            return this;
          }
          public Builder clearPrimaryClanId() {
            result.hasPrimaryClanId = false;
            result.primaryClanId_ = 0L;
            return this;
          }
          
          // optional int32 friends_count = 3;
          public boolean hasFriendsCount() {
            return result.hasFriendsCount();
          }
          public int getFriendsCount() {
            return result.getFriendsCount();
          }
          public Builder setFriendsCount(int value) {
            result.hasFriendsCount = true;
            result.friendsCount_ = value;
            return this;
          }
          public Builder clearFriendsCount() {
            result.hasFriendsCount = false;
            result.friendsCount_ = 0;
            return this;
          }
          
          // optional int32 city_id = 4;
          public boolean hasCityId() {
            return result.hasCityId();
          }
          public int getCityId() {
            return result.getCityId();
          }
          public Builder setCityId(int value) {
            result.hasCityId = true;
            result.cityId_ = value;
            return this;
          }
          public Builder clearCityId() {
            result.hasCityId = false;
            result.cityId_ = 0;
            return this;
          }
          
          // optional int32 favorite_app_id = 5;
          public boolean hasFavoriteAppId() {
            return result.hasFavoriteAppId();
          }
          public int getFavoriteAppId() {
            return result.getFavoriteAppId();
          }
          public Builder setFavoriteAppId(int value) {
            result.hasFavoriteAppId = true;
            result.favoriteAppId_ = value;
            return this;
          }
          public Builder clearFavoriteAppId() {
            result.hasFavoriteAppId = false;
            result.favoriteAppId_ = 0;
            return this;
          }
          
          // optional uint32 time_created = 6;
          public boolean hasTimeCreated() {
            return result.hasTimeCreated();
          }
          public int getTimeCreated() {
            return result.getTimeCreated();
          }
          public Builder setTimeCreated(int value) {
            result.hasTimeCreated = true;
            result.timeCreated_ = value;
            return this;
          }
          public Builder clearTimeCreated() {
            result.hasTimeCreated = false;
            result.timeCreated_ = 0;
            return this;
          }
          
          // optional fixed64 game_id = 7;
          public boolean hasGameId() {
            return result.hasGameId();
          }
          public long getGameId() {
            return result.getGameId();
          }
          public Builder setGameId(long value) {
            result.hasGameId = true;
            result.gameId_ = value;
            return this;
          }
          public Builder clearGameId() {
            result.hasGameId = false;
            result.gameId_ = 0L;
            return this;
          }
          
          // optional fixed64 game_server_steam_id = 8;
          public boolean hasGameServerSteamId() {
            return result.hasGameServerSteamId();
          }
          public long getGameServerSteamId() {
            return result.getGameServerSteamId();
          }
          public Builder setGameServerSteamId(long value) {
            result.hasGameServerSteamId = true;
            result.gameServerSteamId_ = value;
            return this;
          }
          public Builder clearGameServerSteamId() {
            result.hasGameServerSteamId = false;
            result.gameServerSteamId_ = 0L;
            return this;
          }
          
          // optional uint32 game_server_ip_address = 9;
          public boolean hasGameServerIpAddress() {
            return result.hasGameServerIpAddress();
          }
          public int getGameServerIpAddress() {
            return result.getGameServerIpAddress();
          }
          public Builder setGameServerIpAddress(int value) {
            result.hasGameServerIpAddress = true;
            result.gameServerIpAddress_ = value;
            return this;
          }
          public Builder clearGameServerIpAddress() {
            result.hasGameServerIpAddress = false;
            result.gameServerIpAddress_ = 0;
            return this;
          }
          
          // optional uint32 game_server_port = 10;
          public boolean hasGameServerPort() {
            return result.hasGameServerPort();
          }
          public int getGameServerPort() {
            return result.getGameServerPort();
          }
          public Builder setGameServerPort(int value) {
            result.hasGameServerPort = true;
            result.gameServerPort_ = value;
            return this;
          }
          public Builder clearGameServerPort() {
            result.hasGameServerPort = false;
            result.gameServerPort_ = 0;
            return this;
          }
          
          // optional int32 skin_id = 11;
          public boolean hasSkinId() {
            return result.hasSkinId();
          }
          public int getSkinId() {
            return result.getSkinId();
          }
          public Builder setSkinId(int value) {
            result.hasSkinId = true;
            result.skinId_ = value;
            return this;
          }
          public Builder clearSkinId() {
            result.hasSkinId = false;
            result.skinId_ = 0;
            return this;
          }
          
          // optional uint32 wishlist_item_count = 12;
          public boolean hasWishlistItemCount() {
            return result.hasWishlistItemCount();
          }
          public int getWishlistItemCount() {
            return result.getWishlistItemCount();
          }
          public Builder setWishlistItemCount(int value) {
            result.hasWishlistItemCount = true;
            result.wishlistItemCount_ = value;
            return this;
          }
          public Builder clearWishlistItemCount() {
            result.hasWishlistItemCount = false;
            result.wishlistItemCount_ = 0;
            return this;
          }
          
          // optional string game_extra_info = 13;
          public boolean hasGameExtraInfo() {
            return result.hasGameExtraInfo();
          }
          public java.lang.String getGameExtraInfo() {
            return result.getGameExtraInfo();
          }
          public Builder setGameExtraInfo(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameExtraInfo = true;
            result.gameExtraInfo_ = value;
            return this;
          }
          public Builder clearGameExtraInfo() {
            result.hasGameExtraInfo = false;
            result.gameExtraInfo_ = getDefaultInstance().getGameExtraInfo();
            return this;
          }
          
          // optional string real_name = 14;
          public boolean hasRealName() {
            return result.hasRealName();
          }
          public java.lang.String getRealName() {
            return result.getRealName();
          }
          public Builder setRealName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasRealName = true;
            result.realName_ = value;
            return this;
          }
          public Builder clearRealName() {
            result.hasRealName = false;
            result.realName_ = getDefaultInstance().getRealName();
            return this;
          }
          
          // optional string state_code = 15;
          public boolean hasStateCode() {
            return result.hasStateCode();
          }
          public java.lang.String getStateCode() {
            return result.getStateCode();
          }
          public Builder setStateCode(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasStateCode = true;
            result.stateCode_ = value;
            return this;
          }
          public Builder clearStateCode() {
            result.hasStateCode = false;
            result.stateCode_ = getDefaultInstance().getStateCode();
            return this;
          }
          
          // optional string country_code = 16;
          public boolean hasCountryCode() {
            return result.hasCountryCode();
          }
          public java.lang.String getCountryCode() {
            return result.getCountryCode();
          }
          public Builder setCountryCode(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasCountryCode = true;
            result.countryCode_ = value;
            return this;
          }
          public Builder clearCountryCode() {
            result.hasCountryCode = false;
            result.countryCode_ = getDefaultInstance().getCountryCode();
            return this;
          }
          
          // optional string email = 17;
          public boolean hasEmail() {
            return result.hasEmail();
          }
          public java.lang.String getEmail() {
            return result.getEmail();
          }
          public Builder setEmail(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
            result.email_ = value;
            return this;
          }
          public Builder clearEmail() {
            result.hasEmail = false;
            result.email_ = getDefaultInstance().getEmail();
            return this;
          }
          
          // optional string headline = 18;
          public boolean hasHeadline() {
            return result.hasHeadline();
          }
          public java.lang.String getHeadline() {
            return result.getHeadline();
          }
          public Builder setHeadline(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadline = true;
            result.headline_ = value;
            return this;
          }
          public Builder clearHeadline() {
            result.hasHeadline = false;
            result.headline_ = getDefaultInstance().getHeadline();
            return this;
          }
          
          // optional string summary = 19;
          public boolean hasSummary() {
            return result.hasSummary();
          }
          public java.lang.String getSummary() {
            return result.getSummary();
          }
          public Builder setSummary(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasSummary = true;
            result.summary_ = value;
            return this;
          }
          public Builder clearSummary() {
            result.hasSummary = false;
            result.summary_ = getDefaultInstance().getSummary();
            return this;
          }
          
          // optional string account_name = 20;
          public boolean hasAccountName() {
            return result.hasAccountName();
          }
          public java.lang.String getAccountName() {
            return result.getAccountName();
          }
          public Builder setAccountName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasAccountName = true;
            result.accountName_ = value;
            return this;
          }
          public Builder clearAccountName() {
            result.hasAccountName = false;
            result.accountName_ = getDefaultInstance().getAccountName();
            return this;
          }
          
          // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.License licenses = 21;
          public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> getLicensesList() {
            return java.util.Collections.unmodifiableList(result.licenses_);
          }
          public int getLicensesCount() {
            return result.getLicensesCount();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License getLicenses(int index) {
            return result.getLicenses(index);
          }
          public Builder setLicenses(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.licenses_.set(index, value);
            return this;
          }
          public Builder setLicenses(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder builderForValue) {
            result.licenses_.set(index, builderForValue.build());
            return this;
          }
          public Builder addLicenses(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.licenses_.isEmpty()) {
              result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            result.licenses_.add(value);
            return this;
          }
          public Builder addLicenses(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder builderForValue) {
            if (result.licenses_.isEmpty()) {
              result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            result.licenses_.add(builderForValue.build());
            return this;
          }
          public Builder addAllLicenses(
              java.lang.Iterable<? extends SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> values) {
            if (result.licenses_.isEmpty()) {
              result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            super.addAll(values, result.licenses_);
            return this;
          }
          public Builder clearLicenses() {
            result.licenses_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.License temp_licenses = 22;
          public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> getTempLicensesList() {
            return java.util.Collections.unmodifiableList(result.tempLicenses_);
          }
          public int getTempLicensesCount() {
            return result.getTempLicensesCount();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License getTempLicenses(int index) {
            return result.getTempLicenses(index);
          }
          public Builder setTempLicenses(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.tempLicenses_.set(index, value);
            return this;
          }
          public Builder setTempLicenses(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder builderForValue) {
            result.tempLicenses_.set(index, builderForValue.build());
            return this;
          }
          public Builder addTempLicenses(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.tempLicenses_.isEmpty()) {
              result.tempLicenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            result.tempLicenses_.add(value);
            return this;
          }
          public Builder addTempLicenses(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder builderForValue) {
            if (result.tempLicenses_.isEmpty()) {
              result.tempLicenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            result.tempLicenses_.add(builderForValue.build());
            return this;
          }
          public Builder addAllTempLicenses(
              java.lang.Iterable<? extends SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License> values) {
            if (result.tempLicenses_.isEmpty()) {
              result.tempLicenses_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License>();
            }
            super.addAll(values, result.tempLicenses_);
            return this;
          }
          public Builder clearTempLicenses() {
            result.tempLicenses_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed games_played = 23;
          public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed> getGamesPlayedList() {
            return java.util.Collections.unmodifiableList(result.gamesPlayed_);
          }
          public int getGamesPlayedCount() {
            return result.getGamesPlayedCount();
          }
          public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed getGamesPlayed(int index) {
            return result.getGamesPlayed(index);
          }
          public Builder setGamesPlayed(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.gamesPlayed_.set(index, value);
            return this;
          }
          public Builder setGamesPlayed(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.Builder builderForValue) {
            result.gamesPlayed_.set(index, builderForValue.build());
            return this;
          }
          public Builder addGamesPlayed(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.gamesPlayed_.isEmpty()) {
              result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed>();
            }
            result.gamesPlayed_.add(value);
            return this;
          }
          public Builder addGamesPlayed(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.Builder builderForValue) {
            if (result.gamesPlayed_.isEmpty()) {
              result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed>();
            }
            result.gamesPlayed_.add(builderForValue.build());
            return this;
          }
          public Builder addAllGamesPlayed(
              java.lang.Iterable<? extends SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed> values) {
            if (result.gamesPlayed_.isEmpty()) {
              result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed>();
            }
            super.addAll(values, result.gamesPlayed_);
            return this;
          }
          public Builder clearGamesPlayed() {
            result.gamesPlayed_ = java.util.Collections.emptyList();
            return this;
          }
          
          // optional fixed64 lobby_steam_id = 24;
          public boolean hasLobbySteamId() {
            return result.hasLobbySteamId();
          }
          public long getLobbySteamId() {
            return result.getLobbySteamId();
          }
          public Builder setLobbySteamId(long value) {
            result.hasLobbySteamId = true;
            result.lobbySteamId_ = value;
            return this;
          }
          public Builder clearLobbySteamId() {
            result.hasLobbySteamId = false;
            result.lobbySteamId_ = 0L;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData)
        }
        
        static {
          defaultInstance = new AccountPrivateData(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData)
      }
      
      // optional .CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData public_data = 1;
      public static final int PUBLIC_DATA_FIELD_NUMBER = 1;
      private boolean hasPublicData;
      private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData publicData_;
      public boolean hasPublicData() { return hasPublicData; }
      public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData getPublicData() { return publicData_; }
      
      // optional .CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData private_data = 2;
      public static final int PRIVATE_DATA_FIELD_NUMBER = 2;
      private boolean hasPrivateData;
      private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData privateData_;
      public boolean hasPrivateData() { return hasPrivateData; }
      public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData getPrivateData() { return privateData_; }
      
      private void initFields() {
        publicData_ = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
        privateData_ = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (hasPublicData()) {
          if (!getPublicData().isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasPublicData()) {
          output.writeMessage(1, getPublicData());
        }
        if (hasPrivateData()) {
          output.writeMessage(2, getPrivateData());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasPublicData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPublicData());
        }
        if (hasPrivateData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getPrivateData());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail result;
        
        // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail();
          return builder;
        }
        
        protected SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.getDescriptor();
        }
        
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail getDefaultInstanceForType() {
          return SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail) {
            return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail other) {
          if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.getDefaultInstance()) return this;
          if (other.hasPublicData()) {
            mergePublicData(other.getPublicData());
          }
          if (other.hasPrivateData()) {
            mergePrivateData(other.getPrivateData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.newBuilder();
                if (hasPublicData()) {
                  subBuilder.mergeFrom(getPublicData());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPublicData(subBuilder.buildPartial());
                break;
              }
              case 18: {
                SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.newBuilder();
                if (hasPrivateData()) {
                  subBuilder.mergeFrom(getPrivateData());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPrivateData(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // optional .CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData public_data = 1;
        public boolean hasPublicData() {
          return result.hasPublicData();
        }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData getPublicData() {
          return result.getPublicData();
        }
        public Builder setPublicData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasPublicData = true;
          result.publicData_ = value;
          return this;
        }
        public Builder setPublicData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.Builder builderForValue) {
          result.hasPublicData = true;
          result.publicData_ = builderForValue.build();
          return this;
        }
        public Builder mergePublicData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData value) {
          if (result.hasPublicData() &&
              result.publicData_ != SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance()) {
            result.publicData_ =
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.newBuilder(result.publicData_).mergeFrom(value).buildPartial();
          } else {
            result.publicData_ = value;
          }
          result.hasPublicData = true;
          return this;
        }
        public Builder clearPublicData() {
          result.hasPublicData = false;
          result.publicData_ = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
          return this;
        }
        
        // optional .CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData private_data = 2;
        public boolean hasPrivateData() {
          return result.hasPrivateData();
        }
        public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData getPrivateData() {
          return result.getPrivateData();
        }
        public Builder setPrivateData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasPrivateData = true;
          result.privateData_ = value;
          return this;
        }
        public Builder setPrivateData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.Builder builderForValue) {
          result.hasPrivateData = true;
          result.privateData_ = builderForValue.build();
          return this;
        }
        public Builder mergePrivateData(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData value) {
          if (result.hasPrivateData() &&
              result.privateData_ != SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance()) {
            result.privateData_ =
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.newBuilder(result.privateData_).mergeFrom(value).buildPartial();
          } else {
            result.privateData_ = value;
          }
          result.hasPrivateData = true;
          return this;
        }
        public Builder clearPrivateData() {
          result.hasPrivateData = false;
          result.privateData_ = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse.AccountDetail)
      }
      
      static {
        defaultInstance = new AccountDetail(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse.AccountDetail)
    }
    
    // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail accounts = 1;
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail> accounts_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail> getAccountsList() {
      return accounts_;
    }
    public int getAccountsCount() { return accounts_.size(); }
    public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail getAccounts(int index) {
      return accounts_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail element : getAccountsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail element : getAccountsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail element : getAccountsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetAccountDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMGetAccountDetailsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMGetAccountDetailsResponse result;
      
      // Construct using SteamMessages.CMsgAMGetAccountDetailsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMGetAccountDetailsResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgAMGetAccountDetailsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMGetAccountDetailsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMGetAccountDetailsResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgAMGetAccountDetailsResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgAMGetAccountDetailsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMGetAccountDetailsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMGetAccountDetailsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMGetAccountDetailsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accounts_ != java.util.Collections.EMPTY_LIST) {
          result.accounts_ =
            java.util.Collections.unmodifiableList(result.accounts_);
        }
        SteamMessages.CMsgAMGetAccountDetailsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMGetAccountDetailsResponse) {
          return mergeFrom((SteamMessages.CMsgAMGetAccountDetailsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMGetAccountDetailsResponse other) {
        if (other == SteamMessages.CMsgAMGetAccountDetailsResponse.getDefaultInstance()) return this;
        if (!other.accounts_.isEmpty()) {
          if (result.accounts_.isEmpty()) {
            result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail>();
          }
          result.accounts_.addAll(other.accounts_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.Builder subBuilder = SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAccounts(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .CMsgAMGetAccountDetailsResponse.AccountDetail accounts = 1;
      public java.util.List<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail> getAccountsList() {
        return java.util.Collections.unmodifiableList(result.accounts_);
      }
      public int getAccountsCount() {
        return result.getAccountsCount();
      }
      public SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail getAccounts(int index) {
        return result.getAccounts(index);
      }
      public Builder setAccounts(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.accounts_.set(index, value);
        return this;
      }
      public Builder setAccounts(int index, SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.Builder builderForValue) {
        result.accounts_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAccounts(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail>();
        }
        result.accounts_.add(value);
        return this;
      }
      public Builder addAccounts(SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.Builder builderForValue) {
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail>();
        }
        result.accounts_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAccounts(
          java.lang.Iterable<? extends SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail> values) {
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail>();
        }
        super.addAll(values, result.accounts_);
        return this;
      }
      public Builder clearAccounts() {
        result.accounts_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMGetAccountDetailsResponse)
    }
    
    static {
      defaultInstance = new CMsgAMGetAccountDetailsResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMGetAccountDetailsResponse)
  }
  
  public static final class CMsgAMGetPlayerLinkDetails extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMGetPlayerLinkDetails.newBuilder() to construct.
    private CMsgAMGetPlayerLinkDetails() {
      initFields();
    }
    private CMsgAMGetPlayerLinkDetails(boolean noInit) {}
    
    private static final CMsgAMGetPlayerLinkDetails defaultInstance;
    public static CMsgAMGetPlayerLinkDetails getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMGetPlayerLinkDetails getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetails_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetails_fieldAccessorTable;
    }
    
    // optional fixed64 authenticated_steam_id = 1;
    public static final int AUTHENTICATED_STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasAuthenticatedSteamId;
    private long authenticatedSteamId_ = 0L;
    public boolean hasAuthenticatedSteamId() { return hasAuthenticatedSteamId; }
    public long getAuthenticatedSteamId() { return authenticatedSteamId_; }
    
    // optional uint32 requester_flags = 2;
    public static final int REQUESTER_FLAGS_FIELD_NUMBER = 2;
    private boolean hasRequesterFlags;
    private int requesterFlags_ = 0;
    public boolean hasRequesterFlags() { return hasRequesterFlags; }
    public int getRequesterFlags() { return requesterFlags_; }
    
    // repeated fixed64 account_list = 3;
    public static final int ACCOUNT_LIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> accountList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getAccountListList() {
      return accountList_;
    }
    public int getAccountListCount() { return accountList_.size(); }
    public long getAccountList(int index) {
      return accountList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAuthenticatedSteamId()) {
        output.writeFixed64(1, getAuthenticatedSteamId());
      }
      if (hasRequesterFlags()) {
        output.writeUInt32(2, getRequesterFlags());
      }
      for (long element : getAccountListList()) {
        output.writeFixed64(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAuthenticatedSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getAuthenticatedSteamId());
      }
      if (hasRequesterFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getRequesterFlags());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAccountListList().size();
        size += dataSize;
        size += 1 * getAccountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMGetPlayerLinkDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMGetPlayerLinkDetails result;
      
      // Construct using SteamMessages.CMsgAMGetPlayerLinkDetails.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMGetPlayerLinkDetails();
        return builder;
      }
      
      protected SteamMessages.CMsgAMGetPlayerLinkDetails internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMGetPlayerLinkDetails();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMGetPlayerLinkDetails.getDescriptor();
      }
      
      public SteamMessages.CMsgAMGetPlayerLinkDetails getDefaultInstanceForType() {
        return SteamMessages.CMsgAMGetPlayerLinkDetails.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMGetPlayerLinkDetails build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMGetPlayerLinkDetails buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMGetPlayerLinkDetails buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accountList_ != java.util.Collections.EMPTY_LIST) {
          result.accountList_ =
            java.util.Collections.unmodifiableList(result.accountList_);
        }
        SteamMessages.CMsgAMGetPlayerLinkDetails returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMGetPlayerLinkDetails) {
          return mergeFrom((SteamMessages.CMsgAMGetPlayerLinkDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMGetPlayerLinkDetails other) {
        if (other == SteamMessages.CMsgAMGetPlayerLinkDetails.getDefaultInstance()) return this;
        if (other.hasAuthenticatedSteamId()) {
          setAuthenticatedSteamId(other.getAuthenticatedSteamId());
        }
        if (other.hasRequesterFlags()) {
          setRequesterFlags(other.getRequesterFlags());
        }
        if (!other.accountList_.isEmpty()) {
          if (result.accountList_.isEmpty()) {
            result.accountList_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.accountList_.addAll(other.accountList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setAuthenticatedSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setRequesterFlags(input.readUInt32());
              break;
            }
            case 25: {
              addAccountList(input.readFixed64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAccountList(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 authenticated_steam_id = 1;
      public boolean hasAuthenticatedSteamId() {
        return result.hasAuthenticatedSteamId();
      }
      public long getAuthenticatedSteamId() {
        return result.getAuthenticatedSteamId();
      }
      public Builder setAuthenticatedSteamId(long value) {
        result.hasAuthenticatedSteamId = true;
        result.authenticatedSteamId_ = value;
        return this;
      }
      public Builder clearAuthenticatedSteamId() {
        result.hasAuthenticatedSteamId = false;
        result.authenticatedSteamId_ = 0L;
        return this;
      }
      
      // optional uint32 requester_flags = 2;
      public boolean hasRequesterFlags() {
        return result.hasRequesterFlags();
      }
      public int getRequesterFlags() {
        return result.getRequesterFlags();
      }
      public Builder setRequesterFlags(int value) {
        result.hasRequesterFlags = true;
        result.requesterFlags_ = value;
        return this;
      }
      public Builder clearRequesterFlags() {
        result.hasRequesterFlags = false;
        result.requesterFlags_ = 0;
        return this;
      }
      
      // repeated fixed64 account_list = 3;
      public java.util.List<java.lang.Long> getAccountListList() {
        return java.util.Collections.unmodifiableList(result.accountList_);
      }
      public int getAccountListCount() {
        return result.getAccountListCount();
      }
      public long getAccountList(int index) {
        return result.getAccountList(index);
      }
      public Builder setAccountList(int index, long value) {
        result.accountList_.set(index, value);
        return this;
      }
      public Builder addAccountList(long value) {
        if (result.accountList_.isEmpty()) {
          result.accountList_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.accountList_.add(value);
        return this;
      }
      public Builder addAllAccountList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.accountList_.isEmpty()) {
          result.accountList_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.accountList_);
        return this;
      }
      public Builder clearAccountList() {
        result.accountList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMGetPlayerLinkDetails)
    }
    
    static {
      defaultInstance = new CMsgAMGetPlayerLinkDetails(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMGetPlayerLinkDetails)
  }
  
  public static final class CMsgAMGetPlayerLinkDetailsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMGetPlayerLinkDetailsResponse.newBuilder() to construct.
    private CMsgAMGetPlayerLinkDetailsResponse() {
      initFields();
    }
    private CMsgAMGetPlayerLinkDetailsResponse(boolean noInit) {}
    
    private static final CMsgAMGetPlayerLinkDetailsResponse defaultInstance;
    public static CMsgAMGetPlayerLinkDetailsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMGetPlayerLinkDetailsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_fieldAccessorTable;
    }
    
    public static final class AccountDetail extends
        com.google.protobuf.GeneratedMessage {
      // Use AccountDetail.newBuilder() to construct.
      private AccountDetail() {
        initFields();
      }
      private AccountDetail(boolean noInit) {}
      
      private static final AccountDetail defaultInstance;
      public static AccountDetail getDefaultInstance() {
        return defaultInstance;
      }
      
      public AccountDetail getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_fieldAccessorTable;
      }
      
      public static final class AccountPublicData extends
          com.google.protobuf.GeneratedMessage {
        // Use AccountPublicData.newBuilder() to construct.
        private AccountPublicData() {
          initFields();
        }
        private AccountPublicData(boolean noInit) {}
        
        private static final AccountPublicData defaultInstance;
        public static AccountPublicData getDefaultInstance() {
          return defaultInstance;
        }
        
        public AccountPublicData getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable;
        }
        
        // required fixed64 steam_id = 1;
        public static final int STEAM_ID_FIELD_NUMBER = 1;
        private boolean hasSteamId;
        private long steamId_ = 0L;
        public boolean hasSteamId() { return hasSteamId; }
        public long getSteamId() { return steamId_; }
        
        // optional int32 visibility_state = 2;
        public static final int VISIBILITY_STATE_FIELD_NUMBER = 2;
        private boolean hasVisibilityState;
        private int visibilityState_ = 0;
        public boolean hasVisibilityState() { return hasVisibilityState; }
        public int getVisibilityState() { return visibilityState_; }
        
        // optional int32 privacy_state = 3;
        public static final int PRIVACY_STATE_FIELD_NUMBER = 3;
        private boolean hasPrivacyState;
        private int privacyState_ = 0;
        public boolean hasPrivacyState() { return hasPrivacyState; }
        public int getPrivacyState() { return privacyState_; }
        
        // optional int32 profile_state = 4;
        public static final int PROFILE_STATE_FIELD_NUMBER = 4;
        private boolean hasProfileState;
        private int profileState_ = 0;
        public boolean hasProfileState() { return hasProfileState; }
        public int getProfileState() { return profileState_; }
        
        // optional int32 comment_permission = 5;
        public static final int COMMENT_PERMISSION_FIELD_NUMBER = 5;
        private boolean hasCommentPermission;
        private int commentPermission_ = 0;
        public boolean hasCommentPermission() { return hasCommentPermission; }
        public int getCommentPermission() { return commentPermission_; }
        
        // optional uint32 last_logoff_time = 6;
        public static final int LAST_LOGOFF_TIME_FIELD_NUMBER = 6;
        private boolean hasLastLogoffTime;
        private int lastLogoffTime_ = 0;
        public boolean hasLastLogoffTime() { return hasLastLogoffTime; }
        public int getLastLogoffTime() { return lastLogoffTime_; }
        
        // optional uint32 ban_expires_time = 7;
        public static final int BAN_EXPIRES_TIME_FIELD_NUMBER = 7;
        private boolean hasBanExpiresTime;
        private int banExpiresTime_ = 0;
        public boolean hasBanExpiresTime() { return hasBanExpiresTime; }
        public int getBanExpiresTime() { return banExpiresTime_; }
        
        // optional uint32 account_flags = 8;
        public static final int ACCOUNT_FLAGS_FIELD_NUMBER = 8;
        private boolean hasAccountFlags;
        private int accountFlags_ = 0;
        public boolean hasAccountFlags() { return hasAccountFlags; }
        public int getAccountFlags() { return accountFlags_; }
        
        // optional bytes sha_digest_avatar = 9;
        public static final int SHA_DIGEST_AVATAR_FIELD_NUMBER = 9;
        private boolean hasShaDigestAvatar;
        private com.google.protobuf.ByteString shaDigestAvatar_ = com.google.protobuf.ByteString.EMPTY;
        public boolean hasShaDigestAvatar() { return hasShaDigestAvatar; }
        public com.google.protobuf.ByteString getShaDigestAvatar() { return shaDigestAvatar_; }
        
        // optional string persona_name = 11;
        public static final int PERSONA_NAME_FIELD_NUMBER = 11;
        private boolean hasPersonaName;
        private java.lang.String personaName_ = "";
        public boolean hasPersonaName() { return hasPersonaName; }
        public java.lang.String getPersonaName() { return personaName_; }
        
        // optional string profile_url = 12;
        public static final int PROFILE_URL_FIELD_NUMBER = 12;
        private boolean hasProfileUrl;
        private java.lang.String profileUrl_ = "";
        public boolean hasProfileUrl() { return hasProfileUrl; }
        public java.lang.String getProfileUrl() { return profileUrl_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          if (!hasSteamId) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasSteamId()) {
            output.writeFixed64(1, getSteamId());
          }
          if (hasVisibilityState()) {
            output.writeInt32(2, getVisibilityState());
          }
          if (hasPrivacyState()) {
            output.writeInt32(3, getPrivacyState());
          }
          if (hasProfileState()) {
            output.writeInt32(4, getProfileState());
          }
          if (hasCommentPermission()) {
            output.writeInt32(5, getCommentPermission());
          }
          if (hasLastLogoffTime()) {
            output.writeUInt32(6, getLastLogoffTime());
          }
          if (hasBanExpiresTime()) {
            output.writeUInt32(7, getBanExpiresTime());
          }
          if (hasAccountFlags()) {
            output.writeUInt32(8, getAccountFlags());
          }
          if (hasShaDigestAvatar()) {
            output.writeBytes(9, getShaDigestAvatar());
          }
          if (hasPersonaName()) {
            output.writeString(11, getPersonaName());
          }
          if (hasProfileUrl()) {
            output.writeString(12, getProfileUrl());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasSteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(1, getSteamId());
          }
          if (hasVisibilityState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, getVisibilityState());
          }
          if (hasPrivacyState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, getPrivacyState());
          }
          if (hasProfileState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, getProfileState());
          }
          if (hasCommentPermission()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, getCommentPermission());
          }
          if (hasLastLogoffTime()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, getLastLogoffTime());
          }
          if (hasBanExpiresTime()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, getBanExpiresTime());
          }
          if (hasAccountFlags()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, getAccountFlags());
          }
          if (hasShaDigestAvatar()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(9, getShaDigestAvatar());
          }
          if (hasPersonaName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(11, getPersonaName());
          }
          if (hasProfileUrl()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(12, getProfileUrl());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData result;
          
          // Construct using SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData) {
              return mergeFrom((SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData other) {
            if (other == SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance()) return this;
            if (other.hasSteamId()) {
              setSteamId(other.getSteamId());
            }
            if (other.hasVisibilityState()) {
              setVisibilityState(other.getVisibilityState());
            }
            if (other.hasPrivacyState()) {
              setPrivacyState(other.getPrivacyState());
            }
            if (other.hasProfileState()) {
              setProfileState(other.getProfileState());
            }
            if (other.hasCommentPermission()) {
              setCommentPermission(other.getCommentPermission());
            }
            if (other.hasLastLogoffTime()) {
              setLastLogoffTime(other.getLastLogoffTime());
            }
            if (other.hasBanExpiresTime()) {
              setBanExpiresTime(other.getBanExpiresTime());
            }
            if (other.hasAccountFlags()) {
              setAccountFlags(other.getAccountFlags());
            }
            if (other.hasShaDigestAvatar()) {
              setShaDigestAvatar(other.getShaDigestAvatar());
            }
            if (other.hasPersonaName()) {
              setPersonaName(other.getPersonaName());
            }
            if (other.hasProfileUrl()) {
              setProfileUrl(other.getProfileUrl());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 9: {
                  setSteamId(input.readFixed64());
                  break;
                }
                case 16: {
                  setVisibilityState(input.readInt32());
                  break;
                }
                case 24: {
                  setPrivacyState(input.readInt32());
                  break;
                }
                case 32: {
                  setProfileState(input.readInt32());
                  break;
                }
                case 40: {
                  setCommentPermission(input.readInt32());
                  break;
                }
                case 48: {
                  setLastLogoffTime(input.readUInt32());
                  break;
                }
                case 56: {
                  setBanExpiresTime(input.readUInt32());
                  break;
                }
                case 64: {
                  setAccountFlags(input.readUInt32());
                  break;
                }
                case 74: {
                  setShaDigestAvatar(input.readBytes());
                  break;
                }
                case 90: {
                  setPersonaName(input.readString());
                  break;
                }
                case 98: {
                  setProfileUrl(input.readString());
                  break;
                }
              }
            }
          }
          
          
          // required fixed64 steam_id = 1;
          public boolean hasSteamId() {
            return result.hasSteamId();
          }
          public long getSteamId() {
            return result.getSteamId();
          }
          public Builder setSteamId(long value) {
            result.hasSteamId = true;
            result.steamId_ = value;
            return this;
          }
          public Builder clearSteamId() {
            result.hasSteamId = false;
            result.steamId_ = 0L;
            return this;
          }
          
          // optional int32 visibility_state = 2;
          public boolean hasVisibilityState() {
            return result.hasVisibilityState();
          }
          public int getVisibilityState() {
            return result.getVisibilityState();
          }
          public Builder setVisibilityState(int value) {
            result.hasVisibilityState = true;
            result.visibilityState_ = value;
            return this;
          }
          public Builder clearVisibilityState() {
            result.hasVisibilityState = false;
            result.visibilityState_ = 0;
            return this;
          }
          
          // optional int32 privacy_state = 3;
          public boolean hasPrivacyState() {
            return result.hasPrivacyState();
          }
          public int getPrivacyState() {
            return result.getPrivacyState();
          }
          public Builder setPrivacyState(int value) {
            result.hasPrivacyState = true;
            result.privacyState_ = value;
            return this;
          }
          public Builder clearPrivacyState() {
            result.hasPrivacyState = false;
            result.privacyState_ = 0;
            return this;
          }
          
          // optional int32 profile_state = 4;
          public boolean hasProfileState() {
            return result.hasProfileState();
          }
          public int getProfileState() {
            return result.getProfileState();
          }
          public Builder setProfileState(int value) {
            result.hasProfileState = true;
            result.profileState_ = value;
            return this;
          }
          public Builder clearProfileState() {
            result.hasProfileState = false;
            result.profileState_ = 0;
            return this;
          }
          
          // optional int32 comment_permission = 5;
          public boolean hasCommentPermission() {
            return result.hasCommentPermission();
          }
          public int getCommentPermission() {
            return result.getCommentPermission();
          }
          public Builder setCommentPermission(int value) {
            result.hasCommentPermission = true;
            result.commentPermission_ = value;
            return this;
          }
          public Builder clearCommentPermission() {
            result.hasCommentPermission = false;
            result.commentPermission_ = 0;
            return this;
          }
          
          // optional uint32 last_logoff_time = 6;
          public boolean hasLastLogoffTime() {
            return result.hasLastLogoffTime();
          }
          public int getLastLogoffTime() {
            return result.getLastLogoffTime();
          }
          public Builder setLastLogoffTime(int value) {
            result.hasLastLogoffTime = true;
            result.lastLogoffTime_ = value;
            return this;
          }
          public Builder clearLastLogoffTime() {
            result.hasLastLogoffTime = false;
            result.lastLogoffTime_ = 0;
            return this;
          }
          
          // optional uint32 ban_expires_time = 7;
          public boolean hasBanExpiresTime() {
            return result.hasBanExpiresTime();
          }
          public int getBanExpiresTime() {
            return result.getBanExpiresTime();
          }
          public Builder setBanExpiresTime(int value) {
            result.hasBanExpiresTime = true;
            result.banExpiresTime_ = value;
            return this;
          }
          public Builder clearBanExpiresTime() {
            result.hasBanExpiresTime = false;
            result.banExpiresTime_ = 0;
            return this;
          }
          
          // optional uint32 account_flags = 8;
          public boolean hasAccountFlags() {
            return result.hasAccountFlags();
          }
          public int getAccountFlags() {
            return result.getAccountFlags();
          }
          public Builder setAccountFlags(int value) {
            result.hasAccountFlags = true;
            result.accountFlags_ = value;
            return this;
          }
          public Builder clearAccountFlags() {
            result.hasAccountFlags = false;
            result.accountFlags_ = 0;
            return this;
          }
          
          // optional bytes sha_digest_avatar = 9;
          public boolean hasShaDigestAvatar() {
            return result.hasShaDigestAvatar();
          }
          public com.google.protobuf.ByteString getShaDigestAvatar() {
            return result.getShaDigestAvatar();
          }
          public Builder setShaDigestAvatar(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasShaDigestAvatar = true;
            result.shaDigestAvatar_ = value;
            return this;
          }
          public Builder clearShaDigestAvatar() {
            result.hasShaDigestAvatar = false;
            result.shaDigestAvatar_ = getDefaultInstance().getShaDigestAvatar();
            return this;
          }
          
          // optional string persona_name = 11;
          public boolean hasPersonaName() {
            return result.hasPersonaName();
          }
          public java.lang.String getPersonaName() {
            return result.getPersonaName();
          }
          public Builder setPersonaName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
            result.personaName_ = value;
            return this;
          }
          public Builder clearPersonaName() {
            result.hasPersonaName = false;
            result.personaName_ = getDefaultInstance().getPersonaName();
            return this;
          }
          
          // optional string profile_url = 12;
          public boolean hasProfileUrl() {
            return result.hasProfileUrl();
          }
          public java.lang.String getProfileUrl() {
            return result.getProfileUrl();
          }
          public Builder setProfileUrl(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasProfileUrl = true;
            result.profileUrl_ = value;
            return this;
          }
          public Builder clearProfileUrl() {
            result.hasProfileUrl = false;
            result.profileUrl_ = getDefaultInstance().getProfileUrl();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData)
        }
        
        static {
          defaultInstance = new AccountPublicData(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData)
      }
      
      public static final class AccountPrivateData extends
          com.google.protobuf.GeneratedMessage {
        // Use AccountPrivateData.newBuilder() to construct.
        private AccountPrivateData() {
          initFields();
        }
        private AccountPrivateData(boolean noInit) {}
        
        private static final AccountPrivateData defaultInstance;
        public static AccountPrivateData getDefaultInstance() {
          return defaultInstance;
        }
        
        public AccountPrivateData getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteamMessages.internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable;
        }
        
        // optional int32 persona_state = 1;
        public static final int PERSONA_STATE_FIELD_NUMBER = 1;
        private boolean hasPersonaState;
        private int personaState_ = 0;
        public boolean hasPersonaState() { return hasPersonaState; }
        public int getPersonaState() { return personaState_; }
        
        // optional fixed64 primary_clan_id = 2;
        public static final int PRIMARY_CLAN_ID_FIELD_NUMBER = 2;
        private boolean hasPrimaryClanId;
        private long primaryClanId_ = 0L;
        public boolean hasPrimaryClanId() { return hasPrimaryClanId; }
        public long getPrimaryClanId() { return primaryClanId_; }
        
        // optional int32 city_id = 4;
        public static final int CITY_ID_FIELD_NUMBER = 4;
        private boolean hasCityId;
        private int cityId_ = 0;
        public boolean hasCityId() { return hasCityId; }
        public int getCityId() { return cityId_; }
        
        // optional uint32 time_created = 6;
        public static final int TIME_CREATED_FIELD_NUMBER = 6;
        private boolean hasTimeCreated;
        private int timeCreated_ = 0;
        public boolean hasTimeCreated() { return hasTimeCreated; }
        public int getTimeCreated() { return timeCreated_; }
        
        // optional fixed64 game_id = 7;
        public static final int GAME_ID_FIELD_NUMBER = 7;
        private boolean hasGameId;
        private long gameId_ = 0L;
        public boolean hasGameId() { return hasGameId; }
        public long getGameId() { return gameId_; }
        
        // optional fixed64 game_server_steam_id = 8;
        public static final int GAME_SERVER_STEAM_ID_FIELD_NUMBER = 8;
        private boolean hasGameServerSteamId;
        private long gameServerSteamId_ = 0L;
        public boolean hasGameServerSteamId() { return hasGameServerSteamId; }
        public long getGameServerSteamId() { return gameServerSteamId_; }
        
        // optional uint32 game_server_ip_address = 9;
        public static final int GAME_SERVER_IP_ADDRESS_FIELD_NUMBER = 9;
        private boolean hasGameServerIpAddress;
        private int gameServerIpAddress_ = 0;
        public boolean hasGameServerIpAddress() { return hasGameServerIpAddress; }
        public int getGameServerIpAddress() { return gameServerIpAddress_; }
        
        // optional uint32 game_server_port = 10;
        public static final int GAME_SERVER_PORT_FIELD_NUMBER = 10;
        private boolean hasGameServerPort;
        private int gameServerPort_ = 0;
        public boolean hasGameServerPort() { return hasGameServerPort; }
        public int getGameServerPort() { return gameServerPort_; }
        
        // optional string game_extra_info = 13;
        public static final int GAME_EXTRA_INFO_FIELD_NUMBER = 13;
        private boolean hasGameExtraInfo;
        private java.lang.String gameExtraInfo_ = "";
        public boolean hasGameExtraInfo() { return hasGameExtraInfo; }
        public java.lang.String getGameExtraInfo() { return gameExtraInfo_; }
        
        // optional string real_name = 14;
        public static final int REAL_NAME_FIELD_NUMBER = 14;
        private boolean hasRealName;
        private java.lang.String realName_ = "";
        public boolean hasRealName() { return hasRealName; }
        public java.lang.String getRealName() { return realName_; }
        
        // optional string state_code = 15;
        public static final int STATE_CODE_FIELD_NUMBER = 15;
        private boolean hasStateCode;
        private java.lang.String stateCode_ = "";
        public boolean hasStateCode() { return hasStateCode; }
        public java.lang.String getStateCode() { return stateCode_; }
        
        // optional string country_code = 16;
        public static final int COUNTRY_CODE_FIELD_NUMBER = 16;
        private boolean hasCountryCode;
        private java.lang.String countryCode_ = "";
        public boolean hasCountryCode() { return hasCountryCode; }
        public java.lang.String getCountryCode() { return countryCode_; }
        
        // optional string account_name = 20;
        public static final int ACCOUNT_NAME_FIELD_NUMBER = 20;
        private boolean hasAccountName;
        private java.lang.String accountName_ = "";
        public boolean hasAccountName() { return hasAccountName; }
        public java.lang.String getAccountName() { return accountName_; }
        
        // optional fixed64 lobby_steam_id = 21;
        public static final int LOBBY_STEAM_ID_FIELD_NUMBER = 21;
        private boolean hasLobbySteamId;
        private long lobbySteamId_ = 0L;
        public boolean hasLobbySteamId() { return hasLobbySteamId; }
        public long getLobbySteamId() { return lobbySteamId_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasPersonaState()) {
            output.writeInt32(1, getPersonaState());
          }
          if (hasPrimaryClanId()) {
            output.writeFixed64(2, getPrimaryClanId());
          }
          if (hasCityId()) {
            output.writeInt32(4, getCityId());
          }
          if (hasTimeCreated()) {
            output.writeUInt32(6, getTimeCreated());
          }
          if (hasGameId()) {
            output.writeFixed64(7, getGameId());
          }
          if (hasGameServerSteamId()) {
            output.writeFixed64(8, getGameServerSteamId());
          }
          if (hasGameServerIpAddress()) {
            output.writeUInt32(9, getGameServerIpAddress());
          }
          if (hasGameServerPort()) {
            output.writeUInt32(10, getGameServerPort());
          }
          if (hasGameExtraInfo()) {
            output.writeString(13, getGameExtraInfo());
          }
          if (hasRealName()) {
            output.writeString(14, getRealName());
          }
          if (hasStateCode()) {
            output.writeString(15, getStateCode());
          }
          if (hasCountryCode()) {
            output.writeString(16, getCountryCode());
          }
          if (hasAccountName()) {
            output.writeString(20, getAccountName());
          }
          if (hasLobbySteamId()) {
            output.writeFixed64(21, getLobbySteamId());
          }
          getUnknownFields().writeTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasPersonaState()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, getPersonaState());
          }
          if (hasPrimaryClanId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(2, getPrimaryClanId());
          }
          if (hasCityId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, getCityId());
          }
          if (hasTimeCreated()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, getTimeCreated());
          }
          if (hasGameId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(7, getGameId());
          }
          if (hasGameServerSteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(8, getGameServerSteamId());
          }
          if (hasGameServerIpAddress()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(9, getGameServerIpAddress());
          }
          if (hasGameServerPort()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(10, getGameServerPort());
          }
          if (hasGameExtraInfo()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(13, getGameExtraInfo());
          }
          if (hasRealName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(14, getRealName());
          }
          if (hasStateCode()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(15, getStateCode());
          }
          if (hasCountryCode()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(16, getCountryCode());
          }
          if (hasAccountName()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(20, getAccountName());
          }
          if (hasLobbySteamId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed64Size(21, getLobbySteamId());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }
        
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> {
          private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData result;
          
          // Construct using SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData();
            return builder;
          }
          
          protected SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDescriptor();
          }
          
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData getDefaultInstanceForType() {
            return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData) {
              return mergeFrom((SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }
          
          public Builder mergeFrom(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData other) {
            if (other == SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance()) return this;
            if (other.hasPersonaState()) {
              setPersonaState(other.getPersonaState());
            }
            if (other.hasPrimaryClanId()) {
              setPrimaryClanId(other.getPrimaryClanId());
            }
            if (other.hasCityId()) {
              setCityId(other.getCityId());
            }
            if (other.hasTimeCreated()) {
              setTimeCreated(other.getTimeCreated());
            }
            if (other.hasGameId()) {
              setGameId(other.getGameId());
            }
            if (other.hasGameServerSteamId()) {
              setGameServerSteamId(other.getGameServerSteamId());
            }
            if (other.hasGameServerIpAddress()) {
              setGameServerIpAddress(other.getGameServerIpAddress());
            }
            if (other.hasGameServerPort()) {
              setGameServerPort(other.getGameServerPort());
            }
            if (other.hasGameExtraInfo()) {
              setGameExtraInfo(other.getGameExtraInfo());
            }
            if (other.hasRealName()) {
              setRealName(other.getRealName());
            }
            if (other.hasStateCode()) {
              setStateCode(other.getStateCode());
            }
            if (other.hasCountryCode()) {
              setCountryCode(other.getCountryCode());
            }
            if (other.hasAccountName()) {
              setAccountName(other.getAccountName());
            }
            if (other.hasLobbySteamId()) {
              setLobbySteamId(other.getLobbySteamId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder(
                this.getUnknownFields());
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  this.setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    this.setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 8: {
                  setPersonaState(input.readInt32());
                  break;
                }
                case 17: {
                  setPrimaryClanId(input.readFixed64());
                  break;
                }
                case 32: {
                  setCityId(input.readInt32());
                  break;
                }
                case 48: {
                  setTimeCreated(input.readUInt32());
                  break;
                }
                case 57: {
                  setGameId(input.readFixed64());
                  break;
                }
                case 65: {
                  setGameServerSteamId(input.readFixed64());
                  break;
                }
                case 72: {
                  setGameServerIpAddress(input.readUInt32());
                  break;
                }
                case 80: {
                  setGameServerPort(input.readUInt32());
                  break;
                }
                case 106: {
                  setGameExtraInfo(input.readString());
                  break;
                }
                case 114: {
                  setRealName(input.readString());
                  break;
                }
                case 122: {
                  setStateCode(input.readString());
                  break;
                }
                case 130: {
                  setCountryCode(input.readString());
                  break;
                }
                case 162: {
                  setAccountName(input.readString());
                  break;
                }
                case 169: {
                  setLobbySteamId(input.readFixed64());
                  break;
                }
              }
            }
          }
          
          
          // optional int32 persona_state = 1;
          public boolean hasPersonaState() {
            return result.hasPersonaState();
          }
          public int getPersonaState() {
            return result.getPersonaState();
          }
          public Builder setPersonaState(int value) {
            result.hasPersonaState = true;
            result.personaState_ = value;
            return this;
          }
          public Builder clearPersonaState() {
            result.hasPersonaState = false;
            result.personaState_ = 0;
            return this;
          }
          
          // optional fixed64 primary_clan_id = 2;
          public boolean hasPrimaryClanId() {
            return result.hasPrimaryClanId();
          }
          public long getPrimaryClanId() {
            return result.getPrimaryClanId();
          }
          public Builder setPrimaryClanId(long value) {
            result.hasPrimaryClanId = true;
            result.primaryClanId_ = value;
            return this;
          }
          public Builder clearPrimaryClanId() {
            result.hasPrimaryClanId = false;
            result.primaryClanId_ = 0L;
            return this;
          }
          
          // optional int32 city_id = 4;
          public boolean hasCityId() {
            return result.hasCityId();
          }
          public int getCityId() {
            return result.getCityId();
          }
          public Builder setCityId(int value) {
            result.hasCityId = true;
            result.cityId_ = value;
            return this;
          }
          public Builder clearCityId() {
            result.hasCityId = false;
            result.cityId_ = 0;
            return this;
          }
          
          // optional uint32 time_created = 6;
          public boolean hasTimeCreated() {
            return result.hasTimeCreated();
          }
          public int getTimeCreated() {
            return result.getTimeCreated();
          }
          public Builder setTimeCreated(int value) {
            result.hasTimeCreated = true;
            result.timeCreated_ = value;
            return this;
          }
          public Builder clearTimeCreated() {
            result.hasTimeCreated = false;
            result.timeCreated_ = 0;
            return this;
          }
          
          // optional fixed64 game_id = 7;
          public boolean hasGameId() {
            return result.hasGameId();
          }
          public long getGameId() {
            return result.getGameId();
          }
          public Builder setGameId(long value) {
            result.hasGameId = true;
            result.gameId_ = value;
            return this;
          }
          public Builder clearGameId() {
            result.hasGameId = false;
            result.gameId_ = 0L;
            return this;
          }
          
          // optional fixed64 game_server_steam_id = 8;
          public boolean hasGameServerSteamId() {
            return result.hasGameServerSteamId();
          }
          public long getGameServerSteamId() {
            return result.getGameServerSteamId();
          }
          public Builder setGameServerSteamId(long value) {
            result.hasGameServerSteamId = true;
            result.gameServerSteamId_ = value;
            return this;
          }
          public Builder clearGameServerSteamId() {
            result.hasGameServerSteamId = false;
            result.gameServerSteamId_ = 0L;
            return this;
          }
          
          // optional uint32 game_server_ip_address = 9;
          public boolean hasGameServerIpAddress() {
            return result.hasGameServerIpAddress();
          }
          public int getGameServerIpAddress() {
            return result.getGameServerIpAddress();
          }
          public Builder setGameServerIpAddress(int value) {
            result.hasGameServerIpAddress = true;
            result.gameServerIpAddress_ = value;
            return this;
          }
          public Builder clearGameServerIpAddress() {
            result.hasGameServerIpAddress = false;
            result.gameServerIpAddress_ = 0;
            return this;
          }
          
          // optional uint32 game_server_port = 10;
          public boolean hasGameServerPort() {
            return result.hasGameServerPort();
          }
          public int getGameServerPort() {
            return result.getGameServerPort();
          }
          public Builder setGameServerPort(int value) {
            result.hasGameServerPort = true;
            result.gameServerPort_ = value;
            return this;
          }
          public Builder clearGameServerPort() {
            result.hasGameServerPort = false;
            result.gameServerPort_ = 0;
            return this;
          }
          
          // optional string game_extra_info = 13;
          public boolean hasGameExtraInfo() {
            return result.hasGameExtraInfo();
          }
          public java.lang.String getGameExtraInfo() {
            return result.getGameExtraInfo();
          }
          public Builder setGameExtraInfo(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameExtraInfo = true;
            result.gameExtraInfo_ = value;
            return this;
          }
          public Builder clearGameExtraInfo() {
            result.hasGameExtraInfo = false;
            result.gameExtraInfo_ = getDefaultInstance().getGameExtraInfo();
            return this;
          }
          
          // optional string real_name = 14;
          public boolean hasRealName() {
            return result.hasRealName();
          }
          public java.lang.String getRealName() {
            return result.getRealName();
          }
          public Builder setRealName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasRealName = true;
            result.realName_ = value;
            return this;
          }
          public Builder clearRealName() {
            result.hasRealName = false;
            result.realName_ = getDefaultInstance().getRealName();
            return this;
          }
          
          // optional string state_code = 15;
          public boolean hasStateCode() {
            return result.hasStateCode();
          }
          public java.lang.String getStateCode() {
            return result.getStateCode();
          }
          public Builder setStateCode(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasStateCode = true;
            result.stateCode_ = value;
            return this;
          }
          public Builder clearStateCode() {
            result.hasStateCode = false;
            result.stateCode_ = getDefaultInstance().getStateCode();
            return this;
          }
          
          // optional string country_code = 16;
          public boolean hasCountryCode() {
            return result.hasCountryCode();
          }
          public java.lang.String getCountryCode() {
            return result.getCountryCode();
          }
          public Builder setCountryCode(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasCountryCode = true;
            result.countryCode_ = value;
            return this;
          }
          public Builder clearCountryCode() {
            result.hasCountryCode = false;
            result.countryCode_ = getDefaultInstance().getCountryCode();
            return this;
          }
          
          // optional string account_name = 20;
          public boolean hasAccountName() {
            return result.hasAccountName();
          }
          public java.lang.String getAccountName() {
            return result.getAccountName();
          }
          public Builder setAccountName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasAccountName = true;
            result.accountName_ = value;
            return this;
          }
          public Builder clearAccountName() {
            result.hasAccountName = false;
            result.accountName_ = getDefaultInstance().getAccountName();
            return this;
          }
          
          // optional fixed64 lobby_steam_id = 21;
          public boolean hasLobbySteamId() {
            return result.hasLobbySteamId();
          }
          public long getLobbySteamId() {
            return result.getLobbySteamId();
          }
          public Builder setLobbySteamId(long value) {
            result.hasLobbySteamId = true;
            result.lobbySteamId_ = value;
            return this;
          }
          public Builder clearLobbySteamId() {
            result.hasLobbySteamId = false;
            result.lobbySteamId_ = 0L;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData)
        }
        
        static {
          defaultInstance = new AccountPrivateData(true);
          SteamMessages.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData)
      }
      
      // optional .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData public_data = 1;
      public static final int PUBLIC_DATA_FIELD_NUMBER = 1;
      private boolean hasPublicData;
      private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData publicData_;
      public boolean hasPublicData() { return hasPublicData; }
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData getPublicData() { return publicData_; }
      
      // optional .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData private_data = 2;
      public static final int PRIVATE_DATA_FIELD_NUMBER = 2;
      private boolean hasPrivateData;
      private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData privateData_;
      public boolean hasPrivateData() { return hasPrivateData; }
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData getPrivateData() { return privateData_; }
      
      private void initFields() {
        publicData_ = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
        privateData_ = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (hasPublicData()) {
          if (!getPublicData().isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasPublicData()) {
          output.writeMessage(1, getPublicData());
        }
        if (hasPrivateData()) {
          output.writeMessage(2, getPrivateData());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasPublicData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getPublicData());
        }
        if (hasPrivateData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getPrivateData());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail result;
        
        // Construct using SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail();
          return builder;
        }
        
        protected SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.getDescriptor();
        }
        
        public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail getDefaultInstanceForType() {
          return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail) {
            return mergeFrom((SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail other) {
          if (other == SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.getDefaultInstance()) return this;
          if (other.hasPublicData()) {
            mergePublicData(other.getPublicData());
          }
          if (other.hasPrivateData()) {
            mergePrivateData(other.getPrivateData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.Builder subBuilder = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.newBuilder();
                if (hasPublicData()) {
                  subBuilder.mergeFrom(getPublicData());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPublicData(subBuilder.buildPartial());
                break;
              }
              case 18: {
                SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.Builder subBuilder = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.newBuilder();
                if (hasPrivateData()) {
                  subBuilder.mergeFrom(getPrivateData());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPrivateData(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // optional .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData public_data = 1;
        public boolean hasPublicData() {
          return result.hasPublicData();
        }
        public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData getPublicData() {
          return result.getPublicData();
        }
        public Builder setPublicData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasPublicData = true;
          result.publicData_ = value;
          return this;
        }
        public Builder setPublicData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.Builder builderForValue) {
          result.hasPublicData = true;
          result.publicData_ = builderForValue.build();
          return this;
        }
        public Builder mergePublicData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData value) {
          if (result.hasPublicData() &&
              result.publicData_ != SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance()) {
            result.publicData_ =
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.newBuilder(result.publicData_).mergeFrom(value).buildPartial();
          } else {
            result.publicData_ = value;
          }
          result.hasPublicData = true;
          return this;
        }
        public Builder clearPublicData() {
          result.hasPublicData = false;
          result.publicData_ = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.getDefaultInstance();
          return this;
        }
        
        // optional .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData private_data = 2;
        public boolean hasPrivateData() {
          return result.hasPrivateData();
        }
        public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData getPrivateData() {
          return result.getPrivateData();
        }
        public Builder setPrivateData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasPrivateData = true;
          result.privateData_ = value;
          return this;
        }
        public Builder setPrivateData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.Builder builderForValue) {
          result.hasPrivateData = true;
          result.privateData_ = builderForValue.build();
          return this;
        }
        public Builder mergePrivateData(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData value) {
          if (result.hasPrivateData() &&
              result.privateData_ != SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance()) {
            result.privateData_ =
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.newBuilder(result.privateData_).mergeFrom(value).buildPartial();
          } else {
            result.privateData_ = value;
          }
          result.hasPrivateData = true;
          return this;
        }
        public Builder clearPrivateData() {
          result.hasPrivateData = false;
          result.privateData_ = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail)
      }
      
      static {
        defaultInstance = new AccountDetail(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgAMGetPlayerLinkDetailsResponse.AccountDetail)
    }
    
    // repeated .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail accounts = 1;
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private java.util.List<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail> accounts_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail> getAccountsList() {
      return accounts_;
    }
    public int getAccountsCount() { return accounts_.size(); }
    public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail getAccounts(int index) {
      return accounts_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail element : getAccountsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail element : getAccountsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail element : getAccountsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMGetPlayerLinkDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse result;
      
      // Construct using SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgAMGetPlayerLinkDetailsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMGetPlayerLinkDetailsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMGetPlayerLinkDetailsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accounts_ != java.util.Collections.EMPTY_LIST) {
          result.accounts_ =
            java.util.Collections.unmodifiableList(result.accounts_);
        }
        SteamMessages.CMsgAMGetPlayerLinkDetailsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMGetPlayerLinkDetailsResponse) {
          return mergeFrom((SteamMessages.CMsgAMGetPlayerLinkDetailsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse other) {
        if (other == SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.getDefaultInstance()) return this;
        if (!other.accounts_.isEmpty()) {
          if (result.accounts_.isEmpty()) {
            result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail>();
          }
          result.accounts_.addAll(other.accounts_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.Builder subBuilder = SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAccounts(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .CMsgAMGetPlayerLinkDetailsResponse.AccountDetail accounts = 1;
      public java.util.List<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail> getAccountsList() {
        return java.util.Collections.unmodifiableList(result.accounts_);
      }
      public int getAccountsCount() {
        return result.getAccountsCount();
      }
      public SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail getAccounts(int index) {
        return result.getAccounts(index);
      }
      public Builder setAccounts(int index, SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.accounts_.set(index, value);
        return this;
      }
      public Builder setAccounts(int index, SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.Builder builderForValue) {
        result.accounts_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAccounts(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail>();
        }
        result.accounts_.add(value);
        return this;
      }
      public Builder addAccounts(SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.Builder builderForValue) {
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail>();
        }
        result.accounts_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAccounts(
          java.lang.Iterable<? extends SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail> values) {
        if (result.accounts_.isEmpty()) {
          result.accounts_ = new java.util.ArrayList<SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail>();
        }
        super.addAll(values, result.accounts_);
        return this;
      }
      public Builder clearAccounts() {
        result.accounts_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMGetPlayerLinkDetailsResponse)
    }
    
    static {
      defaultInstance = new CMsgAMGetPlayerLinkDetailsResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMGetPlayerLinkDetailsResponse)
  }
  
  public static final class CMsgWebAPIKey extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgWebAPIKey.newBuilder() to construct.
    private CMsgWebAPIKey() {
      initFields();
    }
    private CMsgWebAPIKey(boolean noInit) {}
    
    private static final CMsgWebAPIKey defaultInstance;
    public static CMsgWebAPIKey getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgWebAPIKey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgWebAPIKey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgWebAPIKey_fieldAccessorTable;
    }
    
    // optional uint32 status = 1 [default = 255];
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private int status_ = 255;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    
    // optional uint32 account_id = 2 [default = 0];
    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasAccountId;
    private int accountId_ = 0;
    public boolean hasAccountId() { return hasAccountId; }
    public int getAccountId() { return accountId_; }
    
    // optional uint32 publisher_group_id = 3 [default = 0];
    public static final int PUBLISHER_GROUP_ID_FIELD_NUMBER = 3;
    private boolean hasPublisherGroupId;
    private int publisherGroupId_ = 0;
    public boolean hasPublisherGroupId() { return hasPublisherGroupId; }
    public int getPublisherGroupId() { return publisherGroupId_; }
    
    // optional uint32 key_id = 4;
    public static final int KEY_ID_FIELD_NUMBER = 4;
    private boolean hasKeyId;
    private int keyId_ = 0;
    public boolean hasKeyId() { return hasKeyId; }
    public int getKeyId() { return keyId_; }
    
    // optional string domain = 5;
    public static final int DOMAIN_FIELD_NUMBER = 5;
    private boolean hasDomain;
    private java.lang.String domain_ = "";
    public boolean hasDomain() { return hasDomain; }
    public java.lang.String getDomain() { return domain_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeUInt32(1, getStatus());
      }
      if (hasAccountId()) {
        output.writeUInt32(2, getAccountId());
      }
      if (hasPublisherGroupId()) {
        output.writeUInt32(3, getPublisherGroupId());
      }
      if (hasKeyId()) {
        output.writeUInt32(4, getKeyId());
      }
      if (hasDomain()) {
        output.writeString(5, getDomain());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getStatus());
      }
      if (hasAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getAccountId());
      }
      if (hasPublisherGroupId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getPublisherGroupId());
      }
      if (hasKeyId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getKeyId());
      }
      if (hasDomain()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDomain());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgWebAPIKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgWebAPIKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgWebAPIKey result;
      
      // Construct using SteamMessages.CMsgWebAPIKey.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgWebAPIKey();
        return builder;
      }
      
      protected SteamMessages.CMsgWebAPIKey internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgWebAPIKey();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgWebAPIKey.getDescriptor();
      }
      
      public SteamMessages.CMsgWebAPIKey getDefaultInstanceForType() {
        return SteamMessages.CMsgWebAPIKey.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgWebAPIKey build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgWebAPIKey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgWebAPIKey buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgWebAPIKey returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgWebAPIKey) {
          return mergeFrom((SteamMessages.CMsgWebAPIKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgWebAPIKey other) {
        if (other == SteamMessages.CMsgWebAPIKey.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasPublisherGroupId()) {
          setPublisherGroupId(other.getPublisherGroupId());
        }
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setStatus(input.readUInt32());
              break;
            }
            case 16: {
              setAccountId(input.readUInt32());
              break;
            }
            case 24: {
              setPublisherGroupId(input.readUInt32());
              break;
            }
            case 32: {
              setKeyId(input.readUInt32());
              break;
            }
            case 42: {
              setDomain(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 status = 1 [default = 255];
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public int getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = 255;
        return this;
      }
      
      // optional uint32 account_id = 2 [default = 0];
      public boolean hasAccountId() {
        return result.hasAccountId();
      }
      public int getAccountId() {
        return result.getAccountId();
      }
      public Builder setAccountId(int value) {
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder clearAccountId() {
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      // optional uint32 publisher_group_id = 3 [default = 0];
      public boolean hasPublisherGroupId() {
        return result.hasPublisherGroupId();
      }
      public int getPublisherGroupId() {
        return result.getPublisherGroupId();
      }
      public Builder setPublisherGroupId(int value) {
        result.hasPublisherGroupId = true;
        result.publisherGroupId_ = value;
        return this;
      }
      public Builder clearPublisherGroupId() {
        result.hasPublisherGroupId = false;
        result.publisherGroupId_ = 0;
        return this;
      }
      
      // optional uint32 key_id = 4;
      public boolean hasKeyId() {
        return result.hasKeyId();
      }
      public int getKeyId() {
        return result.getKeyId();
      }
      public Builder setKeyId(int value) {
        result.hasKeyId = true;
        result.keyId_ = value;
        return this;
      }
      public Builder clearKeyId() {
        result.hasKeyId = false;
        result.keyId_ = 0;
        return this;
      }
      
      // optional string domain = 5;
      public boolean hasDomain() {
        return result.hasDomain();
      }
      public java.lang.String getDomain() {
        return result.getDomain();
      }
      public Builder setDomain(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDomain = true;
        result.domain_ = value;
        return this;
      }
      public Builder clearDomain() {
        result.hasDomain = false;
        result.domain_ = getDefaultInstance().getDomain();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgWebAPIKey)
    }
    
    static {
      defaultInstance = new CMsgWebAPIKey(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgWebAPIKey)
  }
  
  public static final class CMsgHttpRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgHttpRequest.newBuilder() to construct.
    private CMsgHttpRequest() {
      initFields();
    }
    private CMsgHttpRequest(boolean noInit) {}
    
    private static final CMsgHttpRequest defaultInstance;
    public static CMsgHttpRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgHttpRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgHttpRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgHttpRequest_fieldAccessorTable;
    }
    
    public static final class RequestHeader extends
        com.google.protobuf.GeneratedMessage {
      // Use RequestHeader.newBuilder() to construct.
      private RequestHeader() {
        initFields();
      }
      private RequestHeader(boolean noInit) {}
      
      private static final RequestHeader defaultInstance;
      public static RequestHeader getDefaultInstance() {
        return defaultInstance;
      }
      
      public RequestHeader getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgHttpRequest_RequestHeader_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgHttpRequest_RequestHeader_fieldAccessorTable;
      }
      
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      // optional string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasValue()) {
          output.writeString(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.RequestHeader parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgHttpRequest.RequestHeader prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgHttpRequest.RequestHeader result;
        
        // Construct using SteamMessages.CMsgHttpRequest.RequestHeader.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgHttpRequest.RequestHeader();
          return builder;
        }
        
        protected SteamMessages.CMsgHttpRequest.RequestHeader internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgHttpRequest.RequestHeader();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgHttpRequest.RequestHeader.getDescriptor();
        }
        
        public SteamMessages.CMsgHttpRequest.RequestHeader getDefaultInstanceForType() {
          return SteamMessages.CMsgHttpRequest.RequestHeader.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgHttpRequest.RequestHeader build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgHttpRequest.RequestHeader buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgHttpRequest.RequestHeader buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgHttpRequest.RequestHeader returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgHttpRequest.RequestHeader) {
            return mergeFrom((SteamMessages.CMsgHttpRequest.RequestHeader)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgHttpRequest.RequestHeader other) {
          if (other == SteamMessages.CMsgHttpRequest.RequestHeader.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 18: {
                setValue(input.readString());
                break;
              }
            }
          }
        }
        
        
        // optional string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // optional string value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgHttpRequest.RequestHeader)
      }
      
      static {
        defaultInstance = new RequestHeader(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgHttpRequest.RequestHeader)
    }
    
    public static final class QueryParam extends
        com.google.protobuf.GeneratedMessage {
      // Use QueryParam.newBuilder() to construct.
      private QueryParam() {
        initFields();
      }
      private QueryParam(boolean noInit) {}
      
      private static final QueryParam defaultInstance;
      public static QueryParam getDefaultInstance() {
        return defaultInstance;
      }
      
      public QueryParam getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgHttpRequest_QueryParam_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgHttpRequest_QueryParam_fieldAccessorTable;
      }
      
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      // optional bytes value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasValue() { return hasValue; }
      public com.google.protobuf.ByteString getValue() { return value_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasValue()) {
          output.writeBytes(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpRequest.QueryParam parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgHttpRequest.QueryParam prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgHttpRequest.QueryParam result;
        
        // Construct using SteamMessages.CMsgHttpRequest.QueryParam.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgHttpRequest.QueryParam();
          return builder;
        }
        
        protected SteamMessages.CMsgHttpRequest.QueryParam internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgHttpRequest.QueryParam();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgHttpRequest.QueryParam.getDescriptor();
        }
        
        public SteamMessages.CMsgHttpRequest.QueryParam getDefaultInstanceForType() {
          return SteamMessages.CMsgHttpRequest.QueryParam.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgHttpRequest.QueryParam build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgHttpRequest.QueryParam buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgHttpRequest.QueryParam buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgHttpRequest.QueryParam returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgHttpRequest.QueryParam) {
            return mergeFrom((SteamMessages.CMsgHttpRequest.QueryParam)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgHttpRequest.QueryParam other) {
          if (other == SteamMessages.CMsgHttpRequest.QueryParam.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 18: {
                setValue(input.readBytes());
                break;
              }
            }
          }
        }
        
        
        // optional string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // optional bytes value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public com.google.protobuf.ByteString getValue() {
          return result.getValue();
        }
        public Builder setValue(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgHttpRequest.QueryParam)
      }
      
      static {
        defaultInstance = new QueryParam(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgHttpRequest.QueryParam)
    }
    
    // optional uint32 request_method = 1;
    public static final int REQUEST_METHOD_FIELD_NUMBER = 1;
    private boolean hasRequestMethod;
    private int requestMethod_ = 0;
    public boolean hasRequestMethod() { return hasRequestMethod; }
    public int getRequestMethod() { return requestMethod_; }
    
    // optional string hostname = 2;
    public static final int HOSTNAME_FIELD_NUMBER = 2;
    private boolean hasHostname;
    private java.lang.String hostname_ = "";
    public boolean hasHostname() { return hasHostname; }
    public java.lang.String getHostname() { return hostname_; }
    
    // optional string url = 3;
    public static final int URL_FIELD_NUMBER = 3;
    private boolean hasUrl;
    private java.lang.String url_ = "";
    public boolean hasUrl() { return hasUrl; }
    public java.lang.String getUrl() { return url_; }
    
    // repeated .CMsgHttpRequest.RequestHeader headers = 4;
    public static final int HEADERS_FIELD_NUMBER = 4;
    private java.util.List<SteamMessages.CMsgHttpRequest.RequestHeader> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgHttpRequest.RequestHeader> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public SteamMessages.CMsgHttpRequest.RequestHeader getHeaders(int index) {
      return headers_.get(index);
    }
    
    // repeated .CMsgHttpRequest.QueryParam get_params = 5;
    public static final int GET_PARAMS_FIELD_NUMBER = 5;
    private java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> getParams_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> getGetParamsList() {
      return getParams_;
    }
    public int getGetParamsCount() { return getParams_.size(); }
    public SteamMessages.CMsgHttpRequest.QueryParam getGetParams(int index) {
      return getParams_.get(index);
    }
    
    // repeated .CMsgHttpRequest.QueryParam post_params = 6;
    public static final int POST_PARAMS_FIELD_NUMBER = 6;
    private java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> postParams_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> getPostParamsList() {
      return postParams_;
    }
    public int getPostParamsCount() { return postParams_.size(); }
    public SteamMessages.CMsgHttpRequest.QueryParam getPostParams(int index) {
      return postParams_.get(index);
    }
    
    // optional bytes body = 7;
    public static final int BODY_FIELD_NUMBER = 7;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequestMethod()) {
        output.writeUInt32(1, getRequestMethod());
      }
      if (hasHostname()) {
        output.writeString(2, getHostname());
      }
      if (hasUrl()) {
        output.writeString(3, getUrl());
      }
      for (SteamMessages.CMsgHttpRequest.RequestHeader element : getHeadersList()) {
        output.writeMessage(4, element);
      }
      for (SteamMessages.CMsgHttpRequest.QueryParam element : getGetParamsList()) {
        output.writeMessage(5, element);
      }
      for (SteamMessages.CMsgHttpRequest.QueryParam element : getPostParamsList()) {
        output.writeMessage(6, element);
      }
      if (hasBody()) {
        output.writeBytes(7, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequestMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getRequestMethod());
      }
      if (hasHostname()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getHostname());
      }
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getUrl());
      }
      for (SteamMessages.CMsgHttpRequest.RequestHeader element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (SteamMessages.CMsgHttpRequest.QueryParam element : getGetParamsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (SteamMessages.CMsgHttpRequest.QueryParam element : getPostParamsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgHttpRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgHttpRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgHttpRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgHttpRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgHttpRequest result;
      
      // Construct using SteamMessages.CMsgHttpRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgHttpRequest();
        return builder;
      }
      
      protected SteamMessages.CMsgHttpRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgHttpRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgHttpRequest.getDescriptor();
      }
      
      public SteamMessages.CMsgHttpRequest getDefaultInstanceForType() {
        return SteamMessages.CMsgHttpRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgHttpRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgHttpRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgHttpRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        if (result.getParams_ != java.util.Collections.EMPTY_LIST) {
          result.getParams_ =
            java.util.Collections.unmodifiableList(result.getParams_);
        }
        if (result.postParams_ != java.util.Collections.EMPTY_LIST) {
          result.postParams_ =
            java.util.Collections.unmodifiableList(result.postParams_);
        }
        SteamMessages.CMsgHttpRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgHttpRequest) {
          return mergeFrom((SteamMessages.CMsgHttpRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgHttpRequest other) {
        if (other == SteamMessages.CMsgHttpRequest.getDefaultInstance()) return this;
        if (other.hasRequestMethod()) {
          setRequestMethod(other.getRequestMethod());
        }
        if (other.hasHostname()) {
          setHostname(other.getHostname());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.RequestHeader>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (!other.getParams_.isEmpty()) {
          if (result.getParams_.isEmpty()) {
            result.getParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
          }
          result.getParams_.addAll(other.getParams_);
        }
        if (!other.postParams_.isEmpty()) {
          if (result.postParams_.isEmpty()) {
            result.postParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
          }
          result.postParams_.addAll(other.postParams_);
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRequestMethod(input.readUInt32());
              break;
            }
            case 18: {
              setHostname(input.readString());
              break;
            }
            case 26: {
              setUrl(input.readString());
              break;
            }
            case 34: {
              SteamMessages.CMsgHttpRequest.RequestHeader.Builder subBuilder = SteamMessages.CMsgHttpRequest.RequestHeader.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 42: {
              SteamMessages.CMsgHttpRequest.QueryParam.Builder subBuilder = SteamMessages.CMsgHttpRequest.QueryParam.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGetParams(subBuilder.buildPartial());
              break;
            }
            case 50: {
              SteamMessages.CMsgHttpRequest.QueryParam.Builder subBuilder = SteamMessages.CMsgHttpRequest.QueryParam.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPostParams(subBuilder.buildPartial());
              break;
            }
            case 58: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 request_method = 1;
      public boolean hasRequestMethod() {
        return result.hasRequestMethod();
      }
      public int getRequestMethod() {
        return result.getRequestMethod();
      }
      public Builder setRequestMethod(int value) {
        result.hasRequestMethod = true;
        result.requestMethod_ = value;
        return this;
      }
      public Builder clearRequestMethod() {
        result.hasRequestMethod = false;
        result.requestMethod_ = 0;
        return this;
      }
      
      // optional string hostname = 2;
      public boolean hasHostname() {
        return result.hasHostname();
      }
      public java.lang.String getHostname() {
        return result.getHostname();
      }
      public Builder setHostname(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHostname = true;
        result.hostname_ = value;
        return this;
      }
      public Builder clearHostname() {
        result.hasHostname = false;
        result.hostname_ = getDefaultInstance().getHostname();
        return this;
      }
      
      // optional string url = 3;
      public boolean hasUrl() {
        return result.hasUrl();
      }
      public java.lang.String getUrl() {
        return result.getUrl();
      }
      public Builder setUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder clearUrl() {
        result.hasUrl = false;
        result.url_ = getDefaultInstance().getUrl();
        return this;
      }
      
      // repeated .CMsgHttpRequest.RequestHeader headers = 4;
      public java.util.List<SteamMessages.CMsgHttpRequest.RequestHeader> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public SteamMessages.CMsgHttpRequest.RequestHeader getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, SteamMessages.CMsgHttpRequest.RequestHeader value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, SteamMessages.CMsgHttpRequest.RequestHeader.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(SteamMessages.CMsgHttpRequest.RequestHeader value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.RequestHeader>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(SteamMessages.CMsgHttpRequest.RequestHeader.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.RequestHeader>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends SteamMessages.CMsgHttpRequest.RequestHeader> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.RequestHeader>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .CMsgHttpRequest.QueryParam get_params = 5;
      public java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> getGetParamsList() {
        return java.util.Collections.unmodifiableList(result.getParams_);
      }
      public int getGetParamsCount() {
        return result.getGetParamsCount();
      }
      public SteamMessages.CMsgHttpRequest.QueryParam getGetParams(int index) {
        return result.getGetParams(index);
      }
      public Builder setGetParams(int index, SteamMessages.CMsgHttpRequest.QueryParam value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.getParams_.set(index, value);
        return this;
      }
      public Builder setGetParams(int index, SteamMessages.CMsgHttpRequest.QueryParam.Builder builderForValue) {
        result.getParams_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGetParams(SteamMessages.CMsgHttpRequest.QueryParam value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.getParams_.isEmpty()) {
          result.getParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        result.getParams_.add(value);
        return this;
      }
      public Builder addGetParams(SteamMessages.CMsgHttpRequest.QueryParam.Builder builderForValue) {
        if (result.getParams_.isEmpty()) {
          result.getParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        result.getParams_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGetParams(
          java.lang.Iterable<? extends SteamMessages.CMsgHttpRequest.QueryParam> values) {
        if (result.getParams_.isEmpty()) {
          result.getParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        super.addAll(values, result.getParams_);
        return this;
      }
      public Builder clearGetParams() {
        result.getParams_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .CMsgHttpRequest.QueryParam post_params = 6;
      public java.util.List<SteamMessages.CMsgHttpRequest.QueryParam> getPostParamsList() {
        return java.util.Collections.unmodifiableList(result.postParams_);
      }
      public int getPostParamsCount() {
        return result.getPostParamsCount();
      }
      public SteamMessages.CMsgHttpRequest.QueryParam getPostParams(int index) {
        return result.getPostParams(index);
      }
      public Builder setPostParams(int index, SteamMessages.CMsgHttpRequest.QueryParam value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.postParams_.set(index, value);
        return this;
      }
      public Builder setPostParams(int index, SteamMessages.CMsgHttpRequest.QueryParam.Builder builderForValue) {
        result.postParams_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPostParams(SteamMessages.CMsgHttpRequest.QueryParam value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.postParams_.isEmpty()) {
          result.postParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        result.postParams_.add(value);
        return this;
      }
      public Builder addPostParams(SteamMessages.CMsgHttpRequest.QueryParam.Builder builderForValue) {
        if (result.postParams_.isEmpty()) {
          result.postParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        result.postParams_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPostParams(
          java.lang.Iterable<? extends SteamMessages.CMsgHttpRequest.QueryParam> values) {
        if (result.postParams_.isEmpty()) {
          result.postParams_ = new java.util.ArrayList<SteamMessages.CMsgHttpRequest.QueryParam>();
        }
        super.addAll(values, result.postParams_);
        return this;
      }
      public Builder clearPostParams() {
        result.postParams_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes body = 7;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgHttpRequest)
    }
    
    static {
      defaultInstance = new CMsgHttpRequest(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgHttpRequest)
  }
  
  public static final class CMsgWebAPIRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgWebAPIRequest.newBuilder() to construct.
    private CMsgWebAPIRequest() {
      initFields();
    }
    private CMsgWebAPIRequest(boolean noInit) {}
    
    private static final CMsgWebAPIRequest defaultInstance;
    public static CMsgWebAPIRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgWebAPIRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgWebAPIRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgWebAPIRequest_fieldAccessorTable;
    }
    
    // optional string UNUSED_job_name = 1;
    public static final int UNUSED_JOB_NAME_FIELD_NUMBER = 1;
    private boolean hasUNUSEDJobName;
    private java.lang.String uNUSEDJobName_ = "";
    public boolean hasUNUSEDJobName() { return hasUNUSEDJobName; }
    public java.lang.String getUNUSEDJobName() { return uNUSEDJobName_; }
    
    // optional string interface_name = 2;
    public static final int INTERFACE_NAME_FIELD_NUMBER = 2;
    private boolean hasInterfaceName;
    private java.lang.String interfaceName_ = "";
    public boolean hasInterfaceName() { return hasInterfaceName; }
    public java.lang.String getInterfaceName() { return interfaceName_; }
    
    // optional string method_name = 3;
    public static final int METHOD_NAME_FIELD_NUMBER = 3;
    private boolean hasMethodName;
    private java.lang.String methodName_ = "";
    public boolean hasMethodName() { return hasMethodName; }
    public java.lang.String getMethodName() { return methodName_; }
    
    // optional uint32 version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private boolean hasVersion;
    private int version_ = 0;
    public boolean hasVersion() { return hasVersion; }
    public int getVersion() { return version_; }
    
    // optional .CMsgWebAPIKey api_key = 5;
    public static final int API_KEY_FIELD_NUMBER = 5;
    private boolean hasApiKey;
    private SteamMessages.CMsgWebAPIKey apiKey_;
    public boolean hasApiKey() { return hasApiKey; }
    public SteamMessages.CMsgWebAPIKey getApiKey() { return apiKey_; }
    
    // optional .CMsgHttpRequest request = 6;
    public static final int REQUEST_FIELD_NUMBER = 6;
    private boolean hasRequest;
    private SteamMessages.CMsgHttpRequest request_;
    public boolean hasRequest() { return hasRequest; }
    public SteamMessages.CMsgHttpRequest getRequest() { return request_; }
    
    // optional uint32 routing_app_id = 7;
    public static final int ROUTING_APP_ID_FIELD_NUMBER = 7;
    private boolean hasRoutingAppId;
    private int routingAppId_ = 0;
    public boolean hasRoutingAppId() { return hasRoutingAppId; }
    public int getRoutingAppId() { return routingAppId_; }
    
    private void initFields() {
      apiKey_ = SteamMessages.CMsgWebAPIKey.getDefaultInstance();
      request_ = SteamMessages.CMsgHttpRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUNUSEDJobName()) {
        output.writeString(1, getUNUSEDJobName());
      }
      if (hasInterfaceName()) {
        output.writeString(2, getInterfaceName());
      }
      if (hasMethodName()) {
        output.writeString(3, getMethodName());
      }
      if (hasVersion()) {
        output.writeUInt32(4, getVersion());
      }
      if (hasApiKey()) {
        output.writeMessage(5, getApiKey());
      }
      if (hasRequest()) {
        output.writeMessage(6, getRequest());
      }
      if (hasRoutingAppId()) {
        output.writeUInt32(7, getRoutingAppId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUNUSEDJobName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUNUSEDJobName());
      }
      if (hasInterfaceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getInterfaceName());
      }
      if (hasMethodName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMethodName());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getVersion());
      }
      if (hasApiKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getApiKey());
      }
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRequest());
      }
      if (hasRoutingAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getRoutingAppId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgWebAPIRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgWebAPIRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgWebAPIRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgWebAPIRequest result;
      
      // Construct using SteamMessages.CMsgWebAPIRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgWebAPIRequest();
        return builder;
      }
      
      protected SteamMessages.CMsgWebAPIRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgWebAPIRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgWebAPIRequest.getDescriptor();
      }
      
      public SteamMessages.CMsgWebAPIRequest getDefaultInstanceForType() {
        return SteamMessages.CMsgWebAPIRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgWebAPIRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgWebAPIRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgWebAPIRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgWebAPIRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgWebAPIRequest) {
          return mergeFrom((SteamMessages.CMsgWebAPIRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgWebAPIRequest other) {
        if (other == SteamMessages.CMsgWebAPIRequest.getDefaultInstance()) return this;
        if (other.hasUNUSEDJobName()) {
          setUNUSEDJobName(other.getUNUSEDJobName());
        }
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        if (other.hasMethodName()) {
          setMethodName(other.getMethodName());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasApiKey()) {
          mergeApiKey(other.getApiKey());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasRoutingAppId()) {
          setRoutingAppId(other.getRoutingAppId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setUNUSEDJobName(input.readString());
              break;
            }
            case 18: {
              setInterfaceName(input.readString());
              break;
            }
            case 26: {
              setMethodName(input.readString());
              break;
            }
            case 32: {
              setVersion(input.readUInt32());
              break;
            }
            case 42: {
              SteamMessages.CMsgWebAPIKey.Builder subBuilder = SteamMessages.CMsgWebAPIKey.newBuilder();
              if (hasApiKey()) {
                subBuilder.mergeFrom(getApiKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApiKey(subBuilder.buildPartial());
              break;
            }
            case 50: {
              SteamMessages.CMsgHttpRequest.Builder subBuilder = SteamMessages.CMsgHttpRequest.newBuilder();
              if (hasRequest()) {
                subBuilder.mergeFrom(getRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRequest(subBuilder.buildPartial());
              break;
            }
            case 56: {
              setRoutingAppId(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string UNUSED_job_name = 1;
      public boolean hasUNUSEDJobName() {
        return result.hasUNUSEDJobName();
      }
      public java.lang.String getUNUSEDJobName() {
        return result.getUNUSEDJobName();
      }
      public Builder setUNUSEDJobName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUNUSEDJobName = true;
        result.uNUSEDJobName_ = value;
        return this;
      }
      public Builder clearUNUSEDJobName() {
        result.hasUNUSEDJobName = false;
        result.uNUSEDJobName_ = getDefaultInstance().getUNUSEDJobName();
        return this;
      }
      
      // optional string interface_name = 2;
      public boolean hasInterfaceName() {
        return result.hasInterfaceName();
      }
      public java.lang.String getInterfaceName() {
        return result.getInterfaceName();
      }
      public Builder setInterfaceName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInterfaceName = true;
        result.interfaceName_ = value;
        return this;
      }
      public Builder clearInterfaceName() {
        result.hasInterfaceName = false;
        result.interfaceName_ = getDefaultInstance().getInterfaceName();
        return this;
      }
      
      // optional string method_name = 3;
      public boolean hasMethodName() {
        return result.hasMethodName();
      }
      public java.lang.String getMethodName() {
        return result.getMethodName();
      }
      public Builder setMethodName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMethodName = true;
        result.methodName_ = value;
        return this;
      }
      public Builder clearMethodName() {
        result.hasMethodName = false;
        result.methodName_ = getDefaultInstance().getMethodName();
        return this;
      }
      
      // optional uint32 version = 4;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public int getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(int value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      // optional .CMsgWebAPIKey api_key = 5;
      public boolean hasApiKey() {
        return result.hasApiKey();
      }
      public SteamMessages.CMsgWebAPIKey getApiKey() {
        return result.getApiKey();
      }
      public Builder setApiKey(SteamMessages.CMsgWebAPIKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasApiKey = true;
        result.apiKey_ = value;
        return this;
      }
      public Builder setApiKey(SteamMessages.CMsgWebAPIKey.Builder builderForValue) {
        result.hasApiKey = true;
        result.apiKey_ = builderForValue.build();
        return this;
      }
      public Builder mergeApiKey(SteamMessages.CMsgWebAPIKey value) {
        if (result.hasApiKey() &&
            result.apiKey_ != SteamMessages.CMsgWebAPIKey.getDefaultInstance()) {
          result.apiKey_ =
            SteamMessages.CMsgWebAPIKey.newBuilder(result.apiKey_).mergeFrom(value).buildPartial();
        } else {
          result.apiKey_ = value;
        }
        result.hasApiKey = true;
        return this;
      }
      public Builder clearApiKey() {
        result.hasApiKey = false;
        result.apiKey_ = SteamMessages.CMsgWebAPIKey.getDefaultInstance();
        return this;
      }
      
      // optional .CMsgHttpRequest request = 6;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public SteamMessages.CMsgHttpRequest getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(SteamMessages.CMsgHttpRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder setRequest(SteamMessages.CMsgHttpRequest.Builder builderForValue) {
        result.hasRequest = true;
        result.request_ = builderForValue.build();
        return this;
      }
      public Builder mergeRequest(SteamMessages.CMsgHttpRequest value) {
        if (result.hasRequest() &&
            result.request_ != SteamMessages.CMsgHttpRequest.getDefaultInstance()) {
          result.request_ =
            SteamMessages.CMsgHttpRequest.newBuilder(result.request_).mergeFrom(value).buildPartial();
        } else {
          result.request_ = value;
        }
        result.hasRequest = true;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = SteamMessages.CMsgHttpRequest.getDefaultInstance();
        return this;
      }
      
      // optional uint32 routing_app_id = 7;
      public boolean hasRoutingAppId() {
        return result.hasRoutingAppId();
      }
      public int getRoutingAppId() {
        return result.getRoutingAppId();
      }
      public Builder setRoutingAppId(int value) {
        result.hasRoutingAppId = true;
        result.routingAppId_ = value;
        return this;
      }
      public Builder clearRoutingAppId() {
        result.hasRoutingAppId = false;
        result.routingAppId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgWebAPIRequest)
    }
    
    static {
      defaultInstance = new CMsgWebAPIRequest(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgWebAPIRequest)
  }
  
  public static final class CMsgHttpResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgHttpResponse.newBuilder() to construct.
    private CMsgHttpResponse() {
      initFields();
    }
    private CMsgHttpResponse(boolean noInit) {}
    
    private static final CMsgHttpResponse defaultInstance;
    public static CMsgHttpResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgHttpResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgHttpResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgHttpResponse_fieldAccessorTable;
    }
    
    public static final class ResponseHeader extends
        com.google.protobuf.GeneratedMessage {
      // Use ResponseHeader.newBuilder() to construct.
      private ResponseHeader() {
        initFields();
      }
      private ResponseHeader(boolean noInit) {}
      
      private static final ResponseHeader defaultInstance;
      public static ResponseHeader getDefaultInstance() {
        return defaultInstance;
      }
      
      public ResponseHeader getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgHttpResponse_ResponseHeader_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgHttpResponse_ResponseHeader_fieldAccessorTable;
      }
      
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      // optional string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasValue()) {
          output.writeString(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgHttpResponse.ResponseHeader parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgHttpResponse.ResponseHeader prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgHttpResponse.ResponseHeader result;
        
        // Construct using SteamMessages.CMsgHttpResponse.ResponseHeader.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgHttpResponse.ResponseHeader();
          return builder;
        }
        
        protected SteamMessages.CMsgHttpResponse.ResponseHeader internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgHttpResponse.ResponseHeader();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgHttpResponse.ResponseHeader.getDescriptor();
        }
        
        public SteamMessages.CMsgHttpResponse.ResponseHeader getDefaultInstanceForType() {
          return SteamMessages.CMsgHttpResponse.ResponseHeader.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgHttpResponse.ResponseHeader build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgHttpResponse.ResponseHeader buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgHttpResponse.ResponseHeader buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgHttpResponse.ResponseHeader returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgHttpResponse.ResponseHeader) {
            return mergeFrom((SteamMessages.CMsgHttpResponse.ResponseHeader)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgHttpResponse.ResponseHeader other) {
          if (other == SteamMessages.CMsgHttpResponse.ResponseHeader.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 18: {
                setValue(input.readString());
                break;
              }
            }
          }
        }
        
        
        // optional string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // optional string value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgHttpResponse.ResponseHeader)
      }
      
      static {
        defaultInstance = new ResponseHeader(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgHttpResponse.ResponseHeader)
    }
    
    // optional uint32 status_code = 1;
    public static final int STATUS_CODE_FIELD_NUMBER = 1;
    private boolean hasStatusCode;
    private int statusCode_ = 0;
    public boolean hasStatusCode() { return hasStatusCode; }
    public int getStatusCode() { return statusCode_; }
    
    // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
    public static final int HEADERS_FIELD_NUMBER = 2;
    private java.util.List<SteamMessages.CMsgHttpResponse.ResponseHeader> headers_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgHttpResponse.ResponseHeader> getHeadersList() {
      return headers_;
    }
    public int getHeadersCount() { return headers_.size(); }
    public SteamMessages.CMsgHttpResponse.ResponseHeader getHeaders(int index) {
      return headers_.get(index);
    }
    
    // optional bytes body = 3;
    public static final int BODY_FIELD_NUMBER = 3;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatusCode()) {
        output.writeUInt32(1, getStatusCode());
      }
      for (SteamMessages.CMsgHttpResponse.ResponseHeader element : getHeadersList()) {
        output.writeMessage(2, element);
      }
      if (hasBody()) {
        output.writeBytes(3, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatusCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getStatusCode());
      }
      for (SteamMessages.CMsgHttpResponse.ResponseHeader element : getHeadersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgHttpResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgHttpResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgHttpResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgHttpResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgHttpResponse result;
      
      // Construct using SteamMessages.CMsgHttpResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgHttpResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgHttpResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgHttpResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgHttpResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgHttpResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgHttpResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgHttpResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgHttpResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgHttpResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.headers_ != java.util.Collections.EMPTY_LIST) {
          result.headers_ =
            java.util.Collections.unmodifiableList(result.headers_);
        }
        SteamMessages.CMsgHttpResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgHttpResponse) {
          return mergeFrom((SteamMessages.CMsgHttpResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgHttpResponse other) {
        if (other == SteamMessages.CMsgHttpResponse.getDefaultInstance()) return this;
        if (other.hasStatusCode()) {
          setStatusCode(other.getStatusCode());
        }
        if (!other.headers_.isEmpty()) {
          if (result.headers_.isEmpty()) {
            result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpResponse.ResponseHeader>();
          }
          result.headers_.addAll(other.headers_);
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setStatusCode(input.readUInt32());
              break;
            }
            case 18: {
              SteamMessages.CMsgHttpResponse.ResponseHeader.Builder subBuilder = SteamMessages.CMsgHttpResponse.ResponseHeader.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeaders(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 status_code = 1;
      public boolean hasStatusCode() {
        return result.hasStatusCode();
      }
      public int getStatusCode() {
        return result.getStatusCode();
      }
      public Builder setStatusCode(int value) {
        result.hasStatusCode = true;
        result.statusCode_ = value;
        return this;
      }
      public Builder clearStatusCode() {
        result.hasStatusCode = false;
        result.statusCode_ = 0;
        return this;
      }
      
      // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
      public java.util.List<SteamMessages.CMsgHttpResponse.ResponseHeader> getHeadersList() {
        return java.util.Collections.unmodifiableList(result.headers_);
      }
      public int getHeadersCount() {
        return result.getHeadersCount();
      }
      public SteamMessages.CMsgHttpResponse.ResponseHeader getHeaders(int index) {
        return result.getHeaders(index);
      }
      public Builder setHeaders(int index, SteamMessages.CMsgHttpResponse.ResponseHeader value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.headers_.set(index, value);
        return this;
      }
      public Builder setHeaders(int index, SteamMessages.CMsgHttpResponse.ResponseHeader.Builder builderForValue) {
        result.headers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addHeaders(SteamMessages.CMsgHttpResponse.ResponseHeader value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpResponse.ResponseHeader>();
        }
        result.headers_.add(value);
        return this;
      }
      public Builder addHeaders(SteamMessages.CMsgHttpResponse.ResponseHeader.Builder builderForValue) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpResponse.ResponseHeader>();
        }
        result.headers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllHeaders(
          java.lang.Iterable<? extends SteamMessages.CMsgHttpResponse.ResponseHeader> values) {
        if (result.headers_.isEmpty()) {
          result.headers_ = new java.util.ArrayList<SteamMessages.CMsgHttpResponse.ResponseHeader>();
        }
        super.addAll(values, result.headers_);
        return this;
      }
      public Builder clearHeaders() {
        result.headers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes body = 3;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgHttpResponse)
    }
    
    static {
      defaultInstance = new CMsgHttpResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgHttpResponse)
  }
  
  public static final class CMsgClientHeartBeat extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientHeartBeat.newBuilder() to construct.
    private CMsgClientHeartBeat() {
      initFields();
    }
    private CMsgClientHeartBeat(boolean noInit) {}
    
    private static final CMsgClientHeartBeat defaultInstance;
    public static CMsgClientHeartBeat getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientHeartBeat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientHeartBeat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientHeartBeat_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientHeartBeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientHeartBeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientHeartBeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientHeartBeat result;
      
      // Construct using SteamMessages.CMsgClientHeartBeat.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientHeartBeat();
        return builder;
      }
      
      protected SteamMessages.CMsgClientHeartBeat internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientHeartBeat();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientHeartBeat.getDescriptor();
      }
      
      public SteamMessages.CMsgClientHeartBeat getDefaultInstanceForType() {
        return SteamMessages.CMsgClientHeartBeat.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientHeartBeat build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientHeartBeat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientHeartBeat buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientHeartBeat returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientHeartBeat) {
          return mergeFrom((SteamMessages.CMsgClientHeartBeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientHeartBeat other) {
        if (other == SteamMessages.CMsgClientHeartBeat.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:CMsgClientHeartBeat)
    }
    
    static {
      defaultInstance = new CMsgClientHeartBeat(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientHeartBeat)
  }
  
  public static final class CMsgClientSubscribeToPersonaFeed extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientSubscribeToPersonaFeed.newBuilder() to construct.
    private CMsgClientSubscribeToPersonaFeed() {
      initFields();
    }
    private CMsgClientSubscribeToPersonaFeed(boolean noInit) {}
    
    private static final CMsgClientSubscribeToPersonaFeed defaultInstance;
    public static CMsgClientSubscribeToPersonaFeed getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientSubscribeToPersonaFeed getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientSubscribeToPersonaFeed_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientSubscribeToPersonaFeed_fieldAccessorTable;
    }
    
    public static final class PersonaFeed extends
        com.google.protobuf.GeneratedMessage {
      // Use PersonaFeed.newBuilder() to construct.
      private PersonaFeed() {
        initFields();
      }
      private PersonaFeed(boolean noInit) {}
      
      private static final PersonaFeed defaultInstance;
      public static PersonaFeed getDefaultInstance() {
        return defaultInstance;
      }
      
      public PersonaFeed getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_fieldAccessorTable;
      }
      
      // optional fixed64 steamID = 1;
      public static final int STEAMID_FIELD_NUMBER = 1;
      private boolean hasSteamID;
      private long steamID_ = 0L;
      public boolean hasSteamID() { return hasSteamID; }
      public long getSteamID() { return steamID_; }
      
      // optional bool subscribe = 2;
      public static final int SUBSCRIBE_FIELD_NUMBER = 2;
      private boolean hasSubscribe;
      private boolean subscribe_ = false;
      public boolean hasSubscribe() { return hasSubscribe; }
      public boolean getSubscribe() { return subscribe_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamID()) {
          output.writeFixed64(1, getSteamID());
        }
        if (hasSubscribe()) {
          output.writeBool(2, getSubscribe());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamID()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getSteamID());
        }
        if (hasSubscribe()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, getSubscribe());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed result;
        
        // Construct using SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed();
          return builder;
        }
        
        protected SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.getDescriptor();
        }
        
        public SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed getDefaultInstanceForType() {
          return SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed) {
            return mergeFrom((SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed other) {
          if (other == SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.getDefaultInstance()) return this;
          if (other.hasSteamID()) {
            setSteamID(other.getSteamID());
          }
          if (other.hasSubscribe()) {
            setSubscribe(other.getSubscribe());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setSteamID(input.readFixed64());
                break;
              }
              case 16: {
                setSubscribe(input.readBool());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 steamID = 1;
        public boolean hasSteamID() {
          return result.hasSteamID();
        }
        public long getSteamID() {
          return result.getSteamID();
        }
        public Builder setSteamID(long value) {
          result.hasSteamID = true;
          result.steamID_ = value;
          return this;
        }
        public Builder clearSteamID() {
          result.hasSteamID = false;
          result.steamID_ = 0L;
          return this;
        }
        
        // optional bool subscribe = 2;
        public boolean hasSubscribe() {
          return result.hasSubscribe();
        }
        public boolean getSubscribe() {
          return result.getSubscribe();
        }
        public Builder setSubscribe(boolean value) {
          result.hasSubscribe = true;
          result.subscribe_ = value;
          return this;
        }
        public Builder clearSubscribe() {
          result.hasSubscribe = false;
          result.subscribe_ = false;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientSubscribeToPersonaFeed.PersonaFeed)
      }
      
      static {
        defaultInstance = new PersonaFeed(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientSubscribeToPersonaFeed.PersonaFeed)
    }
    
    // repeated .CMsgClientSubscribeToPersonaFeed.PersonaFeed persona_feeds = 1;
    public static final int PERSONA_FEEDS_FIELD_NUMBER = 1;
    private java.util.List<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed> personaFeeds_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed> getPersonaFeedsList() {
      return personaFeeds_;
    }
    public int getPersonaFeedsCount() { return personaFeeds_.size(); }
    public SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed getPersonaFeeds(int index) {
      return personaFeeds_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed element : getPersonaFeedsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed element : getPersonaFeedsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientSubscribeToPersonaFeed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientSubscribeToPersonaFeed result;
      
      // Construct using SteamMessages.CMsgClientSubscribeToPersonaFeed.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientSubscribeToPersonaFeed();
        return builder;
      }
      
      protected SteamMessages.CMsgClientSubscribeToPersonaFeed internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientSubscribeToPersonaFeed();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientSubscribeToPersonaFeed.getDescriptor();
      }
      
      public SteamMessages.CMsgClientSubscribeToPersonaFeed getDefaultInstanceForType() {
        return SteamMessages.CMsgClientSubscribeToPersonaFeed.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientSubscribeToPersonaFeed build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientSubscribeToPersonaFeed buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientSubscribeToPersonaFeed buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.personaFeeds_ != java.util.Collections.EMPTY_LIST) {
          result.personaFeeds_ =
            java.util.Collections.unmodifiableList(result.personaFeeds_);
        }
        SteamMessages.CMsgClientSubscribeToPersonaFeed returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientSubscribeToPersonaFeed) {
          return mergeFrom((SteamMessages.CMsgClientSubscribeToPersonaFeed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientSubscribeToPersonaFeed other) {
        if (other == SteamMessages.CMsgClientSubscribeToPersonaFeed.getDefaultInstance()) return this;
        if (!other.personaFeeds_.isEmpty()) {
          if (result.personaFeeds_.isEmpty()) {
            result.personaFeeds_ = new java.util.ArrayList<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed>();
          }
          result.personaFeeds_.addAll(other.personaFeeds_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.Builder subBuilder = SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPersonaFeeds(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .CMsgClientSubscribeToPersonaFeed.PersonaFeed persona_feeds = 1;
      public java.util.List<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed> getPersonaFeedsList() {
        return java.util.Collections.unmodifiableList(result.personaFeeds_);
      }
      public int getPersonaFeedsCount() {
        return result.getPersonaFeedsCount();
      }
      public SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed getPersonaFeeds(int index) {
        return result.getPersonaFeeds(index);
      }
      public Builder setPersonaFeeds(int index, SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.personaFeeds_.set(index, value);
        return this;
      }
      public Builder setPersonaFeeds(int index, SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.Builder builderForValue) {
        result.personaFeeds_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPersonaFeeds(SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.personaFeeds_.isEmpty()) {
          result.personaFeeds_ = new java.util.ArrayList<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed>();
        }
        result.personaFeeds_.add(value);
        return this;
      }
      public Builder addPersonaFeeds(SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.Builder builderForValue) {
        if (result.personaFeeds_.isEmpty()) {
          result.personaFeeds_ = new java.util.ArrayList<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed>();
        }
        result.personaFeeds_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPersonaFeeds(
          java.lang.Iterable<? extends SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed> values) {
        if (result.personaFeeds_.isEmpty()) {
          result.personaFeeds_ = new java.util.ArrayList<SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed>();
        }
        super.addAll(values, result.personaFeeds_);
        return this;
      }
      public Builder clearPersonaFeeds() {
        result.personaFeeds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientSubscribeToPersonaFeed)
    }
    
    static {
      defaultInstance = new CMsgClientSubscribeToPersonaFeed(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientSubscribeToPersonaFeed)
  }
  
  public static final class CMsgAMSubscribeToPersonaFeed extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMSubscribeToPersonaFeed.newBuilder() to construct.
    private CMsgAMSubscribeToPersonaFeed() {
      initFields();
    }
    private CMsgAMSubscribeToPersonaFeed(boolean noInit) {}
    
    private static final CMsgAMSubscribeToPersonaFeed defaultInstance;
    public static CMsgAMSubscribeToPersonaFeed getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMSubscribeToPersonaFeed getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMSubscribeToPersonaFeed_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMSubscribeToPersonaFeed_fieldAccessorTable;
    }
    
    // optional fixed64 steamid_client = 1;
    public static final int STEAMID_CLIENT_FIELD_NUMBER = 1;
    private boolean hasSteamidClient;
    private long steamidClient_ = 0L;
    public boolean hasSteamidClient() { return hasSteamidClient; }
    public long getSteamidClient() { return steamidClient_; }
    
    // optional fixed64 steamid_persona_feed_owner = 2;
    public static final int STEAMID_PERSONA_FEED_OWNER_FIELD_NUMBER = 2;
    private boolean hasSteamidPersonaFeedOwner;
    private long steamidPersonaFeedOwner_ = 0L;
    public boolean hasSteamidPersonaFeedOwner() { return hasSteamidPersonaFeedOwner; }
    public long getSteamidPersonaFeedOwner() { return steamidPersonaFeedOwner_; }
    
    // optional bool subscribe = 3;
    public static final int SUBSCRIBE_FIELD_NUMBER = 3;
    private boolean hasSubscribe;
    private boolean subscribe_ = false;
    public boolean hasSubscribe() { return hasSubscribe; }
    public boolean getSubscribe() { return subscribe_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamidClient()) {
        output.writeFixed64(1, getSteamidClient());
      }
      if (hasSteamidPersonaFeedOwner()) {
        output.writeFixed64(2, getSteamidPersonaFeedOwner());
      }
      if (hasSubscribe()) {
        output.writeBool(3, getSubscribe());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamidClient()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamidClient());
      }
      if (hasSteamidPersonaFeedOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamidPersonaFeedOwner());
      }
      if (hasSubscribe()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getSubscribe());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMSubscribeToPersonaFeed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMSubscribeToPersonaFeed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMSubscribeToPersonaFeed result;
      
      // Construct using SteamMessages.CMsgAMSubscribeToPersonaFeed.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMSubscribeToPersonaFeed();
        return builder;
      }
      
      protected SteamMessages.CMsgAMSubscribeToPersonaFeed internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMSubscribeToPersonaFeed();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMSubscribeToPersonaFeed.getDescriptor();
      }
      
      public SteamMessages.CMsgAMSubscribeToPersonaFeed getDefaultInstanceForType() {
        return SteamMessages.CMsgAMSubscribeToPersonaFeed.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMSubscribeToPersonaFeed build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMSubscribeToPersonaFeed buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMSubscribeToPersonaFeed buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgAMSubscribeToPersonaFeed returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMSubscribeToPersonaFeed) {
          return mergeFrom((SteamMessages.CMsgAMSubscribeToPersonaFeed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMSubscribeToPersonaFeed other) {
        if (other == SteamMessages.CMsgAMSubscribeToPersonaFeed.getDefaultInstance()) return this;
        if (other.hasSteamidClient()) {
          setSteamidClient(other.getSteamidClient());
        }
        if (other.hasSteamidPersonaFeedOwner()) {
          setSteamidPersonaFeedOwner(other.getSteamidPersonaFeedOwner());
        }
        if (other.hasSubscribe()) {
          setSubscribe(other.getSubscribe());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamidClient(input.readFixed64());
              break;
            }
            case 17: {
              setSteamidPersonaFeedOwner(input.readFixed64());
              break;
            }
            case 24: {
              setSubscribe(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steamid_client = 1;
      public boolean hasSteamidClient() {
        return result.hasSteamidClient();
      }
      public long getSteamidClient() {
        return result.getSteamidClient();
      }
      public Builder setSteamidClient(long value) {
        result.hasSteamidClient = true;
        result.steamidClient_ = value;
        return this;
      }
      public Builder clearSteamidClient() {
        result.hasSteamidClient = false;
        result.steamidClient_ = 0L;
        return this;
      }
      
      // optional fixed64 steamid_persona_feed_owner = 2;
      public boolean hasSteamidPersonaFeedOwner() {
        return result.hasSteamidPersonaFeedOwner();
      }
      public long getSteamidPersonaFeedOwner() {
        return result.getSteamidPersonaFeedOwner();
      }
      public Builder setSteamidPersonaFeedOwner(long value) {
        result.hasSteamidPersonaFeedOwner = true;
        result.steamidPersonaFeedOwner_ = value;
        return this;
      }
      public Builder clearSteamidPersonaFeedOwner() {
        result.hasSteamidPersonaFeedOwner = false;
        result.steamidPersonaFeedOwner_ = 0L;
        return this;
      }
      
      // optional bool subscribe = 3;
      public boolean hasSubscribe() {
        return result.hasSubscribe();
      }
      public boolean getSubscribe() {
        return result.getSubscribe();
      }
      public Builder setSubscribe(boolean value) {
        result.hasSubscribe = true;
        result.subscribe_ = value;
        return this;
      }
      public Builder clearSubscribe() {
        result.hasSubscribe = false;
        result.subscribe_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMSubscribeToPersonaFeed)
    }
    
    static {
      defaultInstance = new CMsgAMSubscribeToPersonaFeed(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMSubscribeToPersonaFeed)
  }
  
  public static final class CMsgClientUDSP2PSessionStarted extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientUDSP2PSessionStarted.newBuilder() to construct.
    private CMsgClientUDSP2PSessionStarted() {
      initFields();
    }
    private CMsgClientUDSP2PSessionStarted(boolean noInit) {}
    
    private static final CMsgClientUDSP2PSessionStarted defaultInstance;
    public static CMsgClientUDSP2PSessionStarted getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientUDSP2PSessionStarted getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientUDSP2PSessionStarted_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientUDSP2PSessionStarted_fieldAccessorTable;
    }
    
    // optional fixed64 steamid_remote = 1;
    public static final int STEAMID_REMOTE_FIELD_NUMBER = 1;
    private boolean hasSteamidRemote;
    private long steamidRemote_ = 0L;
    public boolean hasSteamidRemote() { return hasSteamidRemote; }
    public long getSteamidRemote() { return steamidRemote_; }
    
    // optional int32 appid = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppid;
    private int appid_ = 0;
    public boolean hasAppid() { return hasAppid; }
    public int getAppid() { return appid_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamidRemote()) {
        output.writeFixed64(1, getSteamidRemote());
      }
      if (hasAppid()) {
        output.writeInt32(2, getAppid());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamidRemote()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamidRemote());
      }
      if (hasAppid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getAppid());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionStarted parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientUDSP2PSessionStarted prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientUDSP2PSessionStarted result;
      
      // Construct using SteamMessages.CMsgClientUDSP2PSessionStarted.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientUDSP2PSessionStarted();
        return builder;
      }
      
      protected SteamMessages.CMsgClientUDSP2PSessionStarted internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientUDSP2PSessionStarted();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientUDSP2PSessionStarted.getDescriptor();
      }
      
      public SteamMessages.CMsgClientUDSP2PSessionStarted getDefaultInstanceForType() {
        return SteamMessages.CMsgClientUDSP2PSessionStarted.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientUDSP2PSessionStarted build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientUDSP2PSessionStarted buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientUDSP2PSessionStarted buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientUDSP2PSessionStarted returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientUDSP2PSessionStarted) {
          return mergeFrom((SteamMessages.CMsgClientUDSP2PSessionStarted)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientUDSP2PSessionStarted other) {
        if (other == SteamMessages.CMsgClientUDSP2PSessionStarted.getDefaultInstance()) return this;
        if (other.hasSteamidRemote()) {
          setSteamidRemote(other.getSteamidRemote());
        }
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamidRemote(input.readFixed64());
              break;
            }
            case 16: {
              setAppid(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steamid_remote = 1;
      public boolean hasSteamidRemote() {
        return result.hasSteamidRemote();
      }
      public long getSteamidRemote() {
        return result.getSteamidRemote();
      }
      public Builder setSteamidRemote(long value) {
        result.hasSteamidRemote = true;
        result.steamidRemote_ = value;
        return this;
      }
      public Builder clearSteamidRemote() {
        result.hasSteamidRemote = false;
        result.steamidRemote_ = 0L;
        return this;
      }
      
      // optional int32 appid = 2;
      public boolean hasAppid() {
        return result.hasAppid();
      }
      public int getAppid() {
        return result.getAppid();
      }
      public Builder setAppid(int value) {
        result.hasAppid = true;
        result.appid_ = value;
        return this;
      }
      public Builder clearAppid() {
        result.hasAppid = false;
        result.appid_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientUDSP2PSessionStarted)
    }
    
    static {
      defaultInstance = new CMsgClientUDSP2PSessionStarted(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientUDSP2PSessionStarted)
  }
  
  public static final class CMsgClientUDSP2PSessionEnded extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientUDSP2PSessionEnded.newBuilder() to construct.
    private CMsgClientUDSP2PSessionEnded() {
      initFields();
    }
    private CMsgClientUDSP2PSessionEnded(boolean noInit) {}
    
    private static final CMsgClientUDSP2PSessionEnded defaultInstance;
    public static CMsgClientUDSP2PSessionEnded getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientUDSP2PSessionEnded getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientUDSP2PSessionEnded_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientUDSP2PSessionEnded_fieldAccessorTable;
    }
    
    // optional fixed64 steamid_remote = 1;
    public static final int STEAMID_REMOTE_FIELD_NUMBER = 1;
    private boolean hasSteamidRemote;
    private long steamidRemote_ = 0L;
    public boolean hasSteamidRemote() { return hasSteamidRemote; }
    public long getSteamidRemote() { return steamidRemote_; }
    
    // optional int32 appid = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppid;
    private int appid_ = 0;
    public boolean hasAppid() { return hasAppid; }
    public int getAppid() { return appid_; }
    
    // optional int32 session_length_sec = 3;
    public static final int SESSION_LENGTH_SEC_FIELD_NUMBER = 3;
    private boolean hasSessionLengthSec;
    private int sessionLengthSec_ = 0;
    public boolean hasSessionLengthSec() { return hasSessionLengthSec; }
    public int getSessionLengthSec() { return sessionLengthSec_; }
    
    // optional int32 session_error = 4;
    public static final int SESSION_ERROR_FIELD_NUMBER = 4;
    private boolean hasSessionError;
    private int sessionError_ = 0;
    public boolean hasSessionError() { return hasSessionError; }
    public int getSessionError() { return sessionError_; }
    
    // optional int32 nattype = 5;
    public static final int NATTYPE_FIELD_NUMBER = 5;
    private boolean hasNattype;
    private int nattype_ = 0;
    public boolean hasNattype() { return hasNattype; }
    public int getNattype() { return nattype_; }
    
    // optional int32 bytes_recv = 6;
    public static final int BYTES_RECV_FIELD_NUMBER = 6;
    private boolean hasBytesRecv;
    private int bytesRecv_ = 0;
    public boolean hasBytesRecv() { return hasBytesRecv; }
    public int getBytesRecv() { return bytesRecv_; }
    
    // optional int32 bytes_sent = 7;
    public static final int BYTES_SENT_FIELD_NUMBER = 7;
    private boolean hasBytesSent;
    private int bytesSent_ = 0;
    public boolean hasBytesSent() { return hasBytesSent; }
    public int getBytesSent() { return bytesSent_; }
    
    // optional int32 bytes_sent_relay = 8;
    public static final int BYTES_SENT_RELAY_FIELD_NUMBER = 8;
    private boolean hasBytesSentRelay;
    private int bytesSentRelay_ = 0;
    public boolean hasBytesSentRelay() { return hasBytesSentRelay; }
    public int getBytesSentRelay() { return bytesSentRelay_; }
    
    // optional int32 bytes_recv_relay = 9;
    public static final int BYTES_RECV_RELAY_FIELD_NUMBER = 9;
    private boolean hasBytesRecvRelay;
    private int bytesRecvRelay_ = 0;
    public boolean hasBytesRecvRelay() { return hasBytesRecvRelay; }
    public int getBytesRecvRelay() { return bytesRecvRelay_; }
    
    // optional int32 time_to_connect_ms = 10;
    public static final int TIME_TO_CONNECT_MS_FIELD_NUMBER = 10;
    private boolean hasTimeToConnectMs;
    private int timeToConnectMs_ = 0;
    public boolean hasTimeToConnectMs() { return hasTimeToConnectMs; }
    public int getTimeToConnectMs() { return timeToConnectMs_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamidRemote()) {
        output.writeFixed64(1, getSteamidRemote());
      }
      if (hasAppid()) {
        output.writeInt32(2, getAppid());
      }
      if (hasSessionLengthSec()) {
        output.writeInt32(3, getSessionLengthSec());
      }
      if (hasSessionError()) {
        output.writeInt32(4, getSessionError());
      }
      if (hasNattype()) {
        output.writeInt32(5, getNattype());
      }
      if (hasBytesRecv()) {
        output.writeInt32(6, getBytesRecv());
      }
      if (hasBytesSent()) {
        output.writeInt32(7, getBytesSent());
      }
      if (hasBytesSentRelay()) {
        output.writeInt32(8, getBytesSentRelay());
      }
      if (hasBytesRecvRelay()) {
        output.writeInt32(9, getBytesRecvRelay());
      }
      if (hasTimeToConnectMs()) {
        output.writeInt32(10, getTimeToConnectMs());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamidRemote()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamidRemote());
      }
      if (hasAppid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getAppid());
      }
      if (hasSessionLengthSec()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSessionLengthSec());
      }
      if (hasSessionError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSessionError());
      }
      if (hasNattype()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getNattype());
      }
      if (hasBytesRecv()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getBytesRecv());
      }
      if (hasBytesSent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getBytesSent());
      }
      if (hasBytesSentRelay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getBytesSentRelay());
      }
      if (hasBytesRecvRelay()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getBytesRecvRelay());
      }
      if (hasTimeToConnectMs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getTimeToConnectMs());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientUDSP2PSessionEnded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientUDSP2PSessionEnded prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientUDSP2PSessionEnded result;
      
      // Construct using SteamMessages.CMsgClientUDSP2PSessionEnded.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientUDSP2PSessionEnded();
        return builder;
      }
      
      protected SteamMessages.CMsgClientUDSP2PSessionEnded internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientUDSP2PSessionEnded();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientUDSP2PSessionEnded.getDescriptor();
      }
      
      public SteamMessages.CMsgClientUDSP2PSessionEnded getDefaultInstanceForType() {
        return SteamMessages.CMsgClientUDSP2PSessionEnded.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientUDSP2PSessionEnded build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientUDSP2PSessionEnded buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientUDSP2PSessionEnded buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientUDSP2PSessionEnded returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientUDSP2PSessionEnded) {
          return mergeFrom((SteamMessages.CMsgClientUDSP2PSessionEnded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientUDSP2PSessionEnded other) {
        if (other == SteamMessages.CMsgClientUDSP2PSessionEnded.getDefaultInstance()) return this;
        if (other.hasSteamidRemote()) {
          setSteamidRemote(other.getSteamidRemote());
        }
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        if (other.hasSessionLengthSec()) {
          setSessionLengthSec(other.getSessionLengthSec());
        }
        if (other.hasSessionError()) {
          setSessionError(other.getSessionError());
        }
        if (other.hasNattype()) {
          setNattype(other.getNattype());
        }
        if (other.hasBytesRecv()) {
          setBytesRecv(other.getBytesRecv());
        }
        if (other.hasBytesSent()) {
          setBytesSent(other.getBytesSent());
        }
        if (other.hasBytesSentRelay()) {
          setBytesSentRelay(other.getBytesSentRelay());
        }
        if (other.hasBytesRecvRelay()) {
          setBytesRecvRelay(other.getBytesRecvRelay());
        }
        if (other.hasTimeToConnectMs()) {
          setTimeToConnectMs(other.getTimeToConnectMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamidRemote(input.readFixed64());
              break;
            }
            case 16: {
              setAppid(input.readInt32());
              break;
            }
            case 24: {
              setSessionLengthSec(input.readInt32());
              break;
            }
            case 32: {
              setSessionError(input.readInt32());
              break;
            }
            case 40: {
              setNattype(input.readInt32());
              break;
            }
            case 48: {
              setBytesRecv(input.readInt32());
              break;
            }
            case 56: {
              setBytesSent(input.readInt32());
              break;
            }
            case 64: {
              setBytesSentRelay(input.readInt32());
              break;
            }
            case 72: {
              setBytesRecvRelay(input.readInt32());
              break;
            }
            case 80: {
              setTimeToConnectMs(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steamid_remote = 1;
      public boolean hasSteamidRemote() {
        return result.hasSteamidRemote();
      }
      public long getSteamidRemote() {
        return result.getSteamidRemote();
      }
      public Builder setSteamidRemote(long value) {
        result.hasSteamidRemote = true;
        result.steamidRemote_ = value;
        return this;
      }
      public Builder clearSteamidRemote() {
        result.hasSteamidRemote = false;
        result.steamidRemote_ = 0L;
        return this;
      }
      
      // optional int32 appid = 2;
      public boolean hasAppid() {
        return result.hasAppid();
      }
      public int getAppid() {
        return result.getAppid();
      }
      public Builder setAppid(int value) {
        result.hasAppid = true;
        result.appid_ = value;
        return this;
      }
      public Builder clearAppid() {
        result.hasAppid = false;
        result.appid_ = 0;
        return this;
      }
      
      // optional int32 session_length_sec = 3;
      public boolean hasSessionLengthSec() {
        return result.hasSessionLengthSec();
      }
      public int getSessionLengthSec() {
        return result.getSessionLengthSec();
      }
      public Builder setSessionLengthSec(int value) {
        result.hasSessionLengthSec = true;
        result.sessionLengthSec_ = value;
        return this;
      }
      public Builder clearSessionLengthSec() {
        result.hasSessionLengthSec = false;
        result.sessionLengthSec_ = 0;
        return this;
      }
      
      // optional int32 session_error = 4;
      public boolean hasSessionError() {
        return result.hasSessionError();
      }
      public int getSessionError() {
        return result.getSessionError();
      }
      public Builder setSessionError(int value) {
        result.hasSessionError = true;
        result.sessionError_ = value;
        return this;
      }
      public Builder clearSessionError() {
        result.hasSessionError = false;
        result.sessionError_ = 0;
        return this;
      }
      
      // optional int32 nattype = 5;
      public boolean hasNattype() {
        return result.hasNattype();
      }
      public int getNattype() {
        return result.getNattype();
      }
      public Builder setNattype(int value) {
        result.hasNattype = true;
        result.nattype_ = value;
        return this;
      }
      public Builder clearNattype() {
        result.hasNattype = false;
        result.nattype_ = 0;
        return this;
      }
      
      // optional int32 bytes_recv = 6;
      public boolean hasBytesRecv() {
        return result.hasBytesRecv();
      }
      public int getBytesRecv() {
        return result.getBytesRecv();
      }
      public Builder setBytesRecv(int value) {
        result.hasBytesRecv = true;
        result.bytesRecv_ = value;
        return this;
      }
      public Builder clearBytesRecv() {
        result.hasBytesRecv = false;
        result.bytesRecv_ = 0;
        return this;
      }
      
      // optional int32 bytes_sent = 7;
      public boolean hasBytesSent() {
        return result.hasBytesSent();
      }
      public int getBytesSent() {
        return result.getBytesSent();
      }
      public Builder setBytesSent(int value) {
        result.hasBytesSent = true;
        result.bytesSent_ = value;
        return this;
      }
      public Builder clearBytesSent() {
        result.hasBytesSent = false;
        result.bytesSent_ = 0;
        return this;
      }
      
      // optional int32 bytes_sent_relay = 8;
      public boolean hasBytesSentRelay() {
        return result.hasBytesSentRelay();
      }
      public int getBytesSentRelay() {
        return result.getBytesSentRelay();
      }
      public Builder setBytesSentRelay(int value) {
        result.hasBytesSentRelay = true;
        result.bytesSentRelay_ = value;
        return this;
      }
      public Builder clearBytesSentRelay() {
        result.hasBytesSentRelay = false;
        result.bytesSentRelay_ = 0;
        return this;
      }
      
      // optional int32 bytes_recv_relay = 9;
      public boolean hasBytesRecvRelay() {
        return result.hasBytesRecvRelay();
      }
      public int getBytesRecvRelay() {
        return result.getBytesRecvRelay();
      }
      public Builder setBytesRecvRelay(int value) {
        result.hasBytesRecvRelay = true;
        result.bytesRecvRelay_ = value;
        return this;
      }
      public Builder clearBytesRecvRelay() {
        result.hasBytesRecvRelay = false;
        result.bytesRecvRelay_ = 0;
        return this;
      }
      
      // optional int32 time_to_connect_ms = 10;
      public boolean hasTimeToConnectMs() {
        return result.hasTimeToConnectMs();
      }
      public int getTimeToConnectMs() {
        return result.getTimeToConnectMs();
      }
      public Builder setTimeToConnectMs(int value) {
        result.hasTimeToConnectMs = true;
        result.timeToConnectMs_ = value;
        return this;
      }
      public Builder clearTimeToConnectMs() {
        result.hasTimeToConnectMs = false;
        result.timeToConnectMs_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientUDSP2PSessionEnded)
    }
    
    static {
      defaultInstance = new CMsgClientUDSP2PSessionEnded(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientUDSP2PSessionEnded)
  }
  
  public static final class CMsgClientRegisterAuthTicketWithCM extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientRegisterAuthTicketWithCM.newBuilder() to construct.
    private CMsgClientRegisterAuthTicketWithCM() {
      initFields();
    }
    private CMsgClientRegisterAuthTicketWithCM(boolean noInit) {}
    
    private static final CMsgClientRegisterAuthTicketWithCM defaultInstance;
    public static CMsgClientRegisterAuthTicketWithCM getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientRegisterAuthTicketWithCM getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientRegisterAuthTicketWithCM_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientRegisterAuthTicketWithCM_fieldAccessorTable;
    }
    
    // optional uint32 protocol_version = 1;
    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 1;
    private boolean hasProtocolVersion;
    private int protocolVersion_ = 0;
    public boolean hasProtocolVersion() { return hasProtocolVersion; }
    public int getProtocolVersion() { return protocolVersion_; }
    
    // optional bytes ticket = 3;
    public static final int TICKET_FIELD_NUMBER = 3;
    private boolean hasTicket;
    private com.google.protobuf.ByteString ticket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTicket() { return hasTicket; }
    public com.google.protobuf.ByteString getTicket() { return ticket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasProtocolVersion()) {
        output.writeUInt32(1, getProtocolVersion());
      }
      if (hasTicket()) {
        output.writeBytes(3, getTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasProtocolVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getProtocolVersion());
      }
      if (hasTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRegisterAuthTicketWithCM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientRegisterAuthTicketWithCM prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientRegisterAuthTicketWithCM result;
      
      // Construct using SteamMessages.CMsgClientRegisterAuthTicketWithCM.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientRegisterAuthTicketWithCM();
        return builder;
      }
      
      protected SteamMessages.CMsgClientRegisterAuthTicketWithCM internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientRegisterAuthTicketWithCM();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientRegisterAuthTicketWithCM.getDescriptor();
      }
      
      public SteamMessages.CMsgClientRegisterAuthTicketWithCM getDefaultInstanceForType() {
        return SteamMessages.CMsgClientRegisterAuthTicketWithCM.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientRegisterAuthTicketWithCM build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientRegisterAuthTicketWithCM buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientRegisterAuthTicketWithCM buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientRegisterAuthTicketWithCM returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientRegisterAuthTicketWithCM) {
          return mergeFrom((SteamMessages.CMsgClientRegisterAuthTicketWithCM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientRegisterAuthTicketWithCM other) {
        if (other == SteamMessages.CMsgClientRegisterAuthTicketWithCM.getDefaultInstance()) return this;
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        if (other.hasTicket()) {
          setTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setProtocolVersion(input.readUInt32());
              break;
            }
            case 26: {
              setTicket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 protocol_version = 1;
      public boolean hasProtocolVersion() {
        return result.hasProtocolVersion();
      }
      public int getProtocolVersion() {
        return result.getProtocolVersion();
      }
      public Builder setProtocolVersion(int value) {
        result.hasProtocolVersion = true;
        result.protocolVersion_ = value;
        return this;
      }
      public Builder clearProtocolVersion() {
        result.hasProtocolVersion = false;
        result.protocolVersion_ = 0;
        return this;
      }
      
      // optional bytes ticket = 3;
      public boolean hasTicket() {
        return result.hasTicket();
      }
      public com.google.protobuf.ByteString getTicket() {
        return result.getTicket();
      }
      public Builder setTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder clearTicket() {
        result.hasTicket = false;
        result.ticket_ = getDefaultInstance().getTicket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientRegisterAuthTicketWithCM)
    }
    
    static {
      defaultInstance = new CMsgClientRegisterAuthTicketWithCM(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientRegisterAuthTicketWithCM)
  }
  
  public static final class CMsgClientTicketAuthComplete extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientTicketAuthComplete.newBuilder() to construct.
    private CMsgClientTicketAuthComplete() {
      initFields();
    }
    private CMsgClientTicketAuthComplete(boolean noInit) {}
    
    private static final CMsgClientTicketAuthComplete defaultInstance;
    public static CMsgClientTicketAuthComplete getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientTicketAuthComplete getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientTicketAuthComplete_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientTicketAuthComplete_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional fixed64 game_id = 2;
    public static final int GAME_ID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // optional uint32 estate = 3;
    public static final int ESTATE_FIELD_NUMBER = 3;
    private boolean hasEstate;
    private int estate_ = 0;
    public boolean hasEstate() { return hasEstate; }
    public int getEstate() { return estate_; }
    
    // optional uint32 eauth_session_response = 4;
    public static final int EAUTH_SESSION_RESPONSE_FIELD_NUMBER = 4;
    private boolean hasEauthSessionResponse;
    private int eauthSessionResponse_ = 0;
    public boolean hasEauthSessionResponse() { return hasEauthSessionResponse; }
    public int getEauthSessionResponse() { return eauthSessionResponse_; }
    
    // optional bytes DEPRECATED_ticket = 5;
    public static final int DEPRECATED_TICKET_FIELD_NUMBER = 5;
    private boolean hasDEPRECATEDTicket;
    private com.google.protobuf.ByteString dEPRECATEDTicket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasDEPRECATEDTicket() { return hasDEPRECATEDTicket; }
    public com.google.protobuf.ByteString getDEPRECATEDTicket() { return dEPRECATEDTicket_; }
    
    // optional uint32 ticket_crc = 6;
    public static final int TICKET_CRC_FIELD_NUMBER = 6;
    private boolean hasTicketCrc;
    private int ticketCrc_ = 0;
    public boolean hasTicketCrc() { return hasTicketCrc; }
    public int getTicketCrc() { return ticketCrc_; }
    
    // optional uint32 ticket_sequence = 7;
    public static final int TICKET_SEQUENCE_FIELD_NUMBER = 7;
    private boolean hasTicketSequence;
    private int ticketSequence_ = 0;
    public boolean hasTicketSequence() { return hasTicketSequence; }
    public int getTicketSequence() { return ticketSequence_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasGameId()) {
        output.writeFixed64(2, getGameId());
      }
      if (hasEstate()) {
        output.writeUInt32(3, getEstate());
      }
      if (hasEauthSessionResponse()) {
        output.writeUInt32(4, getEauthSessionResponse());
      }
      if (hasDEPRECATEDTicket()) {
        output.writeBytes(5, getDEPRECATEDTicket());
      }
      if (hasTicketCrc()) {
        output.writeUInt32(6, getTicketCrc());
      }
      if (hasTicketSequence()) {
        output.writeUInt32(7, getTicketSequence());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getGameId());
      }
      if (hasEstate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getEstate());
      }
      if (hasEauthSessionResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getEauthSessionResponse());
      }
      if (hasDEPRECATEDTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDEPRECATEDTicket());
      }
      if (hasTicketCrc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getTicketCrc());
      }
      if (hasTicketSequence()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getTicketSequence());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientTicketAuthComplete parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientTicketAuthComplete prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientTicketAuthComplete result;
      
      // Construct using SteamMessages.CMsgClientTicketAuthComplete.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientTicketAuthComplete();
        return builder;
      }
      
      protected SteamMessages.CMsgClientTicketAuthComplete internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientTicketAuthComplete();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientTicketAuthComplete.getDescriptor();
      }
      
      public SteamMessages.CMsgClientTicketAuthComplete getDefaultInstanceForType() {
        return SteamMessages.CMsgClientTicketAuthComplete.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientTicketAuthComplete build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientTicketAuthComplete buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientTicketAuthComplete buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientTicketAuthComplete returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientTicketAuthComplete) {
          return mergeFrom((SteamMessages.CMsgClientTicketAuthComplete)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientTicketAuthComplete other) {
        if (other == SteamMessages.CMsgClientTicketAuthComplete.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasEstate()) {
          setEstate(other.getEstate());
        }
        if (other.hasEauthSessionResponse()) {
          setEauthSessionResponse(other.getEauthSessionResponse());
        }
        if (other.hasDEPRECATEDTicket()) {
          setDEPRECATEDTicket(other.getDEPRECATEDTicket());
        }
        if (other.hasTicketCrc()) {
          setTicketCrc(other.getTicketCrc());
        }
        if (other.hasTicketSequence()) {
          setTicketSequence(other.getTicketSequence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 17: {
              setGameId(input.readFixed64());
              break;
            }
            case 24: {
              setEstate(input.readUInt32());
              break;
            }
            case 32: {
              setEauthSessionResponse(input.readUInt32());
              break;
            }
            case 42: {
              setDEPRECATEDTicket(input.readBytes());
              break;
            }
            case 48: {
              setTicketCrc(input.readUInt32());
              break;
            }
            case 56: {
              setTicketSequence(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional fixed64 game_id = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // optional uint32 estate = 3;
      public boolean hasEstate() {
        return result.hasEstate();
      }
      public int getEstate() {
        return result.getEstate();
      }
      public Builder setEstate(int value) {
        result.hasEstate = true;
        result.estate_ = value;
        return this;
      }
      public Builder clearEstate() {
        result.hasEstate = false;
        result.estate_ = 0;
        return this;
      }
      
      // optional uint32 eauth_session_response = 4;
      public boolean hasEauthSessionResponse() {
        return result.hasEauthSessionResponse();
      }
      public int getEauthSessionResponse() {
        return result.getEauthSessionResponse();
      }
      public Builder setEauthSessionResponse(int value) {
        result.hasEauthSessionResponse = true;
        result.eauthSessionResponse_ = value;
        return this;
      }
      public Builder clearEauthSessionResponse() {
        result.hasEauthSessionResponse = false;
        result.eauthSessionResponse_ = 0;
        return this;
      }
      
      // optional bytes DEPRECATED_ticket = 5;
      public boolean hasDEPRECATEDTicket() {
        return result.hasDEPRECATEDTicket();
      }
      public com.google.protobuf.ByteString getDEPRECATEDTicket() {
        return result.getDEPRECATEDTicket();
      }
      public Builder setDEPRECATEDTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDEPRECATEDTicket = true;
        result.dEPRECATEDTicket_ = value;
        return this;
      }
      public Builder clearDEPRECATEDTicket() {
        result.hasDEPRECATEDTicket = false;
        result.dEPRECATEDTicket_ = getDefaultInstance().getDEPRECATEDTicket();
        return this;
      }
      
      // optional uint32 ticket_crc = 6;
      public boolean hasTicketCrc() {
        return result.hasTicketCrc();
      }
      public int getTicketCrc() {
        return result.getTicketCrc();
      }
      public Builder setTicketCrc(int value) {
        result.hasTicketCrc = true;
        result.ticketCrc_ = value;
        return this;
      }
      public Builder clearTicketCrc() {
        result.hasTicketCrc = false;
        result.ticketCrc_ = 0;
        return this;
      }
      
      // optional uint32 ticket_sequence = 7;
      public boolean hasTicketSequence() {
        return result.hasTicketSequence();
      }
      public int getTicketSequence() {
        return result.getTicketSequence();
      }
      public Builder setTicketSequence(int value) {
        result.hasTicketSequence = true;
        result.ticketSequence_ = value;
        return this;
      }
      public Builder clearTicketSequence() {
        result.hasTicketSequence = false;
        result.ticketSequence_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientTicketAuthComplete)
    }
    
    static {
      defaultInstance = new CMsgClientTicketAuthComplete(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientTicketAuthComplete)
  }
  
  public static final class CMsgClientLogon extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLogon.newBuilder() to construct.
    private CMsgClientLogon() {
      initFields();
    }
    private CMsgClientLogon(boolean noInit) {}
    
    private static final CMsgClientLogon defaultInstance;
    public static CMsgClientLogon getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLogon getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLogon_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLogon_fieldAccessorTable;
    }
    
    // optional uint32 protocol_version = 1;
    public static final int PROTOCOL_VERSION_FIELD_NUMBER = 1;
    private boolean hasProtocolVersion;
    private int protocolVersion_ = 0;
    public boolean hasProtocolVersion() { return hasProtocolVersion; }
    public int getProtocolVersion() { return protocolVersion_; }
    
    // optional uint32 obfustucated_private_ip = 2;
    public static final int OBFUSTUCATED_PRIVATE_IP_FIELD_NUMBER = 2;
    private boolean hasObfustucatedPrivateIp;
    private int obfustucatedPrivateIp_ = 0;
    public boolean hasObfustucatedPrivateIp() { return hasObfustucatedPrivateIp; }
    public int getObfustucatedPrivateIp() { return obfustucatedPrivateIp_; }
    
    // optional uint32 cell_id = 3;
    public static final int CELL_ID_FIELD_NUMBER = 3;
    private boolean hasCellId;
    private int cellId_ = 0;
    public boolean hasCellId() { return hasCellId; }
    public int getCellId() { return cellId_; }
    
    // optional uint32 last_session_id = 4;
    public static final int LAST_SESSION_ID_FIELD_NUMBER = 4;
    private boolean hasLastSessionId;
    private int lastSessionId_ = 0;
    public boolean hasLastSessionId() { return hasLastSessionId; }
    public int getLastSessionId() { return lastSessionId_; }
    
    // optional uint32 client_package_version = 5;
    public static final int CLIENT_PACKAGE_VERSION_FIELD_NUMBER = 5;
    private boolean hasClientPackageVersion;
    private int clientPackageVersion_ = 0;
    public boolean hasClientPackageVersion() { return hasClientPackageVersion; }
    public int getClientPackageVersion() { return clientPackageVersion_; }
    
    // optional string client_language = 6;
    public static final int CLIENT_LANGUAGE_FIELD_NUMBER = 6;
    private boolean hasClientLanguage;
    private java.lang.String clientLanguage_ = "";
    public boolean hasClientLanguage() { return hasClientLanguage; }
    public java.lang.String getClientLanguage() { return clientLanguage_; }
    
    // optional uint32 client_os_type = 7;
    public static final int CLIENT_OS_TYPE_FIELD_NUMBER = 7;
    private boolean hasClientOsType;
    private int clientOsType_ = 0;
    public boolean hasClientOsType() { return hasClientOsType; }
    public int getClientOsType() { return clientOsType_; }
    
    // optional bool should_remember_password = 8 [default = false];
    public static final int SHOULD_REMEMBER_PASSWORD_FIELD_NUMBER = 8;
    private boolean hasShouldRememberPassword;
    private boolean shouldRememberPassword_ = false;
    public boolean hasShouldRememberPassword() { return hasShouldRememberPassword; }
    public boolean getShouldRememberPassword() { return shouldRememberPassword_; }
    
    // optional string wine_version = 9;
    public static final int WINE_VERSION_FIELD_NUMBER = 9;
    private boolean hasWineVersion;
    private java.lang.String wineVersion_ = "";
    public boolean hasWineVersion() { return hasWineVersion; }
    public java.lang.String getWineVersion() { return wineVersion_; }
    
    // optional uint32 public_ip = 20;
    public static final int PUBLIC_IP_FIELD_NUMBER = 20;
    private boolean hasPublicIp;
    private int publicIp_ = 0;
    public boolean hasPublicIp() { return hasPublicIp; }
    public int getPublicIp() { return publicIp_; }
    
    // optional uint32 qos_level = 21;
    public static final int QOS_LEVEL_FIELD_NUMBER = 21;
    private boolean hasQosLevel;
    private int qosLevel_ = 0;
    public boolean hasQosLevel() { return hasQosLevel; }
    public int getQosLevel() { return qosLevel_; }
    
    // optional fixed64 client_supplied_steam_id = 22;
    public static final int CLIENT_SUPPLIED_STEAM_ID_FIELD_NUMBER = 22;
    private boolean hasClientSuppliedSteamId;
    private long clientSuppliedSteamId_ = 0L;
    public boolean hasClientSuppliedSteamId() { return hasClientSuppliedSteamId; }
    public long getClientSuppliedSteamId() { return clientSuppliedSteamId_; }
    
    // optional bytes machine_id = 30;
    public static final int MACHINE_ID_FIELD_NUMBER = 30;
    private boolean hasMachineId;
    private com.google.protobuf.ByteString machineId_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMachineId() { return hasMachineId; }
    public com.google.protobuf.ByteString getMachineId() { return machineId_; }
    
    // optional bytes steam2_auth_ticket = 41;
    public static final int STEAM2_AUTH_TICKET_FIELD_NUMBER = 41;
    private boolean hasSteam2AuthTicket;
    private com.google.protobuf.ByteString steam2AuthTicket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasSteam2AuthTicket() { return hasSteam2AuthTicket; }
    public com.google.protobuf.ByteString getSteam2AuthTicket() { return steam2AuthTicket_; }
    
    // optional string email_address = 42;
    public static final int EMAIL_ADDRESS_FIELD_NUMBER = 42;
    private boolean hasEmailAddress;
    private java.lang.String emailAddress_ = "";
    public boolean hasEmailAddress() { return hasEmailAddress; }
    public java.lang.String getEmailAddress() { return emailAddress_; }
    
    // optional fixed32 rtime32_account_creation = 43;
    public static final int RTIME32_ACCOUNT_CREATION_FIELD_NUMBER = 43;
    private boolean hasRtime32AccountCreation;
    private int rtime32AccountCreation_ = 0;
    public boolean hasRtime32AccountCreation() { return hasRtime32AccountCreation; }
    public int getRtime32AccountCreation() { return rtime32AccountCreation_; }
    
    // optional string account_name = 50;
    public static final int ACCOUNT_NAME_FIELD_NUMBER = 50;
    private boolean hasAccountName;
    private java.lang.String accountName_ = "";
    public boolean hasAccountName() { return hasAccountName; }
    public java.lang.String getAccountName() { return accountName_; }
    
    // optional string password = 51;
    public static final int PASSWORD_FIELD_NUMBER = 51;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public java.lang.String getPassword() { return password_; }
    
    // optional string login_key = 60;
    public static final int LOGIN_KEY_FIELD_NUMBER = 60;
    private boolean hasLoginKey;
    private java.lang.String loginKey_ = "";
    public boolean hasLoginKey() { return hasLoginKey; }
    public java.lang.String getLoginKey() { return loginKey_; }
    
    // optional bool was_converted_deprecated_msg = 70 [default = false];
    public static final int WAS_CONVERTED_DEPRECATED_MSG_FIELD_NUMBER = 70;
    private boolean hasWasConvertedDeprecatedMsg;
    private boolean wasConvertedDeprecatedMsg_ = false;
    public boolean hasWasConvertedDeprecatedMsg() { return hasWasConvertedDeprecatedMsg; }
    public boolean getWasConvertedDeprecatedMsg() { return wasConvertedDeprecatedMsg_; }
    
    // optional string anon_user_target_account_name = 80;
    public static final int ANON_USER_TARGET_ACCOUNT_NAME_FIELD_NUMBER = 80;
    private boolean hasAnonUserTargetAccountName;
    private java.lang.String anonUserTargetAccountName_ = "";
    public boolean hasAnonUserTargetAccountName() { return hasAnonUserTargetAccountName; }
    public java.lang.String getAnonUserTargetAccountName() { return anonUserTargetAccountName_; }
    
    // optional fixed64 anon_user_target_steam_id = 81;
    public static final int ANON_USER_TARGET_STEAM_ID_FIELD_NUMBER = 81;
    private boolean hasAnonUserTargetSteamId;
    private long anonUserTargetSteamId_ = 0L;
    public boolean hasAnonUserTargetSteamId() { return hasAnonUserTargetSteamId; }
    public long getAnonUserTargetSteamId() { return anonUserTargetSteamId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasProtocolVersion()) {
        output.writeUInt32(1, getProtocolVersion());
      }
      if (hasObfustucatedPrivateIp()) {
        output.writeUInt32(2, getObfustucatedPrivateIp());
      }
      if (hasCellId()) {
        output.writeUInt32(3, getCellId());
      }
      if (hasLastSessionId()) {
        output.writeUInt32(4, getLastSessionId());
      }
      if (hasClientPackageVersion()) {
        output.writeUInt32(5, getClientPackageVersion());
      }
      if (hasClientLanguage()) {
        output.writeString(6, getClientLanguage());
      }
      if (hasClientOsType()) {
        output.writeUInt32(7, getClientOsType());
      }
      if (hasShouldRememberPassword()) {
        output.writeBool(8, getShouldRememberPassword());
      }
      if (hasWineVersion()) {
        output.writeString(9, getWineVersion());
      }
      if (hasPublicIp()) {
        output.writeUInt32(20, getPublicIp());
      }
      if (hasQosLevel()) {
        output.writeUInt32(21, getQosLevel());
      }
      if (hasClientSuppliedSteamId()) {
        output.writeFixed64(22, getClientSuppliedSteamId());
      }
      if (hasMachineId()) {
        output.writeBytes(30, getMachineId());
      }
      if (hasSteam2AuthTicket()) {
        output.writeBytes(41, getSteam2AuthTicket());
      }
      if (hasEmailAddress()) {
        output.writeString(42, getEmailAddress());
      }
      if (hasRtime32AccountCreation()) {
        output.writeFixed32(43, getRtime32AccountCreation());
      }
      if (hasAccountName()) {
        output.writeString(50, getAccountName());
      }
      if (hasPassword()) {
        output.writeString(51, getPassword());
      }
      if (hasLoginKey()) {
        output.writeString(60, getLoginKey());
      }
      if (hasWasConvertedDeprecatedMsg()) {
        output.writeBool(70, getWasConvertedDeprecatedMsg());
      }
      if (hasAnonUserTargetAccountName()) {
        output.writeString(80, getAnonUserTargetAccountName());
      }
      if (hasAnonUserTargetSteamId()) {
        output.writeFixed64(81, getAnonUserTargetSteamId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasProtocolVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getProtocolVersion());
      }
      if (hasObfustucatedPrivateIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getObfustucatedPrivateIp());
      }
      if (hasCellId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getCellId());
      }
      if (hasLastSessionId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getLastSessionId());
      }
      if (hasClientPackageVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getClientPackageVersion());
      }
      if (hasClientLanguage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getClientLanguage());
      }
      if (hasClientOsType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getClientOsType());
      }
      if (hasShouldRememberPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getShouldRememberPassword());
      }
      if (hasWineVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getWineVersion());
      }
      if (hasPublicIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, getPublicIp());
      }
      if (hasQosLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, getQosLevel());
      }
      if (hasClientSuppliedSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(22, getClientSuppliedSteamId());
      }
      if (hasMachineId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(30, getMachineId());
      }
      if (hasSteam2AuthTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(41, getSteam2AuthTicket());
      }
      if (hasEmailAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(42, getEmailAddress());
      }
      if (hasRtime32AccountCreation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(43, getRtime32AccountCreation());
      }
      if (hasAccountName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(50, getAccountName());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(51, getPassword());
      }
      if (hasLoginKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(60, getLoginKey());
      }
      if (hasWasConvertedDeprecatedMsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(70, getWasConvertedDeprecatedMsg());
      }
      if (hasAnonUserTargetAccountName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(80, getAnonUserTargetAccountName());
      }
      if (hasAnonUserTargetSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(81, getAnonUserTargetSteamId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLogon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLogon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLogon result;
      
      // Construct using SteamMessages.CMsgClientLogon.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLogon();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLogon internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLogon();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLogon.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLogon getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLogon.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLogon build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLogon buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLogon buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLogon returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLogon) {
          return mergeFrom((SteamMessages.CMsgClientLogon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLogon other) {
        if (other == SteamMessages.CMsgClientLogon.getDefaultInstance()) return this;
        if (other.hasProtocolVersion()) {
          setProtocolVersion(other.getProtocolVersion());
        }
        if (other.hasObfustucatedPrivateIp()) {
          setObfustucatedPrivateIp(other.getObfustucatedPrivateIp());
        }
        if (other.hasCellId()) {
          setCellId(other.getCellId());
        }
        if (other.hasLastSessionId()) {
          setLastSessionId(other.getLastSessionId());
        }
        if (other.hasClientPackageVersion()) {
          setClientPackageVersion(other.getClientPackageVersion());
        }
        if (other.hasClientLanguage()) {
          setClientLanguage(other.getClientLanguage());
        }
        if (other.hasClientOsType()) {
          setClientOsType(other.getClientOsType());
        }
        if (other.hasShouldRememberPassword()) {
          setShouldRememberPassword(other.getShouldRememberPassword());
        }
        if (other.hasWineVersion()) {
          setWineVersion(other.getWineVersion());
        }
        if (other.hasPublicIp()) {
          setPublicIp(other.getPublicIp());
        }
        if (other.hasQosLevel()) {
          setQosLevel(other.getQosLevel());
        }
        if (other.hasClientSuppliedSteamId()) {
          setClientSuppliedSteamId(other.getClientSuppliedSteamId());
        }
        if (other.hasMachineId()) {
          setMachineId(other.getMachineId());
        }
        if (other.hasSteam2AuthTicket()) {
          setSteam2AuthTicket(other.getSteam2AuthTicket());
        }
        if (other.hasEmailAddress()) {
          setEmailAddress(other.getEmailAddress());
        }
        if (other.hasRtime32AccountCreation()) {
          setRtime32AccountCreation(other.getRtime32AccountCreation());
        }
        if (other.hasAccountName()) {
          setAccountName(other.getAccountName());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasLoginKey()) {
          setLoginKey(other.getLoginKey());
        }
        if (other.hasWasConvertedDeprecatedMsg()) {
          setWasConvertedDeprecatedMsg(other.getWasConvertedDeprecatedMsg());
        }
        if (other.hasAnonUserTargetAccountName()) {
          setAnonUserTargetAccountName(other.getAnonUserTargetAccountName());
        }
        if (other.hasAnonUserTargetSteamId()) {
          setAnonUserTargetSteamId(other.getAnonUserTargetSteamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setProtocolVersion(input.readUInt32());
              break;
            }
            case 16: {
              setObfustucatedPrivateIp(input.readUInt32());
              break;
            }
            case 24: {
              setCellId(input.readUInt32());
              break;
            }
            case 32: {
              setLastSessionId(input.readUInt32());
              break;
            }
            case 40: {
              setClientPackageVersion(input.readUInt32());
              break;
            }
            case 50: {
              setClientLanguage(input.readString());
              break;
            }
            case 56: {
              setClientOsType(input.readUInt32());
              break;
            }
            case 64: {
              setShouldRememberPassword(input.readBool());
              break;
            }
            case 74: {
              setWineVersion(input.readString());
              break;
            }
            case 160: {
              setPublicIp(input.readUInt32());
              break;
            }
            case 168: {
              setQosLevel(input.readUInt32());
              break;
            }
            case 177: {
              setClientSuppliedSteamId(input.readFixed64());
              break;
            }
            case 242: {
              setMachineId(input.readBytes());
              break;
            }
            case 330: {
              setSteam2AuthTicket(input.readBytes());
              break;
            }
            case 338: {
              setEmailAddress(input.readString());
              break;
            }
            case 349: {
              setRtime32AccountCreation(input.readFixed32());
              break;
            }
            case 402: {
              setAccountName(input.readString());
              break;
            }
            case 410: {
              setPassword(input.readString());
              break;
            }
            case 482: {
              setLoginKey(input.readString());
              break;
            }
            case 560: {
              setWasConvertedDeprecatedMsg(input.readBool());
              break;
            }
            case 642: {
              setAnonUserTargetAccountName(input.readString());
              break;
            }
            case 649: {
              setAnonUserTargetSteamId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 protocol_version = 1;
      public boolean hasProtocolVersion() {
        return result.hasProtocolVersion();
      }
      public int getProtocolVersion() {
        return result.getProtocolVersion();
      }
      public Builder setProtocolVersion(int value) {
        result.hasProtocolVersion = true;
        result.protocolVersion_ = value;
        return this;
      }
      public Builder clearProtocolVersion() {
        result.hasProtocolVersion = false;
        result.protocolVersion_ = 0;
        return this;
      }
      
      // optional uint32 obfustucated_private_ip = 2;
      public boolean hasObfustucatedPrivateIp() {
        return result.hasObfustucatedPrivateIp();
      }
      public int getObfustucatedPrivateIp() {
        return result.getObfustucatedPrivateIp();
      }
      public Builder setObfustucatedPrivateIp(int value) {
        result.hasObfustucatedPrivateIp = true;
        result.obfustucatedPrivateIp_ = value;
        return this;
      }
      public Builder clearObfustucatedPrivateIp() {
        result.hasObfustucatedPrivateIp = false;
        result.obfustucatedPrivateIp_ = 0;
        return this;
      }
      
      // optional uint32 cell_id = 3;
      public boolean hasCellId() {
        return result.hasCellId();
      }
      public int getCellId() {
        return result.getCellId();
      }
      public Builder setCellId(int value) {
        result.hasCellId = true;
        result.cellId_ = value;
        return this;
      }
      public Builder clearCellId() {
        result.hasCellId = false;
        result.cellId_ = 0;
        return this;
      }
      
      // optional uint32 last_session_id = 4;
      public boolean hasLastSessionId() {
        return result.hasLastSessionId();
      }
      public int getLastSessionId() {
        return result.getLastSessionId();
      }
      public Builder setLastSessionId(int value) {
        result.hasLastSessionId = true;
        result.lastSessionId_ = value;
        return this;
      }
      public Builder clearLastSessionId() {
        result.hasLastSessionId = false;
        result.lastSessionId_ = 0;
        return this;
      }
      
      // optional uint32 client_package_version = 5;
      public boolean hasClientPackageVersion() {
        return result.hasClientPackageVersion();
      }
      public int getClientPackageVersion() {
        return result.getClientPackageVersion();
      }
      public Builder setClientPackageVersion(int value) {
        result.hasClientPackageVersion = true;
        result.clientPackageVersion_ = value;
        return this;
      }
      public Builder clearClientPackageVersion() {
        result.hasClientPackageVersion = false;
        result.clientPackageVersion_ = 0;
        return this;
      }
      
      // optional string client_language = 6;
      public boolean hasClientLanguage() {
        return result.hasClientLanguage();
      }
      public java.lang.String getClientLanguage() {
        return result.getClientLanguage();
      }
      public Builder setClientLanguage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientLanguage = true;
        result.clientLanguage_ = value;
        return this;
      }
      public Builder clearClientLanguage() {
        result.hasClientLanguage = false;
        result.clientLanguage_ = getDefaultInstance().getClientLanguage();
        return this;
      }
      
      // optional uint32 client_os_type = 7;
      public boolean hasClientOsType() {
        return result.hasClientOsType();
      }
      public int getClientOsType() {
        return result.getClientOsType();
      }
      public Builder setClientOsType(int value) {
        result.hasClientOsType = true;
        result.clientOsType_ = value;
        return this;
      }
      public Builder clearClientOsType() {
        result.hasClientOsType = false;
        result.clientOsType_ = 0;
        return this;
      }
      
      // optional bool should_remember_password = 8 [default = false];
      public boolean hasShouldRememberPassword() {
        return result.hasShouldRememberPassword();
      }
      public boolean getShouldRememberPassword() {
        return result.getShouldRememberPassword();
      }
      public Builder setShouldRememberPassword(boolean value) {
        result.hasShouldRememberPassword = true;
        result.shouldRememberPassword_ = value;
        return this;
      }
      public Builder clearShouldRememberPassword() {
        result.hasShouldRememberPassword = false;
        result.shouldRememberPassword_ = false;
        return this;
      }
      
      // optional string wine_version = 9;
      public boolean hasWineVersion() {
        return result.hasWineVersion();
      }
      public java.lang.String getWineVersion() {
        return result.getWineVersion();
      }
      public Builder setWineVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWineVersion = true;
        result.wineVersion_ = value;
        return this;
      }
      public Builder clearWineVersion() {
        result.hasWineVersion = false;
        result.wineVersion_ = getDefaultInstance().getWineVersion();
        return this;
      }
      
      // optional uint32 public_ip = 20;
      public boolean hasPublicIp() {
        return result.hasPublicIp();
      }
      public int getPublicIp() {
        return result.getPublicIp();
      }
      public Builder setPublicIp(int value) {
        result.hasPublicIp = true;
        result.publicIp_ = value;
        return this;
      }
      public Builder clearPublicIp() {
        result.hasPublicIp = false;
        result.publicIp_ = 0;
        return this;
      }
      
      // optional uint32 qos_level = 21;
      public boolean hasQosLevel() {
        return result.hasQosLevel();
      }
      public int getQosLevel() {
        return result.getQosLevel();
      }
      public Builder setQosLevel(int value) {
        result.hasQosLevel = true;
        result.qosLevel_ = value;
        return this;
      }
      public Builder clearQosLevel() {
        result.hasQosLevel = false;
        result.qosLevel_ = 0;
        return this;
      }
      
      // optional fixed64 client_supplied_steam_id = 22;
      public boolean hasClientSuppliedSteamId() {
        return result.hasClientSuppliedSteamId();
      }
      public long getClientSuppliedSteamId() {
        return result.getClientSuppliedSteamId();
      }
      public Builder setClientSuppliedSteamId(long value) {
        result.hasClientSuppliedSteamId = true;
        result.clientSuppliedSteamId_ = value;
        return this;
      }
      public Builder clearClientSuppliedSteamId() {
        result.hasClientSuppliedSteamId = false;
        result.clientSuppliedSteamId_ = 0L;
        return this;
      }
      
      // optional bytes machine_id = 30;
      public boolean hasMachineId() {
        return result.hasMachineId();
      }
      public com.google.protobuf.ByteString getMachineId() {
        return result.getMachineId();
      }
      public Builder setMachineId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMachineId = true;
        result.machineId_ = value;
        return this;
      }
      public Builder clearMachineId() {
        result.hasMachineId = false;
        result.machineId_ = getDefaultInstance().getMachineId();
        return this;
      }
      
      // optional bytes steam2_auth_ticket = 41;
      public boolean hasSteam2AuthTicket() {
        return result.hasSteam2AuthTicket();
      }
      public com.google.protobuf.ByteString getSteam2AuthTicket() {
        return result.getSteam2AuthTicket();
      }
      public Builder setSteam2AuthTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSteam2AuthTicket = true;
        result.steam2AuthTicket_ = value;
        return this;
      }
      public Builder clearSteam2AuthTicket() {
        result.hasSteam2AuthTicket = false;
        result.steam2AuthTicket_ = getDefaultInstance().getSteam2AuthTicket();
        return this;
      }
      
      // optional string email_address = 42;
      public boolean hasEmailAddress() {
        return result.hasEmailAddress();
      }
      public java.lang.String getEmailAddress() {
        return result.getEmailAddress();
      }
      public Builder setEmailAddress(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmailAddress = true;
        result.emailAddress_ = value;
        return this;
      }
      public Builder clearEmailAddress() {
        result.hasEmailAddress = false;
        result.emailAddress_ = getDefaultInstance().getEmailAddress();
        return this;
      }
      
      // optional fixed32 rtime32_account_creation = 43;
      public boolean hasRtime32AccountCreation() {
        return result.hasRtime32AccountCreation();
      }
      public int getRtime32AccountCreation() {
        return result.getRtime32AccountCreation();
      }
      public Builder setRtime32AccountCreation(int value) {
        result.hasRtime32AccountCreation = true;
        result.rtime32AccountCreation_ = value;
        return this;
      }
      public Builder clearRtime32AccountCreation() {
        result.hasRtime32AccountCreation = false;
        result.rtime32AccountCreation_ = 0;
        return this;
      }
      
      // optional string account_name = 50;
      public boolean hasAccountName() {
        return result.hasAccountName();
      }
      public java.lang.String getAccountName() {
        return result.getAccountName();
      }
      public Builder setAccountName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder clearAccountName() {
        result.hasAccountName = false;
        result.accountName_ = getDefaultInstance().getAccountName();
        return this;
      }
      
      // optional string password = 51;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public java.lang.String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // optional string login_key = 60;
      public boolean hasLoginKey() {
        return result.hasLoginKey();
      }
      public java.lang.String getLoginKey() {
        return result.getLoginKey();
      }
      public Builder setLoginKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLoginKey = true;
        result.loginKey_ = value;
        return this;
      }
      public Builder clearLoginKey() {
        result.hasLoginKey = false;
        result.loginKey_ = getDefaultInstance().getLoginKey();
        return this;
      }
      
      // optional bool was_converted_deprecated_msg = 70 [default = false];
      public boolean hasWasConvertedDeprecatedMsg() {
        return result.hasWasConvertedDeprecatedMsg();
      }
      public boolean getWasConvertedDeprecatedMsg() {
        return result.getWasConvertedDeprecatedMsg();
      }
      public Builder setWasConvertedDeprecatedMsg(boolean value) {
        result.hasWasConvertedDeprecatedMsg = true;
        result.wasConvertedDeprecatedMsg_ = value;
        return this;
      }
      public Builder clearWasConvertedDeprecatedMsg() {
        result.hasWasConvertedDeprecatedMsg = false;
        result.wasConvertedDeprecatedMsg_ = false;
        return this;
      }
      
      // optional string anon_user_target_account_name = 80;
      public boolean hasAnonUserTargetAccountName() {
        return result.hasAnonUserTargetAccountName();
      }
      public java.lang.String getAnonUserTargetAccountName() {
        return result.getAnonUserTargetAccountName();
      }
      public Builder setAnonUserTargetAccountName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAnonUserTargetAccountName = true;
        result.anonUserTargetAccountName_ = value;
        return this;
      }
      public Builder clearAnonUserTargetAccountName() {
        result.hasAnonUserTargetAccountName = false;
        result.anonUserTargetAccountName_ = getDefaultInstance().getAnonUserTargetAccountName();
        return this;
      }
      
      // optional fixed64 anon_user_target_steam_id = 81;
      public boolean hasAnonUserTargetSteamId() {
        return result.hasAnonUserTargetSteamId();
      }
      public long getAnonUserTargetSteamId() {
        return result.getAnonUserTargetSteamId();
      }
      public Builder setAnonUserTargetSteamId(long value) {
        result.hasAnonUserTargetSteamId = true;
        result.anonUserTargetSteamId_ = value;
        return this;
      }
      public Builder clearAnonUserTargetSteamId() {
        result.hasAnonUserTargetSteamId = false;
        result.anonUserTargetSteamId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLogon)
    }
    
    static {
      defaultInstance = new CMsgClientLogon(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLogon)
  }
  
  public static final class CMsgClientLogonResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLogonResponse.newBuilder() to construct.
    private CMsgClientLogonResponse() {
      initFields();
    }
    private CMsgClientLogonResponse(boolean noInit) {}
    
    private static final CMsgClientLogonResponse defaultInstance;
    public static CMsgClientLogonResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLogonResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLogonResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLogonResponse_fieldAccessorTable;
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional int32 out_of_game_heartbeat_seconds = 2;
    public static final int OUT_OF_GAME_HEARTBEAT_SECONDS_FIELD_NUMBER = 2;
    private boolean hasOutOfGameHeartbeatSeconds;
    private int outOfGameHeartbeatSeconds_ = 0;
    public boolean hasOutOfGameHeartbeatSeconds() { return hasOutOfGameHeartbeatSeconds; }
    public int getOutOfGameHeartbeatSeconds() { return outOfGameHeartbeatSeconds_; }
    
    // optional int32 in_game_heartbeat_seconds = 3;
    public static final int IN_GAME_HEARTBEAT_SECONDS_FIELD_NUMBER = 3;
    private boolean hasInGameHeartbeatSeconds;
    private int inGameHeartbeatSeconds_ = 0;
    public boolean hasInGameHeartbeatSeconds() { return hasInGameHeartbeatSeconds; }
    public int getInGameHeartbeatSeconds() { return inGameHeartbeatSeconds_; }
    
    // optional uint32 public_ip = 4;
    public static final int PUBLIC_IP_FIELD_NUMBER = 4;
    private boolean hasPublicIp;
    private int publicIp_ = 0;
    public boolean hasPublicIp() { return hasPublicIp; }
    public int getPublicIp() { return publicIp_; }
    
    // optional fixed32 rtime32_server_time = 5;
    public static final int RTIME32_SERVER_TIME_FIELD_NUMBER = 5;
    private boolean hasRtime32ServerTime;
    private int rtime32ServerTime_ = 0;
    public boolean hasRtime32ServerTime() { return hasRtime32ServerTime; }
    public int getRtime32ServerTime() { return rtime32ServerTime_; }
    
    // optional uint32 account_flags = 6;
    public static final int ACCOUNT_FLAGS_FIELD_NUMBER = 6;
    private boolean hasAccountFlags;
    private int accountFlags_ = 0;
    public boolean hasAccountFlags() { return hasAccountFlags; }
    public int getAccountFlags() { return accountFlags_; }
    
    // optional fixed64 client_supplied_steamid = 20;
    public static final int CLIENT_SUPPLIED_STEAMID_FIELD_NUMBER = 20;
    private boolean hasClientSuppliedSteamid;
    private long clientSuppliedSteamid_ = 0L;
    public boolean hasClientSuppliedSteamid() { return hasClientSuppliedSteamid; }
    public long getClientSuppliedSteamid() { return clientSuppliedSteamid_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      if (hasOutOfGameHeartbeatSeconds()) {
        output.writeInt32(2, getOutOfGameHeartbeatSeconds());
      }
      if (hasInGameHeartbeatSeconds()) {
        output.writeInt32(3, getInGameHeartbeatSeconds());
      }
      if (hasPublicIp()) {
        output.writeUInt32(4, getPublicIp());
      }
      if (hasRtime32ServerTime()) {
        output.writeFixed32(5, getRtime32ServerTime());
      }
      if (hasAccountFlags()) {
        output.writeUInt32(6, getAccountFlags());
      }
      if (hasClientSuppliedSteamid()) {
        output.writeFixed64(20, getClientSuppliedSteamid());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      if (hasOutOfGameHeartbeatSeconds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getOutOfGameHeartbeatSeconds());
      }
      if (hasInGameHeartbeatSeconds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getInGameHeartbeatSeconds());
      }
      if (hasPublicIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getPublicIp());
      }
      if (hasRtime32ServerTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, getRtime32ServerTime());
      }
      if (hasAccountFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getAccountFlags());
      }
      if (hasClientSuppliedSteamid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(20, getClientSuppliedSteamid());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogonResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogonResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLogonResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLogonResponse result;
      
      // Construct using SteamMessages.CMsgClientLogonResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLogonResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLogonResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLogonResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLogonResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLogonResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLogonResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLogonResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLogonResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLogonResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLogonResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLogonResponse) {
          return mergeFrom((SteamMessages.CMsgClientLogonResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLogonResponse other) {
        if (other == SteamMessages.CMsgClientLogonResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasOutOfGameHeartbeatSeconds()) {
          setOutOfGameHeartbeatSeconds(other.getOutOfGameHeartbeatSeconds());
        }
        if (other.hasInGameHeartbeatSeconds()) {
          setInGameHeartbeatSeconds(other.getInGameHeartbeatSeconds());
        }
        if (other.hasPublicIp()) {
          setPublicIp(other.getPublicIp());
        }
        if (other.hasRtime32ServerTime()) {
          setRtime32ServerTime(other.getRtime32ServerTime());
        }
        if (other.hasAccountFlags()) {
          setAccountFlags(other.getAccountFlags());
        }
        if (other.hasClientSuppliedSteamid()) {
          setClientSuppliedSteamid(other.getClientSuppliedSteamid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
            case 16: {
              setOutOfGameHeartbeatSeconds(input.readInt32());
              break;
            }
            case 24: {
              setInGameHeartbeatSeconds(input.readInt32());
              break;
            }
            case 32: {
              setPublicIp(input.readUInt32());
              break;
            }
            case 45: {
              setRtime32ServerTime(input.readFixed32());
              break;
            }
            case 48: {
              setAccountFlags(input.readUInt32());
              break;
            }
            case 161: {
              setClientSuppliedSteamid(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional int32 out_of_game_heartbeat_seconds = 2;
      public boolean hasOutOfGameHeartbeatSeconds() {
        return result.hasOutOfGameHeartbeatSeconds();
      }
      public int getOutOfGameHeartbeatSeconds() {
        return result.getOutOfGameHeartbeatSeconds();
      }
      public Builder setOutOfGameHeartbeatSeconds(int value) {
        result.hasOutOfGameHeartbeatSeconds = true;
        result.outOfGameHeartbeatSeconds_ = value;
        return this;
      }
      public Builder clearOutOfGameHeartbeatSeconds() {
        result.hasOutOfGameHeartbeatSeconds = false;
        result.outOfGameHeartbeatSeconds_ = 0;
        return this;
      }
      
      // optional int32 in_game_heartbeat_seconds = 3;
      public boolean hasInGameHeartbeatSeconds() {
        return result.hasInGameHeartbeatSeconds();
      }
      public int getInGameHeartbeatSeconds() {
        return result.getInGameHeartbeatSeconds();
      }
      public Builder setInGameHeartbeatSeconds(int value) {
        result.hasInGameHeartbeatSeconds = true;
        result.inGameHeartbeatSeconds_ = value;
        return this;
      }
      public Builder clearInGameHeartbeatSeconds() {
        result.hasInGameHeartbeatSeconds = false;
        result.inGameHeartbeatSeconds_ = 0;
        return this;
      }
      
      // optional uint32 public_ip = 4;
      public boolean hasPublicIp() {
        return result.hasPublicIp();
      }
      public int getPublicIp() {
        return result.getPublicIp();
      }
      public Builder setPublicIp(int value) {
        result.hasPublicIp = true;
        result.publicIp_ = value;
        return this;
      }
      public Builder clearPublicIp() {
        result.hasPublicIp = false;
        result.publicIp_ = 0;
        return this;
      }
      
      // optional fixed32 rtime32_server_time = 5;
      public boolean hasRtime32ServerTime() {
        return result.hasRtime32ServerTime();
      }
      public int getRtime32ServerTime() {
        return result.getRtime32ServerTime();
      }
      public Builder setRtime32ServerTime(int value) {
        result.hasRtime32ServerTime = true;
        result.rtime32ServerTime_ = value;
        return this;
      }
      public Builder clearRtime32ServerTime() {
        result.hasRtime32ServerTime = false;
        result.rtime32ServerTime_ = 0;
        return this;
      }
      
      // optional uint32 account_flags = 6;
      public boolean hasAccountFlags() {
        return result.hasAccountFlags();
      }
      public int getAccountFlags() {
        return result.getAccountFlags();
      }
      public Builder setAccountFlags(int value) {
        result.hasAccountFlags = true;
        result.accountFlags_ = value;
        return this;
      }
      public Builder clearAccountFlags() {
        result.hasAccountFlags = false;
        result.accountFlags_ = 0;
        return this;
      }
      
      // optional fixed64 client_supplied_steamid = 20;
      public boolean hasClientSuppliedSteamid() {
        return result.hasClientSuppliedSteamid();
      }
      public long getClientSuppliedSteamid() {
        return result.getClientSuppliedSteamid();
      }
      public Builder setClientSuppliedSteamid(long value) {
        result.hasClientSuppliedSteamid = true;
        result.clientSuppliedSteamid_ = value;
        return this;
      }
      public Builder clearClientSuppliedSteamid() {
        result.hasClientSuppliedSteamid = false;
        result.clientSuppliedSteamid_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLogonResponse)
    }
    
    static {
      defaultInstance = new CMsgClientLogonResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLogonResponse)
  }
  
  public static final class CMsgClientLogOff extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLogOff.newBuilder() to construct.
    private CMsgClientLogOff() {
      initFields();
    }
    private CMsgClientLogOff(boolean noInit) {}
    
    private static final CMsgClientLogOff defaultInstance;
    public static CMsgClientLogOff getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLogOff getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLogOff_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLogOff_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLogOff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogOff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLogOff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLogOff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLogOff result;
      
      // Construct using SteamMessages.CMsgClientLogOff.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLogOff();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLogOff internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLogOff();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLogOff.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLogOff getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLogOff.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLogOff build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLogOff buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLogOff buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLogOff returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLogOff) {
          return mergeFrom((SteamMessages.CMsgClientLogOff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLogOff other) {
        if (other == SteamMessages.CMsgClientLogOff.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLogOff)
    }
    
    static {
      defaultInstance = new CMsgClientLogOff(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLogOff)
  }
  
  public static final class CMsgClientLoggedOff extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLoggedOff.newBuilder() to construct.
    private CMsgClientLoggedOff() {
      initFields();
    }
    private CMsgClientLoggedOff(boolean noInit) {}
    
    private static final CMsgClientLoggedOff defaultInstance;
    public static CMsgClientLoggedOff getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLoggedOff getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLoggedOff_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLoggedOff_fieldAccessorTable;
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLoggedOff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLoggedOff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLoggedOff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLoggedOff result;
      
      // Construct using SteamMessages.CMsgClientLoggedOff.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLoggedOff();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLoggedOff internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLoggedOff();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLoggedOff.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLoggedOff getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLoggedOff.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLoggedOff build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLoggedOff buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLoggedOff buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLoggedOff returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLoggedOff) {
          return mergeFrom((SteamMessages.CMsgClientLoggedOff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLoggedOff other) {
        if (other == SteamMessages.CMsgClientLoggedOff.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLoggedOff)
    }
    
    static {
      defaultInstance = new CMsgClientLoggedOff(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLoggedOff)
  }
  
  public static final class CMsgClientCMList extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientCMList.newBuilder() to construct.
    private CMsgClientCMList() {
      initFields();
    }
    private CMsgClientCMList(boolean noInit) {}
    
    private static final CMsgClientCMList defaultInstance;
    public static CMsgClientCMList getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientCMList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientCMList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientCMList_fieldAccessorTable;
    }
    
    // repeated uint32 cm_addresses = 1;
    public static final int CM_ADDRESSES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cmAddresses_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCmAddressesList() {
      return cmAddresses_;
    }
    public int getCmAddressesCount() { return cmAddresses_.size(); }
    public int getCmAddresses(int index) {
      return cmAddresses_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCmAddressesList()) {
        output.writeUInt32(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCmAddressesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCmAddressesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientCMList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientCMList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientCMList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientCMList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientCMList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientCMList result;
      
      // Construct using SteamMessages.CMsgClientCMList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientCMList();
        return builder;
      }
      
      protected SteamMessages.CMsgClientCMList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientCMList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientCMList.getDescriptor();
      }
      
      public SteamMessages.CMsgClientCMList getDefaultInstanceForType() {
        return SteamMessages.CMsgClientCMList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientCMList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientCMList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientCMList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.cmAddresses_ != java.util.Collections.EMPTY_LIST) {
          result.cmAddresses_ =
            java.util.Collections.unmodifiableList(result.cmAddresses_);
        }
        SteamMessages.CMsgClientCMList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientCMList) {
          return mergeFrom((SteamMessages.CMsgClientCMList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientCMList other) {
        if (other == SteamMessages.CMsgClientCMList.getDefaultInstance()) return this;
        if (!other.cmAddresses_.isEmpty()) {
          if (result.cmAddresses_.isEmpty()) {
            result.cmAddresses_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.cmAddresses_.addAll(other.cmAddresses_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addCmAddresses(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCmAddresses(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated uint32 cm_addresses = 1;
      public java.util.List<java.lang.Integer> getCmAddressesList() {
        return java.util.Collections.unmodifiableList(result.cmAddresses_);
      }
      public int getCmAddressesCount() {
        return result.getCmAddressesCount();
      }
      public int getCmAddresses(int index) {
        return result.getCmAddresses(index);
      }
      public Builder setCmAddresses(int index, int value) {
        result.cmAddresses_.set(index, value);
        return this;
      }
      public Builder addCmAddresses(int value) {
        if (result.cmAddresses_.isEmpty()) {
          result.cmAddresses_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.cmAddresses_.add(value);
        return this;
      }
      public Builder addAllCmAddresses(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.cmAddresses_.isEmpty()) {
          result.cmAddresses_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.cmAddresses_);
        return this;
      }
      public Builder clearCmAddresses() {
        result.cmAddresses_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientCMList)
    }
    
    static {
      defaultInstance = new CMsgClientCMList(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientCMList)
  }
  
  public static final class CMsgClientP2PConnectionInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientP2PConnectionInfo.newBuilder() to construct.
    private CMsgClientP2PConnectionInfo() {
      initFields();
    }
    private CMsgClientP2PConnectionInfo(boolean noInit) {}
    
    private static final CMsgClientP2PConnectionInfo defaultInstance;
    public static CMsgClientP2PConnectionInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientP2PConnectionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientP2PConnectionInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientP2PConnectionInfo_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id_dest = 1;
    public static final int STEAM_ID_DEST_FIELD_NUMBER = 1;
    private boolean hasSteamIdDest;
    private long steamIdDest_ = 0L;
    public boolean hasSteamIdDest() { return hasSteamIdDest; }
    public long getSteamIdDest() { return steamIdDest_; }
    
    // optional fixed64 steam_id_src = 2;
    public static final int STEAM_ID_SRC_FIELD_NUMBER = 2;
    private boolean hasSteamIdSrc;
    private long steamIdSrc_ = 0L;
    public boolean hasSteamIdSrc() { return hasSteamIdSrc; }
    public long getSteamIdSrc() { return steamIdSrc_; }
    
    // optional uint32 app_id = 3;
    public static final int APP_ID_FIELD_NUMBER = 3;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional bytes candidate = 4;
    public static final int CANDIDATE_FIELD_NUMBER = 4;
    private boolean hasCandidate;
    private com.google.protobuf.ByteString candidate_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasCandidate() { return hasCandidate; }
    public com.google.protobuf.ByteString getCandidate() { return candidate_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamIdDest()) {
        output.writeFixed64(1, getSteamIdDest());
      }
      if (hasSteamIdSrc()) {
        output.writeFixed64(2, getSteamIdSrc());
      }
      if (hasAppId()) {
        output.writeUInt32(3, getAppId());
      }
      if (hasCandidate()) {
        output.writeBytes(4, getCandidate());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamIdDest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamIdDest());
      }
      if (hasSteamIdSrc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdSrc());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getAppId());
      }
      if (hasCandidate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCandidate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientP2PConnectionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientP2PConnectionInfo result;
      
      // Construct using SteamMessages.CMsgClientP2PConnectionInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientP2PConnectionInfo();
        return builder;
      }
      
      protected SteamMessages.CMsgClientP2PConnectionInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientP2PConnectionInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientP2PConnectionInfo.getDescriptor();
      }
      
      public SteamMessages.CMsgClientP2PConnectionInfo getDefaultInstanceForType() {
        return SteamMessages.CMsgClientP2PConnectionInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientP2PConnectionInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientP2PConnectionInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientP2PConnectionInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientP2PConnectionInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientP2PConnectionInfo) {
          return mergeFrom((SteamMessages.CMsgClientP2PConnectionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientP2PConnectionInfo other) {
        if (other == SteamMessages.CMsgClientP2PConnectionInfo.getDefaultInstance()) return this;
        if (other.hasSteamIdDest()) {
          setSteamIdDest(other.getSteamIdDest());
        }
        if (other.hasSteamIdSrc()) {
          setSteamIdSrc(other.getSteamIdSrc());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasCandidate()) {
          setCandidate(other.getCandidate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamIdDest(input.readFixed64());
              break;
            }
            case 17: {
              setSteamIdSrc(input.readFixed64());
              break;
            }
            case 24: {
              setAppId(input.readUInt32());
              break;
            }
            case 34: {
              setCandidate(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id_dest = 1;
      public boolean hasSteamIdDest() {
        return result.hasSteamIdDest();
      }
      public long getSteamIdDest() {
        return result.getSteamIdDest();
      }
      public Builder setSteamIdDest(long value) {
        result.hasSteamIdDest = true;
        result.steamIdDest_ = value;
        return this;
      }
      public Builder clearSteamIdDest() {
        result.hasSteamIdDest = false;
        result.steamIdDest_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_src = 2;
      public boolean hasSteamIdSrc() {
        return result.hasSteamIdSrc();
      }
      public long getSteamIdSrc() {
        return result.getSteamIdSrc();
      }
      public Builder setSteamIdSrc(long value) {
        result.hasSteamIdSrc = true;
        result.steamIdSrc_ = value;
        return this;
      }
      public Builder clearSteamIdSrc() {
        result.hasSteamIdSrc = false;
        result.steamIdSrc_ = 0L;
        return this;
      }
      
      // optional uint32 app_id = 3;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional bytes candidate = 4;
      public boolean hasCandidate() {
        return result.hasCandidate();
      }
      public com.google.protobuf.ByteString getCandidate() {
        return result.getCandidate();
      }
      public Builder setCandidate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCandidate = true;
        result.candidate_ = value;
        return this;
      }
      public Builder clearCandidate() {
        result.hasCandidate = false;
        result.candidate_ = getDefaultInstance().getCandidate();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientP2PConnectionInfo)
    }
    
    static {
      defaultInstance = new CMsgClientP2PConnectionInfo(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientP2PConnectionInfo)
  }
  
  public static final class CMsgClientP2PConnectionFailInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientP2PConnectionFailInfo.newBuilder() to construct.
    private CMsgClientP2PConnectionFailInfo() {
      initFields();
    }
    private CMsgClientP2PConnectionFailInfo(boolean noInit) {}
    
    private static final CMsgClientP2PConnectionFailInfo defaultInstance;
    public static CMsgClientP2PConnectionFailInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientP2PConnectionFailInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientP2PConnectionFailInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientP2PConnectionFailInfo_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id_dest = 1;
    public static final int STEAM_ID_DEST_FIELD_NUMBER = 1;
    private boolean hasSteamIdDest;
    private long steamIdDest_ = 0L;
    public boolean hasSteamIdDest() { return hasSteamIdDest; }
    public long getSteamIdDest() { return steamIdDest_; }
    
    // optional fixed64 steam_id_src = 2;
    public static final int STEAM_ID_SRC_FIELD_NUMBER = 2;
    private boolean hasSteamIdSrc;
    private long steamIdSrc_ = 0L;
    public boolean hasSteamIdSrc() { return hasSteamIdSrc; }
    public long getSteamIdSrc() { return steamIdSrc_; }
    
    // optional uint32 app_id = 3;
    public static final int APP_ID_FIELD_NUMBER = 3;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional uint32 ep2p_session_error = 4;
    public static final int EP2P_SESSION_ERROR_FIELD_NUMBER = 4;
    private boolean hasEp2PSessionError;
    private int ep2PSessionError_ = 0;
    public boolean hasEp2PSessionError() { return hasEp2PSessionError; }
    public int getEp2PSessionError() { return ep2PSessionError_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamIdDest()) {
        output.writeFixed64(1, getSteamIdDest());
      }
      if (hasSteamIdSrc()) {
        output.writeFixed64(2, getSteamIdSrc());
      }
      if (hasAppId()) {
        output.writeUInt32(3, getAppId());
      }
      if (hasEp2PSessionError()) {
        output.writeUInt32(4, getEp2PSessionError());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamIdDest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamIdDest());
      }
      if (hasSteamIdSrc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdSrc());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getAppId());
      }
      if (hasEp2PSessionError()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getEp2PSessionError());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientP2PConnectionFailInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientP2PConnectionFailInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientP2PConnectionFailInfo result;
      
      // Construct using SteamMessages.CMsgClientP2PConnectionFailInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientP2PConnectionFailInfo();
        return builder;
      }
      
      protected SteamMessages.CMsgClientP2PConnectionFailInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientP2PConnectionFailInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientP2PConnectionFailInfo.getDescriptor();
      }
      
      public SteamMessages.CMsgClientP2PConnectionFailInfo getDefaultInstanceForType() {
        return SteamMessages.CMsgClientP2PConnectionFailInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientP2PConnectionFailInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientP2PConnectionFailInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientP2PConnectionFailInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientP2PConnectionFailInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientP2PConnectionFailInfo) {
          return mergeFrom((SteamMessages.CMsgClientP2PConnectionFailInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientP2PConnectionFailInfo other) {
        if (other == SteamMessages.CMsgClientP2PConnectionFailInfo.getDefaultInstance()) return this;
        if (other.hasSteamIdDest()) {
          setSteamIdDest(other.getSteamIdDest());
        }
        if (other.hasSteamIdSrc()) {
          setSteamIdSrc(other.getSteamIdSrc());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasEp2PSessionError()) {
          setEp2PSessionError(other.getEp2PSessionError());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamIdDest(input.readFixed64());
              break;
            }
            case 17: {
              setSteamIdSrc(input.readFixed64());
              break;
            }
            case 24: {
              setAppId(input.readUInt32());
              break;
            }
            case 32: {
              setEp2PSessionError(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id_dest = 1;
      public boolean hasSteamIdDest() {
        return result.hasSteamIdDest();
      }
      public long getSteamIdDest() {
        return result.getSteamIdDest();
      }
      public Builder setSteamIdDest(long value) {
        result.hasSteamIdDest = true;
        result.steamIdDest_ = value;
        return this;
      }
      public Builder clearSteamIdDest() {
        result.hasSteamIdDest = false;
        result.steamIdDest_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_src = 2;
      public boolean hasSteamIdSrc() {
        return result.hasSteamIdSrc();
      }
      public long getSteamIdSrc() {
        return result.getSteamIdSrc();
      }
      public Builder setSteamIdSrc(long value) {
        result.hasSteamIdSrc = true;
        result.steamIdSrc_ = value;
        return this;
      }
      public Builder clearSteamIdSrc() {
        result.hasSteamIdSrc = false;
        result.steamIdSrc_ = 0L;
        return this;
      }
      
      // optional uint32 app_id = 3;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional uint32 ep2p_session_error = 4;
      public boolean hasEp2PSessionError() {
        return result.hasEp2PSessionError();
      }
      public int getEp2PSessionError() {
        return result.getEp2PSessionError();
      }
      public Builder setEp2PSessionError(int value) {
        result.hasEp2PSessionError = true;
        result.ep2PSessionError_ = value;
        return this;
      }
      public Builder clearEp2PSessionError() {
        result.hasEp2PSessionError = false;
        result.ep2PSessionError_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientP2PConnectionFailInfo)
    }
    
    static {
      defaultInstance = new CMsgClientP2PConnectionFailInfo(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientP2PConnectionFailInfo)
  }
  
  public static final class CMsgClientGetAppOwnershipTicket extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientGetAppOwnershipTicket.newBuilder() to construct.
    private CMsgClientGetAppOwnershipTicket() {
      initFields();
    }
    private CMsgClientGetAppOwnershipTicket(boolean noInit) {}
    
    private static final CMsgClientGetAppOwnershipTicket defaultInstance;
    public static CMsgClientGetAppOwnershipTicket getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientGetAppOwnershipTicket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientGetAppOwnershipTicket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientGetAppOwnershipTicket_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientGetAppOwnershipTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientGetAppOwnershipTicket result;
      
      // Construct using SteamMessages.CMsgClientGetAppOwnershipTicket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientGetAppOwnershipTicket();
        return builder;
      }
      
      protected SteamMessages.CMsgClientGetAppOwnershipTicket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientGetAppOwnershipTicket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientGetAppOwnershipTicket.getDescriptor();
      }
      
      public SteamMessages.CMsgClientGetAppOwnershipTicket getDefaultInstanceForType() {
        return SteamMessages.CMsgClientGetAppOwnershipTicket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientGetAppOwnershipTicket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientGetAppOwnershipTicket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientGetAppOwnershipTicket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientGetAppOwnershipTicket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientGetAppOwnershipTicket) {
          return mergeFrom((SteamMessages.CMsgClientGetAppOwnershipTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientGetAppOwnershipTicket other) {
        if (other == SteamMessages.CMsgClientGetAppOwnershipTicket.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientGetAppOwnershipTicket)
    }
    
    static {
      defaultInstance = new CMsgClientGetAppOwnershipTicket(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientGetAppOwnershipTicket)
  }
  
  public static final class CMsgClientGetAppOwnershipTicketResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientGetAppOwnershipTicketResponse.newBuilder() to construct.
    private CMsgClientGetAppOwnershipTicketResponse() {
      initFields();
    }
    private CMsgClientGetAppOwnershipTicketResponse(boolean noInit) {}
    
    private static final CMsgClientGetAppOwnershipTicketResponse defaultInstance;
    public static CMsgClientGetAppOwnershipTicketResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientGetAppOwnershipTicketResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientGetAppOwnershipTicketResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientGetAppOwnershipTicketResponse_fieldAccessorTable;
    }
    
    // optional uint32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional uint32 app_id = 2;
    public static final int APP_ID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional bytes ticket = 3;
    public static final int TICKET_FIELD_NUMBER = 3;
    private boolean hasTicket;
    private com.google.protobuf.ByteString ticket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTicket() { return hasTicket; }
    public com.google.protobuf.ByteString getTicket() { return ticket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeUInt32(1, getEresult());
      }
      if (hasAppId()) {
        output.writeUInt32(2, getAppId());
      }
      if (hasTicket()) {
        output.writeBytes(3, getTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getEresult());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getAppId());
      }
      if (hasTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGetAppOwnershipTicketResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientGetAppOwnershipTicketResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientGetAppOwnershipTicketResponse result;
      
      // Construct using SteamMessages.CMsgClientGetAppOwnershipTicketResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientGetAppOwnershipTicketResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientGetAppOwnershipTicketResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientGetAppOwnershipTicketResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientGetAppOwnershipTicketResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientGetAppOwnershipTicketResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientGetAppOwnershipTicketResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientGetAppOwnershipTicketResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientGetAppOwnershipTicketResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientGetAppOwnershipTicketResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientGetAppOwnershipTicketResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientGetAppOwnershipTicketResponse) {
          return mergeFrom((SteamMessages.CMsgClientGetAppOwnershipTicketResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientGetAppOwnershipTicketResponse other) {
        if (other == SteamMessages.CMsgClientGetAppOwnershipTicketResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasTicket()) {
          setTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readUInt32());
              break;
            }
            case 16: {
              setAppId(input.readUInt32());
              break;
            }
            case 26: {
              setTicket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional uint32 app_id = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional bytes ticket = 3;
      public boolean hasTicket() {
        return result.hasTicket();
      }
      public com.google.protobuf.ByteString getTicket() {
        return result.getTicket();
      }
      public Builder setTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder clearTicket() {
        result.hasTicket = false;
        result.ticket_ = getDefaultInstance().getTicket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientGetAppOwnershipTicketResponse)
    }
    
    static {
      defaultInstance = new CMsgClientGetAppOwnershipTicketResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientGetAppOwnershipTicketResponse)
  }
  
  public static final class CMsgClientSessionToken extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientSessionToken.newBuilder() to construct.
    private CMsgClientSessionToken() {
      initFields();
    }
    private CMsgClientSessionToken(boolean noInit) {}
    
    private static final CMsgClientSessionToken defaultInstance;
    public static CMsgClientSessionToken getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientSessionToken getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientSessionToken_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientSessionToken_fieldAccessorTable;
    }
    
    // optional uint64 token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private long token_ = 0L;
    public boolean hasToken() { return hasToken; }
    public long getToken() { return token_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeUInt64(1, getToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientSessionToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientSessionToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientSessionToken prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientSessionToken result;
      
      // Construct using SteamMessages.CMsgClientSessionToken.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientSessionToken();
        return builder;
      }
      
      protected SteamMessages.CMsgClientSessionToken internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientSessionToken();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientSessionToken.getDescriptor();
      }
      
      public SteamMessages.CMsgClientSessionToken getDefaultInstanceForType() {
        return SteamMessages.CMsgClientSessionToken.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientSessionToken build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientSessionToken buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientSessionToken buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientSessionToken returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientSessionToken) {
          return mergeFrom((SteamMessages.CMsgClientSessionToken)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientSessionToken other) {
        if (other == SteamMessages.CMsgClientSessionToken.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setToken(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public long getToken() {
        return result.getToken();
      }
      public Builder setToken(long value) {
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientSessionToken)
    }
    
    static {
      defaultInstance = new CMsgClientSessionToken(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientSessionToken)
  }
  
  public static final class CMsgAuthTicket extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAuthTicket.newBuilder() to construct.
    private CMsgAuthTicket() {
      initFields();
    }
    private CMsgAuthTicket(boolean noInit) {}
    
    private static final CMsgAuthTicket defaultInstance;
    public static CMsgAuthTicket getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAuthTicket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAuthTicket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAuthTicket_fieldAccessorTable;
    }
    
    // optional uint32 estate = 1;
    public static final int ESTATE_FIELD_NUMBER = 1;
    private boolean hasEstate;
    private int estate_ = 0;
    public boolean hasEstate() { return hasEstate; }
    public int getEstate() { return estate_; }
    
    // optional uint32 eresult = 2 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 2;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional fixed64 steam_id = 3;
    public static final int STEAM_ID_FIELD_NUMBER = 3;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional fixed64 game_id = 4;
    public static final int GAME_ID_FIELD_NUMBER = 4;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    // optional uint32 h_steam_pipe = 5;
    public static final int H_STEAM_PIPE_FIELD_NUMBER = 5;
    private boolean hasHSteamPipe;
    private int hSteamPipe_ = 0;
    public boolean hasHSteamPipe() { return hasHSteamPipe; }
    public int getHSteamPipe() { return hSteamPipe_; }
    
    // optional uint32 ticket_crc = 6;
    public static final int TICKET_CRC_FIELD_NUMBER = 6;
    private boolean hasTicketCrc;
    private int ticketCrc_ = 0;
    public boolean hasTicketCrc() { return hasTicketCrc; }
    public int getTicketCrc() { return ticketCrc_; }
    
    // optional bytes ticket = 7;
    public static final int TICKET_FIELD_NUMBER = 7;
    private boolean hasTicket;
    private com.google.protobuf.ByteString ticket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTicket() { return hasTicket; }
    public com.google.protobuf.ByteString getTicket() { return ticket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEstate()) {
        output.writeUInt32(1, getEstate());
      }
      if (hasEresult()) {
        output.writeUInt32(2, getEresult());
      }
      if (hasSteamId()) {
        output.writeFixed64(3, getSteamId());
      }
      if (hasGameId()) {
        output.writeFixed64(4, getGameId());
      }
      if (hasHSteamPipe()) {
        output.writeUInt32(5, getHSteamPipe());
      }
      if (hasTicketCrc()) {
        output.writeUInt32(6, getTicketCrc());
      }
      if (hasTicket()) {
        output.writeBytes(7, getTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEstate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getEstate());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getEresult());
      }
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamId());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, getGameId());
      }
      if (hasHSteamPipe()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getHSteamPipe());
      }
      if (hasTicketCrc()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getTicketCrc());
      }
      if (hasTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAuthTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAuthTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAuthTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAuthTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAuthTicket result;
      
      // Construct using SteamMessages.CMsgAuthTicket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAuthTicket();
        return builder;
      }
      
      protected SteamMessages.CMsgAuthTicket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAuthTicket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAuthTicket.getDescriptor();
      }
      
      public SteamMessages.CMsgAuthTicket getDefaultInstanceForType() {
        return SteamMessages.CMsgAuthTicket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAuthTicket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAuthTicket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAuthTicket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgAuthTicket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAuthTicket) {
          return mergeFrom((SteamMessages.CMsgAuthTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAuthTicket other) {
        if (other == SteamMessages.CMsgAuthTicket.getDefaultInstance()) return this;
        if (other.hasEstate()) {
          setEstate(other.getEstate());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasHSteamPipe()) {
          setHSteamPipe(other.getHSteamPipe());
        }
        if (other.hasTicketCrc()) {
          setTicketCrc(other.getTicketCrc());
        }
        if (other.hasTicket()) {
          setTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEstate(input.readUInt32());
              break;
            }
            case 16: {
              setEresult(input.readUInt32());
              break;
            }
            case 25: {
              setSteamId(input.readFixed64());
              break;
            }
            case 33: {
              setGameId(input.readFixed64());
              break;
            }
            case 40: {
              setHSteamPipe(input.readUInt32());
              break;
            }
            case 48: {
              setTicketCrc(input.readUInt32());
              break;
            }
            case 58: {
              setTicket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 estate = 1;
      public boolean hasEstate() {
        return result.hasEstate();
      }
      public int getEstate() {
        return result.getEstate();
      }
      public Builder setEstate(int value) {
        result.hasEstate = true;
        result.estate_ = value;
        return this;
      }
      public Builder clearEstate() {
        result.hasEstate = false;
        result.estate_ = 0;
        return this;
      }
      
      // optional uint32 eresult = 2 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional fixed64 steam_id = 3;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional fixed64 game_id = 4;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // optional uint32 h_steam_pipe = 5;
      public boolean hasHSteamPipe() {
        return result.hasHSteamPipe();
      }
      public int getHSteamPipe() {
        return result.getHSteamPipe();
      }
      public Builder setHSteamPipe(int value) {
        result.hasHSteamPipe = true;
        result.hSteamPipe_ = value;
        return this;
      }
      public Builder clearHSteamPipe() {
        result.hasHSteamPipe = false;
        result.hSteamPipe_ = 0;
        return this;
      }
      
      // optional uint32 ticket_crc = 6;
      public boolean hasTicketCrc() {
        return result.hasTicketCrc();
      }
      public int getTicketCrc() {
        return result.getTicketCrc();
      }
      public Builder setTicketCrc(int value) {
        result.hasTicketCrc = true;
        result.ticketCrc_ = value;
        return this;
      }
      public Builder clearTicketCrc() {
        result.hasTicketCrc = false;
        result.ticketCrc_ = 0;
        return this;
      }
      
      // optional bytes ticket = 7;
      public boolean hasTicket() {
        return result.hasTicket();
      }
      public com.google.protobuf.ByteString getTicket() {
        return result.getTicket();
      }
      public Builder setTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder clearTicket() {
        result.hasTicket = false;
        result.ticket_ = getDefaultInstance().getTicket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAuthTicket)
    }
    
    static {
      defaultInstance = new CMsgAuthTicket(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAuthTicket)
  }
  
  public static final class CMsgClientGameConnectTokens extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientGameConnectTokens.newBuilder() to construct.
    private CMsgClientGameConnectTokens() {
      initFields();
    }
    private CMsgClientGameConnectTokens(boolean noInit) {}
    
    private static final CMsgClientGameConnectTokens defaultInstance;
    public static CMsgClientGameConnectTokens getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientGameConnectTokens getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientGameConnectTokens_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientGameConnectTokens_fieldAccessorTable;
    }
    
    // optional uint32 max_tokens_to_keep = 1 [default = 10];
    public static final int MAX_TOKENS_TO_KEEP_FIELD_NUMBER = 1;
    private boolean hasMaxTokensToKeep;
    private int maxTokensToKeep_ = 10;
    public boolean hasMaxTokensToKeep() { return hasMaxTokensToKeep; }
    public int getMaxTokensToKeep() { return maxTokensToKeep_; }
    
    // repeated bytes tokens = 2;
    public static final int TOKENS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> tokens_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getTokensList() {
      return tokens_;
    }
    public int getTokensCount() { return tokens_.size(); }
    public com.google.protobuf.ByteString getTokens(int index) {
      return tokens_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMaxTokensToKeep()) {
        output.writeUInt32(1, getMaxTokensToKeep());
      }
      for (com.google.protobuf.ByteString element : getTokensList()) {
        output.writeBytes(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMaxTokensToKeep()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getMaxTokensToKeep());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getTokensList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTokensList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGameConnectTokens parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientGameConnectTokens prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientGameConnectTokens result;
      
      // Construct using SteamMessages.CMsgClientGameConnectTokens.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientGameConnectTokens();
        return builder;
      }
      
      protected SteamMessages.CMsgClientGameConnectTokens internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientGameConnectTokens();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientGameConnectTokens.getDescriptor();
      }
      
      public SteamMessages.CMsgClientGameConnectTokens getDefaultInstanceForType() {
        return SteamMessages.CMsgClientGameConnectTokens.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientGameConnectTokens build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientGameConnectTokens buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientGameConnectTokens buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tokens_ != java.util.Collections.EMPTY_LIST) {
          result.tokens_ =
            java.util.Collections.unmodifiableList(result.tokens_);
        }
        SteamMessages.CMsgClientGameConnectTokens returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientGameConnectTokens) {
          return mergeFrom((SteamMessages.CMsgClientGameConnectTokens)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientGameConnectTokens other) {
        if (other == SteamMessages.CMsgClientGameConnectTokens.getDefaultInstance()) return this;
        if (other.hasMaxTokensToKeep()) {
          setMaxTokensToKeep(other.getMaxTokensToKeep());
        }
        if (!other.tokens_.isEmpty()) {
          if (result.tokens_.isEmpty()) {
            result.tokens_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.tokens_.addAll(other.tokens_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMaxTokensToKeep(input.readUInt32());
              break;
            }
            case 18: {
              addTokens(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 max_tokens_to_keep = 1 [default = 10];
      public boolean hasMaxTokensToKeep() {
        return result.hasMaxTokensToKeep();
      }
      public int getMaxTokensToKeep() {
        return result.getMaxTokensToKeep();
      }
      public Builder setMaxTokensToKeep(int value) {
        result.hasMaxTokensToKeep = true;
        result.maxTokensToKeep_ = value;
        return this;
      }
      public Builder clearMaxTokensToKeep() {
        result.hasMaxTokensToKeep = false;
        result.maxTokensToKeep_ = 10;
        return this;
      }
      
      // repeated bytes tokens = 2;
      public java.util.List<com.google.protobuf.ByteString> getTokensList() {
        return java.util.Collections.unmodifiableList(result.tokens_);
      }
      public int getTokensCount() {
        return result.getTokensCount();
      }
      public com.google.protobuf.ByteString getTokens(int index) {
        return result.getTokens(index);
      }
      public Builder setTokens(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tokens_.set(index, value);
        return this;
      }
      public Builder addTokens(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.tokens_.add(value);
        return this;
      }
      public Builder addAllTokens(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.tokens_);
        return this;
      }
      public Builder clearTokens() {
        result.tokens_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientGameConnectTokens)
    }
    
    static {
      defaultInstance = new CMsgClientGameConnectTokens(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientGameConnectTokens)
  }
  
  public static final class CMsgGSServerType extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSServerType.newBuilder() to construct.
    private CMsgGSServerType() {
      initFields();
    }
    private CMsgGSServerType(boolean noInit) {}
    
    private static final CMsgGSServerType defaultInstance;
    public static CMsgGSServerType getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSServerType getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSServerType_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSServerType_fieldAccessorTable;
    }
    
    // optional uint32 app_id_served = 1;
    public static final int APP_ID_SERVED_FIELD_NUMBER = 1;
    private boolean hasAppIdServed;
    private int appIdServed_ = 0;
    public boolean hasAppIdServed() { return hasAppIdServed; }
    public int getAppIdServed() { return appIdServed_; }
    
    // optional uint32 flags = 2;
    public static final int FLAGS_FIELD_NUMBER = 2;
    private boolean hasFlags;
    private int flags_ = 0;
    public boolean hasFlags() { return hasFlags; }
    public int getFlags() { return flags_; }
    
    // optional uint32 game_ip_address = 3;
    public static final int GAME_IP_ADDRESS_FIELD_NUMBER = 3;
    private boolean hasGameIpAddress;
    private int gameIpAddress_ = 0;
    public boolean hasGameIpAddress() { return hasGameIpAddress; }
    public int getGameIpAddress() { return gameIpAddress_; }
    
    // optional uint32 game_port = 4;
    public static final int GAME_PORT_FIELD_NUMBER = 4;
    private boolean hasGamePort;
    private int gamePort_ = 0;
    public boolean hasGamePort() { return hasGamePort; }
    public int getGamePort() { return gamePort_; }
    
    // optional string game_dir = 5;
    public static final int GAME_DIR_FIELD_NUMBER = 5;
    private boolean hasGameDir;
    private java.lang.String gameDir_ = "";
    public boolean hasGameDir() { return hasGameDir; }
    public java.lang.String getGameDir() { return gameDir_; }
    
    // optional string game_version = 6;
    public static final int GAME_VERSION_FIELD_NUMBER = 6;
    private boolean hasGameVersion;
    private java.lang.String gameVersion_ = "";
    public boolean hasGameVersion() { return hasGameVersion; }
    public java.lang.String getGameVersion() { return gameVersion_; }
    
    // optional uint32 game_query_port = 7;
    public static final int GAME_QUERY_PORT_FIELD_NUMBER = 7;
    private boolean hasGameQueryPort;
    private int gameQueryPort_ = 0;
    public boolean hasGameQueryPort() { return hasGameQueryPort; }
    public int getGameQueryPort() { return gameQueryPort_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppIdServed()) {
        output.writeUInt32(1, getAppIdServed());
      }
      if (hasFlags()) {
        output.writeUInt32(2, getFlags());
      }
      if (hasGameIpAddress()) {
        output.writeUInt32(3, getGameIpAddress());
      }
      if (hasGamePort()) {
        output.writeUInt32(4, getGamePort());
      }
      if (hasGameDir()) {
        output.writeString(5, getGameDir());
      }
      if (hasGameVersion()) {
        output.writeString(6, getGameVersion());
      }
      if (hasGameQueryPort()) {
        output.writeUInt32(7, getGameQueryPort());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppIdServed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppIdServed());
      }
      if (hasFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getFlags());
      }
      if (hasGameIpAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getGameIpAddress());
      }
      if (hasGamePort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getGamePort());
      }
      if (hasGameDir()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getGameDir());
      }
      if (hasGameVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getGameVersion());
      }
      if (hasGameQueryPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getGameQueryPort());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSServerType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSServerType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSServerType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSServerType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSServerType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSServerType result;
      
      // Construct using SteamMessages.CMsgGSServerType.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSServerType();
        return builder;
      }
      
      protected SteamMessages.CMsgGSServerType internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSServerType();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSServerType.getDescriptor();
      }
      
      public SteamMessages.CMsgGSServerType getDefaultInstanceForType() {
        return SteamMessages.CMsgGSServerType.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSServerType build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSServerType buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSServerType buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSServerType returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSServerType) {
          return mergeFrom((SteamMessages.CMsgGSServerType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSServerType other) {
        if (other == SteamMessages.CMsgGSServerType.getDefaultInstance()) return this;
        if (other.hasAppIdServed()) {
          setAppIdServed(other.getAppIdServed());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasGameIpAddress()) {
          setGameIpAddress(other.getGameIpAddress());
        }
        if (other.hasGamePort()) {
          setGamePort(other.getGamePort());
        }
        if (other.hasGameDir()) {
          setGameDir(other.getGameDir());
        }
        if (other.hasGameVersion()) {
          setGameVersion(other.getGameVersion());
        }
        if (other.hasGameQueryPort()) {
          setGameQueryPort(other.getGameQueryPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppIdServed(input.readUInt32());
              break;
            }
            case 16: {
              setFlags(input.readUInt32());
              break;
            }
            case 24: {
              setGameIpAddress(input.readUInt32());
              break;
            }
            case 32: {
              setGamePort(input.readUInt32());
              break;
            }
            case 42: {
              setGameDir(input.readString());
              break;
            }
            case 50: {
              setGameVersion(input.readString());
              break;
            }
            case 56: {
              setGameQueryPort(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id_served = 1;
      public boolean hasAppIdServed() {
        return result.hasAppIdServed();
      }
      public int getAppIdServed() {
        return result.getAppIdServed();
      }
      public Builder setAppIdServed(int value) {
        result.hasAppIdServed = true;
        result.appIdServed_ = value;
        return this;
      }
      public Builder clearAppIdServed() {
        result.hasAppIdServed = false;
        result.appIdServed_ = 0;
        return this;
      }
      
      // optional uint32 flags = 2;
      public boolean hasFlags() {
        return result.hasFlags();
      }
      public int getFlags() {
        return result.getFlags();
      }
      public Builder setFlags(int value) {
        result.hasFlags = true;
        result.flags_ = value;
        return this;
      }
      public Builder clearFlags() {
        result.hasFlags = false;
        result.flags_ = 0;
        return this;
      }
      
      // optional uint32 game_ip_address = 3;
      public boolean hasGameIpAddress() {
        return result.hasGameIpAddress();
      }
      public int getGameIpAddress() {
        return result.getGameIpAddress();
      }
      public Builder setGameIpAddress(int value) {
        result.hasGameIpAddress = true;
        result.gameIpAddress_ = value;
        return this;
      }
      public Builder clearGameIpAddress() {
        result.hasGameIpAddress = false;
        result.gameIpAddress_ = 0;
        return this;
      }
      
      // optional uint32 game_port = 4;
      public boolean hasGamePort() {
        return result.hasGamePort();
      }
      public int getGamePort() {
        return result.getGamePort();
      }
      public Builder setGamePort(int value) {
        result.hasGamePort = true;
        result.gamePort_ = value;
        return this;
      }
      public Builder clearGamePort() {
        result.hasGamePort = false;
        result.gamePort_ = 0;
        return this;
      }
      
      // optional string game_dir = 5;
      public boolean hasGameDir() {
        return result.hasGameDir();
      }
      public java.lang.String getGameDir() {
        return result.getGameDir();
      }
      public Builder setGameDir(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameDir = true;
        result.gameDir_ = value;
        return this;
      }
      public Builder clearGameDir() {
        result.hasGameDir = false;
        result.gameDir_ = getDefaultInstance().getGameDir();
        return this;
      }
      
      // optional string game_version = 6;
      public boolean hasGameVersion() {
        return result.hasGameVersion();
      }
      public java.lang.String getGameVersion() {
        return result.getGameVersion();
      }
      public Builder setGameVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameVersion = true;
        result.gameVersion_ = value;
        return this;
      }
      public Builder clearGameVersion() {
        result.hasGameVersion = false;
        result.gameVersion_ = getDefaultInstance().getGameVersion();
        return this;
      }
      
      // optional uint32 game_query_port = 7;
      public boolean hasGameQueryPort() {
        return result.hasGameQueryPort();
      }
      public int getGameQueryPort() {
        return result.getGameQueryPort();
      }
      public Builder setGameQueryPort(int value) {
        result.hasGameQueryPort = true;
        result.gameQueryPort_ = value;
        return this;
      }
      public Builder clearGameQueryPort() {
        result.hasGameQueryPort = false;
        result.gameQueryPort_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSServerType)
    }
    
    static {
      defaultInstance = new CMsgGSServerType(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSServerType)
  }
  
  public static final class CMsgGSStatusReply extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSStatusReply.newBuilder() to construct.
    private CMsgGSStatusReply() {
      initFields();
    }
    private CMsgGSStatusReply(boolean noInit) {}
    
    private static final CMsgGSStatusReply defaultInstance;
    public static CMsgGSStatusReply getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSStatusReply getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSStatusReply_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSStatusReply_fieldAccessorTable;
    }
    
    // optional bool is_secure = 1;
    public static final int IS_SECURE_FIELD_NUMBER = 1;
    private boolean hasIsSecure;
    private boolean isSecure_ = false;
    public boolean hasIsSecure() { return hasIsSecure; }
    public boolean getIsSecure() { return isSecure_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSecure()) {
        output.writeBool(1, getIsSecure());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSecure()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSecure());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSStatusReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSStatusReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSStatusReply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSStatusReply result;
      
      // Construct using SteamMessages.CMsgGSStatusReply.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSStatusReply();
        return builder;
      }
      
      protected SteamMessages.CMsgGSStatusReply internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSStatusReply();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSStatusReply.getDescriptor();
      }
      
      public SteamMessages.CMsgGSStatusReply getDefaultInstanceForType() {
        return SteamMessages.CMsgGSStatusReply.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSStatusReply build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSStatusReply buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSStatusReply buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSStatusReply returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSStatusReply) {
          return mergeFrom((SteamMessages.CMsgGSStatusReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSStatusReply other) {
        if (other == SteamMessages.CMsgGSStatusReply.getDefaultInstance()) return this;
        if (other.hasIsSecure()) {
          setIsSecure(other.getIsSecure());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSecure(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional bool is_secure = 1;
      public boolean hasIsSecure() {
        return result.hasIsSecure();
      }
      public boolean getIsSecure() {
        return result.getIsSecure();
      }
      public Builder setIsSecure(boolean value) {
        result.hasIsSecure = true;
        result.isSecure_ = value;
        return this;
      }
      public Builder clearIsSecure() {
        result.hasIsSecure = false;
        result.isSecure_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSStatusReply)
    }
    
    static {
      defaultInstance = new CMsgGSStatusReply(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSStatusReply)
  }
  
  public static final class CMsgGSUserPlaying extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSUserPlaying.newBuilder() to construct.
    private CMsgGSUserPlaying() {
      initFields();
    }
    private CMsgGSUserPlaying(boolean noInit) {}
    
    private static final CMsgGSUserPlaying defaultInstance;
    public static CMsgGSUserPlaying getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSUserPlaying getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSUserPlaying_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSUserPlaying_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional uint32 public_ip = 2;
    public static final int PUBLIC_IP_FIELD_NUMBER = 2;
    private boolean hasPublicIp;
    private int publicIp_ = 0;
    public boolean hasPublicIp() { return hasPublicIp; }
    public int getPublicIp() { return publicIp_; }
    
    // optional bytes token = 3;
    public static final int TOKEN_FIELD_NUMBER = 3;
    private boolean hasToken;
    private com.google.protobuf.ByteString token_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasToken() { return hasToken; }
    public com.google.protobuf.ByteString getToken() { return token_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasPublicIp()) {
        output.writeUInt32(2, getPublicIp());
      }
      if (hasToken()) {
        output.writeBytes(3, getToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasPublicIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getPublicIp());
      }
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSUserPlaying parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSUserPlaying parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSUserPlaying prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSUserPlaying result;
      
      // Construct using SteamMessages.CMsgGSUserPlaying.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSUserPlaying();
        return builder;
      }
      
      protected SteamMessages.CMsgGSUserPlaying internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSUserPlaying();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSUserPlaying.getDescriptor();
      }
      
      public SteamMessages.CMsgGSUserPlaying getDefaultInstanceForType() {
        return SteamMessages.CMsgGSUserPlaying.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSUserPlaying build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSUserPlaying buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSUserPlaying buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSUserPlaying returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSUserPlaying) {
          return mergeFrom((SteamMessages.CMsgGSUserPlaying)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSUserPlaying other) {
        if (other == SteamMessages.CMsgGSUserPlaying.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasPublicIp()) {
          setPublicIp(other.getPublicIp());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setPublicIp(input.readUInt32());
              break;
            }
            case 26: {
              setToken(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional uint32 public_ip = 2;
      public boolean hasPublicIp() {
        return result.hasPublicIp();
      }
      public int getPublicIp() {
        return result.getPublicIp();
      }
      public Builder setPublicIp(int value) {
        result.hasPublicIp = true;
        result.publicIp_ = value;
        return this;
      }
      public Builder clearPublicIp() {
        result.hasPublicIp = false;
        result.publicIp_ = 0;
        return this;
      }
      
      // optional bytes token = 3;
      public boolean hasToken() {
        return result.hasToken();
      }
      public com.google.protobuf.ByteString getToken() {
        return result.getToken();
      }
      public Builder setToken(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSUserPlaying)
    }
    
    static {
      defaultInstance = new CMsgGSUserPlaying(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSUserPlaying)
  }
  
  public static final class CMsgGSDisconnectNotice extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSDisconnectNotice.newBuilder() to construct.
    private CMsgGSDisconnectNotice() {
      initFields();
    }
    private CMsgGSDisconnectNotice(boolean noInit) {}
    
    private static final CMsgGSDisconnectNotice defaultInstance;
    public static CMsgGSDisconnectNotice getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSDisconnectNotice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSDisconnectNotice_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSDisconnectNotice_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSDisconnectNotice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSDisconnectNotice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSDisconnectNotice result;
      
      // Construct using SteamMessages.CMsgGSDisconnectNotice.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSDisconnectNotice();
        return builder;
      }
      
      protected SteamMessages.CMsgGSDisconnectNotice internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSDisconnectNotice();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSDisconnectNotice.getDescriptor();
      }
      
      public SteamMessages.CMsgGSDisconnectNotice getDefaultInstanceForType() {
        return SteamMessages.CMsgGSDisconnectNotice.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSDisconnectNotice build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSDisconnectNotice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSDisconnectNotice buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSDisconnectNotice returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSDisconnectNotice) {
          return mergeFrom((SteamMessages.CMsgGSDisconnectNotice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSDisconnectNotice other) {
        if (other == SteamMessages.CMsgGSDisconnectNotice.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSDisconnectNotice)
    }
    
    static {
      defaultInstance = new CMsgGSDisconnectNotice(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSDisconnectNotice)
  }
  
  public static final class CMsgClientGamesPlayed extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientGamesPlayed.newBuilder() to construct.
    private CMsgClientGamesPlayed() {
      initFields();
    }
    private CMsgClientGamesPlayed(boolean noInit) {}
    
    private static final CMsgClientGamesPlayed defaultInstance;
    public static CMsgClientGamesPlayed getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientGamesPlayed getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientGamesPlayed_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientGamesPlayed_fieldAccessorTable;
    }
    
    public static final class GamePlayed extends
        com.google.protobuf.GeneratedMessage {
      // Use GamePlayed.newBuilder() to construct.
      private GamePlayed() {
        initFields();
      }
      private GamePlayed(boolean noInit) {}
      
      private static final GamePlayed defaultInstance;
      public static GamePlayed getDefaultInstance() {
        return defaultInstance;
      }
      
      public GamePlayed getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientGamesPlayed_GamePlayed_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientGamesPlayed_GamePlayed_fieldAccessorTable;
      }
      
      // optional uint64 steam_id_gs = 1;
      public static final int STEAM_ID_GS_FIELD_NUMBER = 1;
      private boolean hasSteamIdGs;
      private long steamIdGs_ = 0L;
      public boolean hasSteamIdGs() { return hasSteamIdGs; }
      public long getSteamIdGs() { return steamIdGs_; }
      
      // optional fixed64 game_id = 2;
      public static final int GAME_ID_FIELD_NUMBER = 2;
      private boolean hasGameId;
      private long gameId_ = 0L;
      public boolean hasGameId() { return hasGameId; }
      public long getGameId() { return gameId_; }
      
      // optional uint32 game_ip_address = 3;
      public static final int GAME_IP_ADDRESS_FIELD_NUMBER = 3;
      private boolean hasGameIpAddress;
      private int gameIpAddress_ = 0;
      public boolean hasGameIpAddress() { return hasGameIpAddress; }
      public int getGameIpAddress() { return gameIpAddress_; }
      
      // optional uint32 game_port = 4;
      public static final int GAME_PORT_FIELD_NUMBER = 4;
      private boolean hasGamePort;
      private int gamePort_ = 0;
      public boolean hasGamePort() { return hasGamePort; }
      public int getGamePort() { return gamePort_; }
      
      // optional bool is_secure = 5;
      public static final int IS_SECURE_FIELD_NUMBER = 5;
      private boolean hasIsSecure;
      private boolean isSecure_ = false;
      public boolean hasIsSecure() { return hasIsSecure; }
      public boolean getIsSecure() { return isSecure_; }
      
      // optional bytes token = 6;
      public static final int TOKEN_FIELD_NUMBER = 6;
      private boolean hasToken;
      private com.google.protobuf.ByteString token_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasToken() { return hasToken; }
      public com.google.protobuf.ByteString getToken() { return token_; }
      
      // optional string game_extra_info = 7;
      public static final int GAME_EXTRA_INFO_FIELD_NUMBER = 7;
      private boolean hasGameExtraInfo;
      private java.lang.String gameExtraInfo_ = "";
      public boolean hasGameExtraInfo() { return hasGameExtraInfo; }
      public java.lang.String getGameExtraInfo() { return gameExtraInfo_; }
      
      // optional bytes game_data_blob = 8;
      public static final int GAME_DATA_BLOB_FIELD_NUMBER = 8;
      private boolean hasGameDataBlob;
      private com.google.protobuf.ByteString gameDataBlob_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasGameDataBlob() { return hasGameDataBlob; }
      public com.google.protobuf.ByteString getGameDataBlob() { return gameDataBlob_; }
      
      // optional uint32 process_id = 9;
      public static final int PROCESS_ID_FIELD_NUMBER = 9;
      private boolean hasProcessId;
      private int processId_ = 0;
      public boolean hasProcessId() { return hasProcessId; }
      public int getProcessId() { return processId_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamIdGs()) {
          output.writeUInt64(1, getSteamIdGs());
        }
        if (hasGameId()) {
          output.writeFixed64(2, getGameId());
        }
        if (hasGameIpAddress()) {
          output.writeUInt32(3, getGameIpAddress());
        }
        if (hasGamePort()) {
          output.writeUInt32(4, getGamePort());
        }
        if (hasIsSecure()) {
          output.writeBool(5, getIsSecure());
        }
        if (hasToken()) {
          output.writeBytes(6, getToken());
        }
        if (hasGameExtraInfo()) {
          output.writeString(7, getGameExtraInfo());
        }
        if (hasGameDataBlob()) {
          output.writeBytes(8, getGameDataBlob());
        }
        if (hasProcessId()) {
          output.writeUInt32(9, getProcessId());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamIdGs()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, getSteamIdGs());
        }
        if (hasGameId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, getGameId());
        }
        if (hasGameIpAddress()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, getGameIpAddress());
        }
        if (hasGamePort()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, getGamePort());
        }
        if (hasIsSecure()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, getIsSecure());
        }
        if (hasToken()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getToken());
        }
        if (hasGameExtraInfo()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(7, getGameExtraInfo());
        }
        if (hasGameDataBlob()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getGameDataBlob());
        }
        if (hasProcessId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, getProcessId());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientGamesPlayed.GamePlayed parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientGamesPlayed.GamePlayed prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientGamesPlayed.GamePlayed result;
        
        // Construct using SteamMessages.CMsgClientGamesPlayed.GamePlayed.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientGamesPlayed.GamePlayed();
          return builder;
        }
        
        protected SteamMessages.CMsgClientGamesPlayed.GamePlayed internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientGamesPlayed.GamePlayed();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientGamesPlayed.GamePlayed.getDescriptor();
        }
        
        public SteamMessages.CMsgClientGamesPlayed.GamePlayed getDefaultInstanceForType() {
          return SteamMessages.CMsgClientGamesPlayed.GamePlayed.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientGamesPlayed.GamePlayed build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientGamesPlayed.GamePlayed buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientGamesPlayed.GamePlayed buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientGamesPlayed.GamePlayed returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientGamesPlayed.GamePlayed) {
            return mergeFrom((SteamMessages.CMsgClientGamesPlayed.GamePlayed)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientGamesPlayed.GamePlayed other) {
          if (other == SteamMessages.CMsgClientGamesPlayed.GamePlayed.getDefaultInstance()) return this;
          if (other.hasSteamIdGs()) {
            setSteamIdGs(other.getSteamIdGs());
          }
          if (other.hasGameId()) {
            setGameId(other.getGameId());
          }
          if (other.hasGameIpAddress()) {
            setGameIpAddress(other.getGameIpAddress());
          }
          if (other.hasGamePort()) {
            setGamePort(other.getGamePort());
          }
          if (other.hasIsSecure()) {
            setIsSecure(other.getIsSecure());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          if (other.hasGameExtraInfo()) {
            setGameExtraInfo(other.getGameExtraInfo());
          }
          if (other.hasGameDataBlob()) {
            setGameDataBlob(other.getGameDataBlob());
          }
          if (other.hasProcessId()) {
            setProcessId(other.getProcessId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSteamIdGs(input.readUInt64());
                break;
              }
              case 17: {
                setGameId(input.readFixed64());
                break;
              }
              case 24: {
                setGameIpAddress(input.readUInt32());
                break;
              }
              case 32: {
                setGamePort(input.readUInt32());
                break;
              }
              case 40: {
                setIsSecure(input.readBool());
                break;
              }
              case 50: {
                setToken(input.readBytes());
                break;
              }
              case 58: {
                setGameExtraInfo(input.readString());
                break;
              }
              case 66: {
                setGameDataBlob(input.readBytes());
                break;
              }
              case 72: {
                setProcessId(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // optional uint64 steam_id_gs = 1;
        public boolean hasSteamIdGs() {
          return result.hasSteamIdGs();
        }
        public long getSteamIdGs() {
          return result.getSteamIdGs();
        }
        public Builder setSteamIdGs(long value) {
          result.hasSteamIdGs = true;
          result.steamIdGs_ = value;
          return this;
        }
        public Builder clearSteamIdGs() {
          result.hasSteamIdGs = false;
          result.steamIdGs_ = 0L;
          return this;
        }
        
        // optional fixed64 game_id = 2;
        public boolean hasGameId() {
          return result.hasGameId();
        }
        public long getGameId() {
          return result.getGameId();
        }
        public Builder setGameId(long value) {
          result.hasGameId = true;
          result.gameId_ = value;
          return this;
        }
        public Builder clearGameId() {
          result.hasGameId = false;
          result.gameId_ = 0L;
          return this;
        }
        
        // optional uint32 game_ip_address = 3;
        public boolean hasGameIpAddress() {
          return result.hasGameIpAddress();
        }
        public int getGameIpAddress() {
          return result.getGameIpAddress();
        }
        public Builder setGameIpAddress(int value) {
          result.hasGameIpAddress = true;
          result.gameIpAddress_ = value;
          return this;
        }
        public Builder clearGameIpAddress() {
          result.hasGameIpAddress = false;
          result.gameIpAddress_ = 0;
          return this;
        }
        
        // optional uint32 game_port = 4;
        public boolean hasGamePort() {
          return result.hasGamePort();
        }
        public int getGamePort() {
          return result.getGamePort();
        }
        public Builder setGamePort(int value) {
          result.hasGamePort = true;
          result.gamePort_ = value;
          return this;
        }
        public Builder clearGamePort() {
          result.hasGamePort = false;
          result.gamePort_ = 0;
          return this;
        }
        
        // optional bool is_secure = 5;
        public boolean hasIsSecure() {
          return result.hasIsSecure();
        }
        public boolean getIsSecure() {
          return result.getIsSecure();
        }
        public Builder setIsSecure(boolean value) {
          result.hasIsSecure = true;
          result.isSecure_ = value;
          return this;
        }
        public Builder clearIsSecure() {
          result.hasIsSecure = false;
          result.isSecure_ = false;
          return this;
        }
        
        // optional bytes token = 6;
        public boolean hasToken() {
          return result.hasToken();
        }
        public com.google.protobuf.ByteString getToken() {
          return result.getToken();
        }
        public Builder setToken(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
          result.token_ = value;
          return this;
        }
        public Builder clearToken() {
          result.hasToken = false;
          result.token_ = getDefaultInstance().getToken();
          return this;
        }
        
        // optional string game_extra_info = 7;
        public boolean hasGameExtraInfo() {
          return result.hasGameExtraInfo();
        }
        public java.lang.String getGameExtraInfo() {
          return result.getGameExtraInfo();
        }
        public Builder setGameExtraInfo(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameExtraInfo = true;
          result.gameExtraInfo_ = value;
          return this;
        }
        public Builder clearGameExtraInfo() {
          result.hasGameExtraInfo = false;
          result.gameExtraInfo_ = getDefaultInstance().getGameExtraInfo();
          return this;
        }
        
        // optional bytes game_data_blob = 8;
        public boolean hasGameDataBlob() {
          return result.hasGameDataBlob();
        }
        public com.google.protobuf.ByteString getGameDataBlob() {
          return result.getGameDataBlob();
        }
        public Builder setGameDataBlob(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameDataBlob = true;
          result.gameDataBlob_ = value;
          return this;
        }
        public Builder clearGameDataBlob() {
          result.hasGameDataBlob = false;
          result.gameDataBlob_ = getDefaultInstance().getGameDataBlob();
          return this;
        }
        
        // optional uint32 process_id = 9;
        public boolean hasProcessId() {
          return result.hasProcessId();
        }
        public int getProcessId() {
          return result.getProcessId();
        }
        public Builder setProcessId(int value) {
          result.hasProcessId = true;
          result.processId_ = value;
          return this;
        }
        public Builder clearProcessId() {
          result.hasProcessId = false;
          result.processId_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientGamesPlayed.GamePlayed)
      }
      
      static {
        defaultInstance = new GamePlayed(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientGamesPlayed.GamePlayed)
    }
    
    // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
    public static final int GAMES_PLAYED_FIELD_NUMBER = 1;
    private java.util.List<SteamMessages.CMsgClientGamesPlayed.GamePlayed> gamesPlayed_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientGamesPlayed.GamePlayed> getGamesPlayedList() {
      return gamesPlayed_;
    }
    public int getGamesPlayedCount() { return gamesPlayed_.size(); }
    public SteamMessages.CMsgClientGamesPlayed.GamePlayed getGamesPlayed(int index) {
      return gamesPlayed_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (SteamMessages.CMsgClientGamesPlayed.GamePlayed element : getGamesPlayedList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (SteamMessages.CMsgClientGamesPlayed.GamePlayed element : getGamesPlayedList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGamesPlayed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientGamesPlayed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientGamesPlayed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientGamesPlayed result;
      
      // Construct using SteamMessages.CMsgClientGamesPlayed.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientGamesPlayed();
        return builder;
      }
      
      protected SteamMessages.CMsgClientGamesPlayed internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientGamesPlayed();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientGamesPlayed.getDescriptor();
      }
      
      public SteamMessages.CMsgClientGamesPlayed getDefaultInstanceForType() {
        return SteamMessages.CMsgClientGamesPlayed.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientGamesPlayed build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientGamesPlayed buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientGamesPlayed buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gamesPlayed_ != java.util.Collections.EMPTY_LIST) {
          result.gamesPlayed_ =
            java.util.Collections.unmodifiableList(result.gamesPlayed_);
        }
        SteamMessages.CMsgClientGamesPlayed returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientGamesPlayed) {
          return mergeFrom((SteamMessages.CMsgClientGamesPlayed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientGamesPlayed other) {
        if (other == SteamMessages.CMsgClientGamesPlayed.getDefaultInstance()) return this;
        if (!other.gamesPlayed_.isEmpty()) {
          if (result.gamesPlayed_.isEmpty()) {
            result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientGamesPlayed.GamePlayed>();
          }
          result.gamesPlayed_.addAll(other.gamesPlayed_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SteamMessages.CMsgClientGamesPlayed.GamePlayed.Builder subBuilder = SteamMessages.CMsgClientGamesPlayed.GamePlayed.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGamesPlayed(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .CMsgClientGamesPlayed.GamePlayed games_played = 1;
      public java.util.List<SteamMessages.CMsgClientGamesPlayed.GamePlayed> getGamesPlayedList() {
        return java.util.Collections.unmodifiableList(result.gamesPlayed_);
      }
      public int getGamesPlayedCount() {
        return result.getGamesPlayedCount();
      }
      public SteamMessages.CMsgClientGamesPlayed.GamePlayed getGamesPlayed(int index) {
        return result.getGamesPlayed(index);
      }
      public Builder setGamesPlayed(int index, SteamMessages.CMsgClientGamesPlayed.GamePlayed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gamesPlayed_.set(index, value);
        return this;
      }
      public Builder setGamesPlayed(int index, SteamMessages.CMsgClientGamesPlayed.GamePlayed.Builder builderForValue) {
        result.gamesPlayed_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGamesPlayed(SteamMessages.CMsgClientGamesPlayed.GamePlayed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gamesPlayed_.isEmpty()) {
          result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientGamesPlayed.GamePlayed>();
        }
        result.gamesPlayed_.add(value);
        return this;
      }
      public Builder addGamesPlayed(SteamMessages.CMsgClientGamesPlayed.GamePlayed.Builder builderForValue) {
        if (result.gamesPlayed_.isEmpty()) {
          result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientGamesPlayed.GamePlayed>();
        }
        result.gamesPlayed_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGamesPlayed(
          java.lang.Iterable<? extends SteamMessages.CMsgClientGamesPlayed.GamePlayed> values) {
        if (result.gamesPlayed_.isEmpty()) {
          result.gamesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientGamesPlayed.GamePlayed>();
        }
        super.addAll(values, result.gamesPlayed_);
        return this;
      }
      public Builder clearGamesPlayed() {
        result.gamesPlayed_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientGamesPlayed)
    }
    
    static {
      defaultInstance = new CMsgClientGamesPlayed(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientGamesPlayed)
  }
  
  public static final class CMsgGSApprove extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSApprove.newBuilder() to construct.
    private CMsgGSApprove() {
      initFields();
    }
    private CMsgGSApprove(boolean noInit) {}
    
    private static final CMsgGSApprove defaultInstance;
    public static CMsgGSApprove getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSApprove getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSApprove_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSApprove_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSApprove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSApprove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSApprove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSApprove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSApprove prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSApprove result;
      
      // Construct using SteamMessages.CMsgGSApprove.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSApprove();
        return builder;
      }
      
      protected SteamMessages.CMsgGSApprove internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSApprove();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSApprove.getDescriptor();
      }
      
      public SteamMessages.CMsgGSApprove getDefaultInstanceForType() {
        return SteamMessages.CMsgGSApprove.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSApprove build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSApprove buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSApprove buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSApprove returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSApprove) {
          return mergeFrom((SteamMessages.CMsgGSApprove)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSApprove other) {
        if (other == SteamMessages.CMsgGSApprove.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSApprove)
    }
    
    static {
      defaultInstance = new CMsgGSApprove(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSApprove)
  }
  
  public static final class CMsgGSDeny extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSDeny.newBuilder() to construct.
    private CMsgGSDeny() {
      initFields();
    }
    private CMsgGSDeny(boolean noInit) {}
    
    private static final CMsgGSDeny defaultInstance;
    public static CMsgGSDeny getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSDeny getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSDeny_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSDeny_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional int32 edeny_reason = 2;
    public static final int EDENY_REASON_FIELD_NUMBER = 2;
    private boolean hasEdenyReason;
    private int edenyReason_ = 0;
    public boolean hasEdenyReason() { return hasEdenyReason; }
    public int getEdenyReason() { return edenyReason_; }
    
    // optional string deny_string = 3;
    public static final int DENY_STRING_FIELD_NUMBER = 3;
    private boolean hasDenyString;
    private java.lang.String denyString_ = "";
    public boolean hasDenyString() { return hasDenyString; }
    public java.lang.String getDenyString() { return denyString_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasEdenyReason()) {
        output.writeInt32(2, getEdenyReason());
      }
      if (hasDenyString()) {
        output.writeString(3, getDenyString());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasEdenyReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEdenyReason());
      }
      if (hasDenyString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDenyString());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSDeny parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSDeny parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSDeny parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSDeny parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSDeny prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSDeny result;
      
      // Construct using SteamMessages.CMsgGSDeny.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSDeny();
        return builder;
      }
      
      protected SteamMessages.CMsgGSDeny internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSDeny();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSDeny.getDescriptor();
      }
      
      public SteamMessages.CMsgGSDeny getDefaultInstanceForType() {
        return SteamMessages.CMsgGSDeny.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSDeny build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSDeny buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSDeny buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSDeny returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSDeny) {
          return mergeFrom((SteamMessages.CMsgGSDeny)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSDeny other) {
        if (other == SteamMessages.CMsgGSDeny.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasEdenyReason()) {
          setEdenyReason(other.getEdenyReason());
        }
        if (other.hasDenyString()) {
          setDenyString(other.getDenyString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setEdenyReason(input.readInt32());
              break;
            }
            case 26: {
              setDenyString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional int32 edeny_reason = 2;
      public boolean hasEdenyReason() {
        return result.hasEdenyReason();
      }
      public int getEdenyReason() {
        return result.getEdenyReason();
      }
      public Builder setEdenyReason(int value) {
        result.hasEdenyReason = true;
        result.edenyReason_ = value;
        return this;
      }
      public Builder clearEdenyReason() {
        result.hasEdenyReason = false;
        result.edenyReason_ = 0;
        return this;
      }
      
      // optional string deny_string = 3;
      public boolean hasDenyString() {
        return result.hasDenyString();
      }
      public java.lang.String getDenyString() {
        return result.getDenyString();
      }
      public Builder setDenyString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDenyString = true;
        result.denyString_ = value;
        return this;
      }
      public Builder clearDenyString() {
        result.hasDenyString = false;
        result.denyString_ = getDefaultInstance().getDenyString();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSDeny)
    }
    
    static {
      defaultInstance = new CMsgGSDeny(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSDeny)
  }
  
  public static final class CMsgGSKick extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgGSKick.newBuilder() to construct.
    private CMsgGSKick() {
      initFields();
    }
    private CMsgGSKick(boolean noInit) {}
    
    private static final CMsgGSKick defaultInstance;
    public static CMsgGSKick getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgGSKick getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgGSKick_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgGSKick_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional int32 edeny_reason = 2;
    public static final int EDENY_REASON_FIELD_NUMBER = 2;
    private boolean hasEdenyReason;
    private int edenyReason_ = 0;
    public boolean hasEdenyReason() { return hasEdenyReason; }
    public int getEdenyReason() { return edenyReason_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasEdenyReason()) {
        output.writeInt32(2, getEdenyReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasEdenyReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEdenyReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgGSKick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSKick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgGSKick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgGSKick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgGSKick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgGSKick result;
      
      // Construct using SteamMessages.CMsgGSKick.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgGSKick();
        return builder;
      }
      
      protected SteamMessages.CMsgGSKick internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgGSKick();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgGSKick.getDescriptor();
      }
      
      public SteamMessages.CMsgGSKick getDefaultInstanceForType() {
        return SteamMessages.CMsgGSKick.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgGSKick build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgGSKick buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgGSKick buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgGSKick returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgGSKick) {
          return mergeFrom((SteamMessages.CMsgGSKick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgGSKick other) {
        if (other == SteamMessages.CMsgGSKick.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasEdenyReason()) {
          setEdenyReason(other.getEdenyReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setEdenyReason(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional int32 edeny_reason = 2;
      public boolean hasEdenyReason() {
        return result.hasEdenyReason();
      }
      public int getEdenyReason() {
        return result.getEdenyReason();
      }
      public Builder setEdenyReason(int value) {
        result.hasEdenyReason = true;
        result.edenyReason_ = value;
        return this;
      }
      public Builder clearEdenyReason() {
        result.hasEdenyReason = false;
        result.edenyReason_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgGSKick)
    }
    
    static {
      defaultInstance = new CMsgGSKick(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgGSKick)
  }
  
  public static final class CMsgClientAuthList extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientAuthList.newBuilder() to construct.
    private CMsgClientAuthList() {
      initFields();
    }
    private CMsgClientAuthList(boolean noInit) {}
    
    private static final CMsgClientAuthList defaultInstance;
    public static CMsgClientAuthList getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientAuthList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientAuthList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientAuthList_fieldAccessorTable;
    }
    
    // optional uint32 tokens_left = 1;
    public static final int TOKENS_LEFT_FIELD_NUMBER = 1;
    private boolean hasTokensLeft;
    private int tokensLeft_ = 0;
    public boolean hasTokensLeft() { return hasTokensLeft; }
    public int getTokensLeft() { return tokensLeft_; }
    
    // optional uint32 last_request_seq = 2;
    public static final int LAST_REQUEST_SEQ_FIELD_NUMBER = 2;
    private boolean hasLastRequestSeq;
    private int lastRequestSeq_ = 0;
    public boolean hasLastRequestSeq() { return hasLastRequestSeq; }
    public int getLastRequestSeq() { return lastRequestSeq_; }
    
    // optional uint32 last_request_seq_from_server = 3;
    public static final int LAST_REQUEST_SEQ_FROM_SERVER_FIELD_NUMBER = 3;
    private boolean hasLastRequestSeqFromServer;
    private int lastRequestSeqFromServer_ = 0;
    public boolean hasLastRequestSeqFromServer() { return hasLastRequestSeqFromServer; }
    public int getLastRequestSeqFromServer() { return lastRequestSeqFromServer_; }
    
    // repeated .CMsgAuthTicket tickets = 4;
    public static final int TICKETS_FIELD_NUMBER = 4;
    private java.util.List<SteamMessages.CMsgAuthTicket> tickets_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgAuthTicket> getTicketsList() {
      return tickets_;
    }
    public int getTicketsCount() { return tickets_.size(); }
    public SteamMessages.CMsgAuthTicket getTickets(int index) {
      return tickets_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTokensLeft()) {
        output.writeUInt32(1, getTokensLeft());
      }
      if (hasLastRequestSeq()) {
        output.writeUInt32(2, getLastRequestSeq());
      }
      if (hasLastRequestSeqFromServer()) {
        output.writeUInt32(3, getLastRequestSeqFromServer());
      }
      for (SteamMessages.CMsgAuthTicket element : getTicketsList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTokensLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getTokensLeft());
      }
      if (hasLastRequestSeq()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getLastRequestSeq());
      }
      if (hasLastRequestSeqFromServer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getLastRequestSeqFromServer());
      }
      for (SteamMessages.CMsgAuthTicket element : getTicketsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientAuthList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAuthList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAuthList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientAuthList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientAuthList result;
      
      // Construct using SteamMessages.CMsgClientAuthList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientAuthList();
        return builder;
      }
      
      protected SteamMessages.CMsgClientAuthList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientAuthList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientAuthList.getDescriptor();
      }
      
      public SteamMessages.CMsgClientAuthList getDefaultInstanceForType() {
        return SteamMessages.CMsgClientAuthList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientAuthList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientAuthList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientAuthList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tickets_ != java.util.Collections.EMPTY_LIST) {
          result.tickets_ =
            java.util.Collections.unmodifiableList(result.tickets_);
        }
        SteamMessages.CMsgClientAuthList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientAuthList) {
          return mergeFrom((SteamMessages.CMsgClientAuthList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientAuthList other) {
        if (other == SteamMessages.CMsgClientAuthList.getDefaultInstance()) return this;
        if (other.hasTokensLeft()) {
          setTokensLeft(other.getTokensLeft());
        }
        if (other.hasLastRequestSeq()) {
          setLastRequestSeq(other.getLastRequestSeq());
        }
        if (other.hasLastRequestSeqFromServer()) {
          setLastRequestSeqFromServer(other.getLastRequestSeqFromServer());
        }
        if (!other.tickets_.isEmpty()) {
          if (result.tickets_.isEmpty()) {
            result.tickets_ = new java.util.ArrayList<SteamMessages.CMsgAuthTicket>();
          }
          result.tickets_.addAll(other.tickets_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTokensLeft(input.readUInt32());
              break;
            }
            case 16: {
              setLastRequestSeq(input.readUInt32());
              break;
            }
            case 24: {
              setLastRequestSeqFromServer(input.readUInt32());
              break;
            }
            case 34: {
              SteamMessages.CMsgAuthTicket.Builder subBuilder = SteamMessages.CMsgAuthTicket.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTickets(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 tokens_left = 1;
      public boolean hasTokensLeft() {
        return result.hasTokensLeft();
      }
      public int getTokensLeft() {
        return result.getTokensLeft();
      }
      public Builder setTokensLeft(int value) {
        result.hasTokensLeft = true;
        result.tokensLeft_ = value;
        return this;
      }
      public Builder clearTokensLeft() {
        result.hasTokensLeft = false;
        result.tokensLeft_ = 0;
        return this;
      }
      
      // optional uint32 last_request_seq = 2;
      public boolean hasLastRequestSeq() {
        return result.hasLastRequestSeq();
      }
      public int getLastRequestSeq() {
        return result.getLastRequestSeq();
      }
      public Builder setLastRequestSeq(int value) {
        result.hasLastRequestSeq = true;
        result.lastRequestSeq_ = value;
        return this;
      }
      public Builder clearLastRequestSeq() {
        result.hasLastRequestSeq = false;
        result.lastRequestSeq_ = 0;
        return this;
      }
      
      // optional uint32 last_request_seq_from_server = 3;
      public boolean hasLastRequestSeqFromServer() {
        return result.hasLastRequestSeqFromServer();
      }
      public int getLastRequestSeqFromServer() {
        return result.getLastRequestSeqFromServer();
      }
      public Builder setLastRequestSeqFromServer(int value) {
        result.hasLastRequestSeqFromServer = true;
        result.lastRequestSeqFromServer_ = value;
        return this;
      }
      public Builder clearLastRequestSeqFromServer() {
        result.hasLastRequestSeqFromServer = false;
        result.lastRequestSeqFromServer_ = 0;
        return this;
      }
      
      // repeated .CMsgAuthTicket tickets = 4;
      public java.util.List<SteamMessages.CMsgAuthTicket> getTicketsList() {
        return java.util.Collections.unmodifiableList(result.tickets_);
      }
      public int getTicketsCount() {
        return result.getTicketsCount();
      }
      public SteamMessages.CMsgAuthTicket getTickets(int index) {
        return result.getTickets(index);
      }
      public Builder setTickets(int index, SteamMessages.CMsgAuthTicket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tickets_.set(index, value);
        return this;
      }
      public Builder setTickets(int index, SteamMessages.CMsgAuthTicket.Builder builderForValue) {
        result.tickets_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTickets(SteamMessages.CMsgAuthTicket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tickets_.isEmpty()) {
          result.tickets_ = new java.util.ArrayList<SteamMessages.CMsgAuthTicket>();
        }
        result.tickets_.add(value);
        return this;
      }
      public Builder addTickets(SteamMessages.CMsgAuthTicket.Builder builderForValue) {
        if (result.tickets_.isEmpty()) {
          result.tickets_ = new java.util.ArrayList<SteamMessages.CMsgAuthTicket>();
        }
        result.tickets_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTickets(
          java.lang.Iterable<? extends SteamMessages.CMsgAuthTicket> values) {
        if (result.tickets_.isEmpty()) {
          result.tickets_ = new java.util.ArrayList<SteamMessages.CMsgAuthTicket>();
        }
        super.addAll(values, result.tickets_);
        return this;
      }
      public Builder clearTickets() {
        result.tickets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientAuthList)
    }
    
    static {
      defaultInstance = new CMsgClientAuthList(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientAuthList)
  }
  
  public static final class CMsgAMTicketAuthRequestOrResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMTicketAuthRequestOrResponse.newBuilder() to construct.
    private CMsgAMTicketAuthRequestOrResponse() {
      initFields();
    }
    private CMsgAMTicketAuthRequestOrResponse(boolean noInit) {}
    
    private static final CMsgAMTicketAuthRequestOrResponse defaultInstance;
    public static CMsgAMTicketAuthRequestOrResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMTicketAuthRequestOrResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMTicketAuthRequestOrResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMTicketAuthRequestOrResponse_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id_to = 1;
    public static final int STEAM_ID_TO_FIELD_NUMBER = 1;
    private boolean hasSteamIdTo;
    private long steamIdTo_ = 0L;
    public boolean hasSteamIdTo() { return hasSteamIdTo; }
    public long getSteamIdTo() { return steamIdTo_; }
    
    // optional .CMsgAuthTicket ticket = 2;
    public static final int TICKET_FIELD_NUMBER = 2;
    private boolean hasTicket;
    private SteamMessages.CMsgAuthTicket ticket_;
    public boolean hasTicket() { return hasTicket; }
    public SteamMessages.CMsgAuthTicket getTicket() { return ticket_; }
    
    private void initFields() {
      ticket_ = SteamMessages.CMsgAuthTicket.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamIdTo()) {
        output.writeFixed64(1, getSteamIdTo());
      }
      if (hasTicket()) {
        output.writeMessage(2, getTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamIdTo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamIdTo());
      }
      if (hasTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMTicketAuthRequestOrResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMTicketAuthRequestOrResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMTicketAuthRequestOrResponse result;
      
      // Construct using SteamMessages.CMsgAMTicketAuthRequestOrResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMTicketAuthRequestOrResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgAMTicketAuthRequestOrResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMTicketAuthRequestOrResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMTicketAuthRequestOrResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgAMTicketAuthRequestOrResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgAMTicketAuthRequestOrResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMTicketAuthRequestOrResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMTicketAuthRequestOrResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMTicketAuthRequestOrResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgAMTicketAuthRequestOrResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMTicketAuthRequestOrResponse) {
          return mergeFrom((SteamMessages.CMsgAMTicketAuthRequestOrResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMTicketAuthRequestOrResponse other) {
        if (other == SteamMessages.CMsgAMTicketAuthRequestOrResponse.getDefaultInstance()) return this;
        if (other.hasSteamIdTo()) {
          setSteamIdTo(other.getSteamIdTo());
        }
        if (other.hasTicket()) {
          mergeTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamIdTo(input.readFixed64());
              break;
            }
            case 18: {
              SteamMessages.CMsgAuthTicket.Builder subBuilder = SteamMessages.CMsgAuthTicket.newBuilder();
              if (hasTicket()) {
                subBuilder.mergeFrom(getTicket());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTicket(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id_to = 1;
      public boolean hasSteamIdTo() {
        return result.hasSteamIdTo();
      }
      public long getSteamIdTo() {
        return result.getSteamIdTo();
      }
      public Builder setSteamIdTo(long value) {
        result.hasSteamIdTo = true;
        result.steamIdTo_ = value;
        return this;
      }
      public Builder clearSteamIdTo() {
        result.hasSteamIdTo = false;
        result.steamIdTo_ = 0L;
        return this;
      }
      
      // optional .CMsgAuthTicket ticket = 2;
      public boolean hasTicket() {
        return result.hasTicket();
      }
      public SteamMessages.CMsgAuthTicket getTicket() {
        return result.getTicket();
      }
      public Builder setTicket(SteamMessages.CMsgAuthTicket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder setTicket(SteamMessages.CMsgAuthTicket.Builder builderForValue) {
        result.hasTicket = true;
        result.ticket_ = builderForValue.build();
        return this;
      }
      public Builder mergeTicket(SteamMessages.CMsgAuthTicket value) {
        if (result.hasTicket() &&
            result.ticket_ != SteamMessages.CMsgAuthTicket.getDefaultInstance()) {
          result.ticket_ =
            SteamMessages.CMsgAuthTicket.newBuilder(result.ticket_).mergeFrom(value).buildPartial();
        } else {
          result.ticket_ = value;
        }
        result.hasTicket = true;
        return this;
      }
      public Builder clearTicket() {
        result.hasTicket = false;
        result.ticket_ = SteamMessages.CMsgAuthTicket.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMTicketAuthRequestOrResponse)
    }
    
    static {
      defaultInstance = new CMsgAMTicketAuthRequestOrResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMTicketAuthRequestOrResponse)
  }
  
  public static final class CMsgClientFriendsList extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientFriendsList.newBuilder() to construct.
    private CMsgClientFriendsList() {
      initFields();
    }
    private CMsgClientFriendsList(boolean noInit) {}
    
    private static final CMsgClientFriendsList defaultInstance;
    public static CMsgClientFriendsList getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientFriendsList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientFriendsList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientFriendsList_fieldAccessorTable;
    }
    
    public static final class Friend extends
        com.google.protobuf.GeneratedMessage {
      // Use Friend.newBuilder() to construct.
      private Friend() {
        initFields();
      }
      private Friend(boolean noInit) {}
      
      private static final Friend defaultInstance;
      public static Friend getDefaultInstance() {
        return defaultInstance;
      }
      
      public Friend getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientFriendsList_Friend_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientFriendsList_Friend_fieldAccessorTable;
      }
      
      // optional fixed64 ulfriendid = 1;
      public static final int ULFRIENDID_FIELD_NUMBER = 1;
      private boolean hasUlfriendid;
      private long ulfriendid_ = 0L;
      public boolean hasUlfriendid() { return hasUlfriendid; }
      public long getUlfriendid() { return ulfriendid_; }
      
      // optional uint32 efriendrelationship = 2;
      public static final int EFRIENDRELATIONSHIP_FIELD_NUMBER = 2;
      private boolean hasEfriendrelationship;
      private int efriendrelationship_ = 0;
      public boolean hasEfriendrelationship() { return hasEfriendrelationship; }
      public int getEfriendrelationship() { return efriendrelationship_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasUlfriendid()) {
          output.writeFixed64(1, getUlfriendid());
        }
        if (hasEfriendrelationship()) {
          output.writeUInt32(2, getEfriendrelationship());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasUlfriendid()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getUlfriendid());
        }
        if (hasEfriendrelationship()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getEfriendrelationship());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientFriendsList.Friend parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientFriendsList.Friend prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientFriendsList.Friend result;
        
        // Construct using SteamMessages.CMsgClientFriendsList.Friend.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientFriendsList.Friend();
          return builder;
        }
        
        protected SteamMessages.CMsgClientFriendsList.Friend internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientFriendsList.Friend();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientFriendsList.Friend.getDescriptor();
        }
        
        public SteamMessages.CMsgClientFriendsList.Friend getDefaultInstanceForType() {
          return SteamMessages.CMsgClientFriendsList.Friend.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientFriendsList.Friend build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientFriendsList.Friend buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientFriendsList.Friend buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientFriendsList.Friend returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientFriendsList.Friend) {
            return mergeFrom((SteamMessages.CMsgClientFriendsList.Friend)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientFriendsList.Friend other) {
          if (other == SteamMessages.CMsgClientFriendsList.Friend.getDefaultInstance()) return this;
          if (other.hasUlfriendid()) {
            setUlfriendid(other.getUlfriendid());
          }
          if (other.hasEfriendrelationship()) {
            setEfriendrelationship(other.getEfriendrelationship());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setUlfriendid(input.readFixed64());
                break;
              }
              case 16: {
                setEfriendrelationship(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 ulfriendid = 1;
        public boolean hasUlfriendid() {
          return result.hasUlfriendid();
        }
        public long getUlfriendid() {
          return result.getUlfriendid();
        }
        public Builder setUlfriendid(long value) {
          result.hasUlfriendid = true;
          result.ulfriendid_ = value;
          return this;
        }
        public Builder clearUlfriendid() {
          result.hasUlfriendid = false;
          result.ulfriendid_ = 0L;
          return this;
        }
        
        // optional uint32 efriendrelationship = 2;
        public boolean hasEfriendrelationship() {
          return result.hasEfriendrelationship();
        }
        public int getEfriendrelationship() {
          return result.getEfriendrelationship();
        }
        public Builder setEfriendrelationship(int value) {
          result.hasEfriendrelationship = true;
          result.efriendrelationship_ = value;
          return this;
        }
        public Builder clearEfriendrelationship() {
          result.hasEfriendrelationship = false;
          result.efriendrelationship_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientFriendsList.Friend)
      }
      
      static {
        defaultInstance = new Friend(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientFriendsList.Friend)
    }
    
    // optional bool bincremental = 1;
    public static final int BINCREMENTAL_FIELD_NUMBER = 1;
    private boolean hasBincremental;
    private boolean bincremental_ = false;
    public boolean hasBincremental() { return hasBincremental; }
    public boolean getBincremental() { return bincremental_; }
    
    // repeated .CMsgClientFriendsList.Friend friends = 2;
    public static final int FRIENDS_FIELD_NUMBER = 2;
    private java.util.List<SteamMessages.CMsgClientFriendsList.Friend> friends_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientFriendsList.Friend> getFriendsList() {
      return friends_;
    }
    public int getFriendsCount() { return friends_.size(); }
    public SteamMessages.CMsgClientFriendsList.Friend getFriends(int index) {
      return friends_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBincremental()) {
        output.writeBool(1, getBincremental());
      }
      for (SteamMessages.CMsgClientFriendsList.Friend element : getFriendsList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBincremental()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getBincremental());
      }
      for (SteamMessages.CMsgClientFriendsList.Friend element : getFriendsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientFriendsList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientFriendsList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientFriendsList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientFriendsList result;
      
      // Construct using SteamMessages.CMsgClientFriendsList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientFriendsList();
        return builder;
      }
      
      protected SteamMessages.CMsgClientFriendsList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientFriendsList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientFriendsList.getDescriptor();
      }
      
      public SteamMessages.CMsgClientFriendsList getDefaultInstanceForType() {
        return SteamMessages.CMsgClientFriendsList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientFriendsList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientFriendsList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientFriendsList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.friends_ != java.util.Collections.EMPTY_LIST) {
          result.friends_ =
            java.util.Collections.unmodifiableList(result.friends_);
        }
        SteamMessages.CMsgClientFriendsList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientFriendsList) {
          return mergeFrom((SteamMessages.CMsgClientFriendsList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientFriendsList other) {
        if (other == SteamMessages.CMsgClientFriendsList.getDefaultInstance()) return this;
        if (other.hasBincremental()) {
          setBincremental(other.getBincremental());
        }
        if (!other.friends_.isEmpty()) {
          if (result.friends_.isEmpty()) {
            result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientFriendsList.Friend>();
          }
          result.friends_.addAll(other.friends_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setBincremental(input.readBool());
              break;
            }
            case 18: {
              SteamMessages.CMsgClientFriendsList.Friend.Builder subBuilder = SteamMessages.CMsgClientFriendsList.Friend.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFriends(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional bool bincremental = 1;
      public boolean hasBincremental() {
        return result.hasBincremental();
      }
      public boolean getBincremental() {
        return result.getBincremental();
      }
      public Builder setBincremental(boolean value) {
        result.hasBincremental = true;
        result.bincremental_ = value;
        return this;
      }
      public Builder clearBincremental() {
        result.hasBincremental = false;
        result.bincremental_ = false;
        return this;
      }
      
      // repeated .CMsgClientFriendsList.Friend friends = 2;
      public java.util.List<SteamMessages.CMsgClientFriendsList.Friend> getFriendsList() {
        return java.util.Collections.unmodifiableList(result.friends_);
      }
      public int getFriendsCount() {
        return result.getFriendsCount();
      }
      public SteamMessages.CMsgClientFriendsList.Friend getFriends(int index) {
        return result.getFriends(index);
      }
      public Builder setFriends(int index, SteamMessages.CMsgClientFriendsList.Friend value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.friends_.set(index, value);
        return this;
      }
      public Builder setFriends(int index, SteamMessages.CMsgClientFriendsList.Friend.Builder builderForValue) {
        result.friends_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFriends(SteamMessages.CMsgClientFriendsList.Friend value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientFriendsList.Friend>();
        }
        result.friends_.add(value);
        return this;
      }
      public Builder addFriends(SteamMessages.CMsgClientFriendsList.Friend.Builder builderForValue) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientFriendsList.Friend>();
        }
        result.friends_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFriends(
          java.lang.Iterable<? extends SteamMessages.CMsgClientFriendsList.Friend> values) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientFriendsList.Friend>();
        }
        super.addAll(values, result.friends_);
        return this;
      }
      public Builder clearFriends() {
        result.friends_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientFriendsList)
    }
    
    static {
      defaultInstance = new CMsgClientFriendsList(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientFriendsList)
  }
  
  public static final class CMsgClientLicenseList extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLicenseList.newBuilder() to construct.
    private CMsgClientLicenseList() {
      initFields();
    }
    private CMsgClientLicenseList(boolean noInit) {}
    
    private static final CMsgClientLicenseList defaultInstance;
    public static CMsgClientLicenseList getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLicenseList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLicenseList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLicenseList_fieldAccessorTable;
    }
    
    public static final class License extends
        com.google.protobuf.GeneratedMessage {
      // Use License.newBuilder() to construct.
      private License() {
        initFields();
      }
      private License(boolean noInit) {}
      
      private static final License defaultInstance;
      public static License getDefaultInstance() {
        return defaultInstance;
      }
      
      public License getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientLicenseList_License_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientLicenseList_License_fieldAccessorTable;
      }
      
      // optional uint32 package_id = 1;
      public static final int PACKAGE_ID_FIELD_NUMBER = 1;
      private boolean hasPackageId;
      private int packageId_ = 0;
      public boolean hasPackageId() { return hasPackageId; }
      public int getPackageId() { return packageId_; }
      
      // optional fixed32 time_created = 2;
      public static final int TIME_CREATED_FIELD_NUMBER = 2;
      private boolean hasTimeCreated;
      private int timeCreated_ = 0;
      public boolean hasTimeCreated() { return hasTimeCreated; }
      public int getTimeCreated() { return timeCreated_; }
      
      // optional fixed32 time_next_process = 3;
      public static final int TIME_NEXT_PROCESS_FIELD_NUMBER = 3;
      private boolean hasTimeNextProcess;
      private int timeNextProcess_ = 0;
      public boolean hasTimeNextProcess() { return hasTimeNextProcess; }
      public int getTimeNextProcess() { return timeNextProcess_; }
      
      // optional int32 minute_limit = 4;
      public static final int MINUTE_LIMIT_FIELD_NUMBER = 4;
      private boolean hasMinuteLimit;
      private int minuteLimit_ = 0;
      public boolean hasMinuteLimit() { return hasMinuteLimit; }
      public int getMinuteLimit() { return minuteLimit_; }
      
      // optional int32 minutes_used = 5;
      public static final int MINUTES_USED_FIELD_NUMBER = 5;
      private boolean hasMinutesUsed;
      private int minutesUsed_ = 0;
      public boolean hasMinutesUsed() { return hasMinutesUsed; }
      public int getMinutesUsed() { return minutesUsed_; }
      
      // optional uint32 payment_method = 6;
      public static final int PAYMENT_METHOD_FIELD_NUMBER = 6;
      private boolean hasPaymentMethod;
      private int paymentMethod_ = 0;
      public boolean hasPaymentMethod() { return hasPaymentMethod; }
      public int getPaymentMethod() { return paymentMethod_; }
      
      // optional uint32 flags = 7;
      public static final int FLAGS_FIELD_NUMBER = 7;
      private boolean hasFlags;
      private int flags_ = 0;
      public boolean hasFlags() { return hasFlags; }
      public int getFlags() { return flags_; }
      
      // optional string purchase_country_code = 8;
      public static final int PURCHASE_COUNTRY_CODE_FIELD_NUMBER = 8;
      private boolean hasPurchaseCountryCode;
      private java.lang.String purchaseCountryCode_ = "";
      public boolean hasPurchaseCountryCode() { return hasPurchaseCountryCode; }
      public java.lang.String getPurchaseCountryCode() { return purchaseCountryCode_; }
      
      // optional uint32 license_type = 9;
      public static final int LICENSE_TYPE_FIELD_NUMBER = 9;
      private boolean hasLicenseType;
      private int licenseType_ = 0;
      public boolean hasLicenseType() { return hasLicenseType; }
      public int getLicenseType() { return licenseType_; }
      
      // optional int32 territory_code = 10;
      public static final int TERRITORY_CODE_FIELD_NUMBER = 10;
      private boolean hasTerritoryCode;
      private int territoryCode_ = 0;
      public boolean hasTerritoryCode() { return hasTerritoryCode; }
      public int getTerritoryCode() { return territoryCode_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasPackageId()) {
          output.writeUInt32(1, getPackageId());
        }
        if (hasTimeCreated()) {
          output.writeFixed32(2, getTimeCreated());
        }
        if (hasTimeNextProcess()) {
          output.writeFixed32(3, getTimeNextProcess());
        }
        if (hasMinuteLimit()) {
          output.writeInt32(4, getMinuteLimit());
        }
        if (hasMinutesUsed()) {
          output.writeInt32(5, getMinutesUsed());
        }
        if (hasPaymentMethod()) {
          output.writeUInt32(6, getPaymentMethod());
        }
        if (hasFlags()) {
          output.writeUInt32(7, getFlags());
        }
        if (hasPurchaseCountryCode()) {
          output.writeString(8, getPurchaseCountryCode());
        }
        if (hasLicenseType()) {
          output.writeUInt32(9, getLicenseType());
        }
        if (hasTerritoryCode()) {
          output.writeInt32(10, getTerritoryCode());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasPackageId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, getPackageId());
        }
        if (hasTimeCreated()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(2, getTimeCreated());
        }
        if (hasTimeNextProcess()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(3, getTimeNextProcess());
        }
        if (hasMinuteLimit()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getMinuteLimit());
        }
        if (hasMinutesUsed()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, getMinutesUsed());
        }
        if (hasPaymentMethod()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, getPaymentMethod());
        }
        if (hasFlags()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, getFlags());
        }
        if (hasPurchaseCountryCode()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(8, getPurchaseCountryCode());
        }
        if (hasLicenseType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, getLicenseType());
        }
        if (hasTerritoryCode()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, getTerritoryCode());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientLicenseList.License parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientLicenseList.License parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientLicenseList.License prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientLicenseList.License result;
        
        // Construct using SteamMessages.CMsgClientLicenseList.License.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientLicenseList.License();
          return builder;
        }
        
        protected SteamMessages.CMsgClientLicenseList.License internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientLicenseList.License();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientLicenseList.License.getDescriptor();
        }
        
        public SteamMessages.CMsgClientLicenseList.License getDefaultInstanceForType() {
          return SteamMessages.CMsgClientLicenseList.License.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientLicenseList.License build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientLicenseList.License buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientLicenseList.License buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientLicenseList.License returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientLicenseList.License) {
            return mergeFrom((SteamMessages.CMsgClientLicenseList.License)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientLicenseList.License other) {
          if (other == SteamMessages.CMsgClientLicenseList.License.getDefaultInstance()) return this;
          if (other.hasPackageId()) {
            setPackageId(other.getPackageId());
          }
          if (other.hasTimeCreated()) {
            setTimeCreated(other.getTimeCreated());
          }
          if (other.hasTimeNextProcess()) {
            setTimeNextProcess(other.getTimeNextProcess());
          }
          if (other.hasMinuteLimit()) {
            setMinuteLimit(other.getMinuteLimit());
          }
          if (other.hasMinutesUsed()) {
            setMinutesUsed(other.getMinutesUsed());
          }
          if (other.hasPaymentMethod()) {
            setPaymentMethod(other.getPaymentMethod());
          }
          if (other.hasFlags()) {
            setFlags(other.getFlags());
          }
          if (other.hasPurchaseCountryCode()) {
            setPurchaseCountryCode(other.getPurchaseCountryCode());
          }
          if (other.hasLicenseType()) {
            setLicenseType(other.getLicenseType());
          }
          if (other.hasTerritoryCode()) {
            setTerritoryCode(other.getTerritoryCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setPackageId(input.readUInt32());
                break;
              }
              case 21: {
                setTimeCreated(input.readFixed32());
                break;
              }
              case 29: {
                setTimeNextProcess(input.readFixed32());
                break;
              }
              case 32: {
                setMinuteLimit(input.readInt32());
                break;
              }
              case 40: {
                setMinutesUsed(input.readInt32());
                break;
              }
              case 48: {
                setPaymentMethod(input.readUInt32());
                break;
              }
              case 56: {
                setFlags(input.readUInt32());
                break;
              }
              case 66: {
                setPurchaseCountryCode(input.readString());
                break;
              }
              case 72: {
                setLicenseType(input.readUInt32());
                break;
              }
              case 80: {
                setTerritoryCode(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // optional uint32 package_id = 1;
        public boolean hasPackageId() {
          return result.hasPackageId();
        }
        public int getPackageId() {
          return result.getPackageId();
        }
        public Builder setPackageId(int value) {
          result.hasPackageId = true;
          result.packageId_ = value;
          return this;
        }
        public Builder clearPackageId() {
          result.hasPackageId = false;
          result.packageId_ = 0;
          return this;
        }
        
        // optional fixed32 time_created = 2;
        public boolean hasTimeCreated() {
          return result.hasTimeCreated();
        }
        public int getTimeCreated() {
          return result.getTimeCreated();
        }
        public Builder setTimeCreated(int value) {
          result.hasTimeCreated = true;
          result.timeCreated_ = value;
          return this;
        }
        public Builder clearTimeCreated() {
          result.hasTimeCreated = false;
          result.timeCreated_ = 0;
          return this;
        }
        
        // optional fixed32 time_next_process = 3;
        public boolean hasTimeNextProcess() {
          return result.hasTimeNextProcess();
        }
        public int getTimeNextProcess() {
          return result.getTimeNextProcess();
        }
        public Builder setTimeNextProcess(int value) {
          result.hasTimeNextProcess = true;
          result.timeNextProcess_ = value;
          return this;
        }
        public Builder clearTimeNextProcess() {
          result.hasTimeNextProcess = false;
          result.timeNextProcess_ = 0;
          return this;
        }
        
        // optional int32 minute_limit = 4;
        public boolean hasMinuteLimit() {
          return result.hasMinuteLimit();
        }
        public int getMinuteLimit() {
          return result.getMinuteLimit();
        }
        public Builder setMinuteLimit(int value) {
          result.hasMinuteLimit = true;
          result.minuteLimit_ = value;
          return this;
        }
        public Builder clearMinuteLimit() {
          result.hasMinuteLimit = false;
          result.minuteLimit_ = 0;
          return this;
        }
        
        // optional int32 minutes_used = 5;
        public boolean hasMinutesUsed() {
          return result.hasMinutesUsed();
        }
        public int getMinutesUsed() {
          return result.getMinutesUsed();
        }
        public Builder setMinutesUsed(int value) {
          result.hasMinutesUsed = true;
          result.minutesUsed_ = value;
          return this;
        }
        public Builder clearMinutesUsed() {
          result.hasMinutesUsed = false;
          result.minutesUsed_ = 0;
          return this;
        }
        
        // optional uint32 payment_method = 6;
        public boolean hasPaymentMethod() {
          return result.hasPaymentMethod();
        }
        public int getPaymentMethod() {
          return result.getPaymentMethod();
        }
        public Builder setPaymentMethod(int value) {
          result.hasPaymentMethod = true;
          result.paymentMethod_ = value;
          return this;
        }
        public Builder clearPaymentMethod() {
          result.hasPaymentMethod = false;
          result.paymentMethod_ = 0;
          return this;
        }
        
        // optional uint32 flags = 7;
        public boolean hasFlags() {
          return result.hasFlags();
        }
        public int getFlags() {
          return result.getFlags();
        }
        public Builder setFlags(int value) {
          result.hasFlags = true;
          result.flags_ = value;
          return this;
        }
        public Builder clearFlags() {
          result.hasFlags = false;
          result.flags_ = 0;
          return this;
        }
        
        // optional string purchase_country_code = 8;
        public boolean hasPurchaseCountryCode() {
          return result.hasPurchaseCountryCode();
        }
        public java.lang.String getPurchaseCountryCode() {
          return result.getPurchaseCountryCode();
        }
        public Builder setPurchaseCountryCode(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPurchaseCountryCode = true;
          result.purchaseCountryCode_ = value;
          return this;
        }
        public Builder clearPurchaseCountryCode() {
          result.hasPurchaseCountryCode = false;
          result.purchaseCountryCode_ = getDefaultInstance().getPurchaseCountryCode();
          return this;
        }
        
        // optional uint32 license_type = 9;
        public boolean hasLicenseType() {
          return result.hasLicenseType();
        }
        public int getLicenseType() {
          return result.getLicenseType();
        }
        public Builder setLicenseType(int value) {
          result.hasLicenseType = true;
          result.licenseType_ = value;
          return this;
        }
        public Builder clearLicenseType() {
          result.hasLicenseType = false;
          result.licenseType_ = 0;
          return this;
        }
        
        // optional int32 territory_code = 10;
        public boolean hasTerritoryCode() {
          return result.hasTerritoryCode();
        }
        public int getTerritoryCode() {
          return result.getTerritoryCode();
        }
        public Builder setTerritoryCode(int value) {
          result.hasTerritoryCode = true;
          result.territoryCode_ = value;
          return this;
        }
        public Builder clearTerritoryCode() {
          result.hasTerritoryCode = false;
          result.territoryCode_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientLicenseList.License)
      }
      
      static {
        defaultInstance = new License(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientLicenseList.License)
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // repeated .CMsgClientLicenseList.License licenses = 2;
    public static final int LICENSES_FIELD_NUMBER = 2;
    private java.util.List<SteamMessages.CMsgClientLicenseList.License> licenses_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientLicenseList.License> getLicensesList() {
      return licenses_;
    }
    public int getLicensesCount() { return licenses_.size(); }
    public SteamMessages.CMsgClientLicenseList.License getLicenses(int index) {
      return licenses_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      for (SteamMessages.CMsgClientLicenseList.License element : getLicensesList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      for (SteamMessages.CMsgClientLicenseList.License element : getLicensesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLicenseList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLicenseList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLicenseList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLicenseList result;
      
      // Construct using SteamMessages.CMsgClientLicenseList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLicenseList();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLicenseList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLicenseList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLicenseList.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLicenseList getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLicenseList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLicenseList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLicenseList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLicenseList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.licenses_ != java.util.Collections.EMPTY_LIST) {
          result.licenses_ =
            java.util.Collections.unmodifiableList(result.licenses_);
        }
        SteamMessages.CMsgClientLicenseList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLicenseList) {
          return mergeFrom((SteamMessages.CMsgClientLicenseList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLicenseList other) {
        if (other == SteamMessages.CMsgClientLicenseList.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (!other.licenses_.isEmpty()) {
          if (result.licenses_.isEmpty()) {
            result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgClientLicenseList.License>();
          }
          result.licenses_.addAll(other.licenses_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
            case 18: {
              SteamMessages.CMsgClientLicenseList.License.Builder subBuilder = SteamMessages.CMsgClientLicenseList.License.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLicenses(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // repeated .CMsgClientLicenseList.License licenses = 2;
      public java.util.List<SteamMessages.CMsgClientLicenseList.License> getLicensesList() {
        return java.util.Collections.unmodifiableList(result.licenses_);
      }
      public int getLicensesCount() {
        return result.getLicensesCount();
      }
      public SteamMessages.CMsgClientLicenseList.License getLicenses(int index) {
        return result.getLicenses(index);
      }
      public Builder setLicenses(int index, SteamMessages.CMsgClientLicenseList.License value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.licenses_.set(index, value);
        return this;
      }
      public Builder setLicenses(int index, SteamMessages.CMsgClientLicenseList.License.Builder builderForValue) {
        result.licenses_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLicenses(SteamMessages.CMsgClientLicenseList.License value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.licenses_.isEmpty()) {
          result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgClientLicenseList.License>();
        }
        result.licenses_.add(value);
        return this;
      }
      public Builder addLicenses(SteamMessages.CMsgClientLicenseList.License.Builder builderForValue) {
        if (result.licenses_.isEmpty()) {
          result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgClientLicenseList.License>();
        }
        result.licenses_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLicenses(
          java.lang.Iterable<? extends SteamMessages.CMsgClientLicenseList.License> values) {
        if (result.licenses_.isEmpty()) {
          result.licenses_ = new java.util.ArrayList<SteamMessages.CMsgClientLicenseList.License>();
        }
        super.addAll(values, result.licenses_);
        return this;
      }
      public Builder clearLicenses() {
        result.licenses_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLicenseList)
    }
    
    static {
      defaultInstance = new CMsgClientLicenseList(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLicenseList)
  }
  
  public static final class CMsgClientLBSSetScore extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSSetScore.newBuilder() to construct.
    private CMsgClientLBSSetScore() {
      initFields();
    }
    private CMsgClientLBSSetScore(boolean noInit) {}
    
    private static final CMsgClientLBSSetScore defaultInstance;
    public static CMsgClientLBSSetScore getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSSetScore getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSSetScore_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSSetScore_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 leaderboard_id = 2;
    public static final int LEADERBOARD_ID_FIELD_NUMBER = 2;
    private boolean hasLeaderboardId;
    private int leaderboardId_ = 0;
    public boolean hasLeaderboardId() { return hasLeaderboardId; }
    public int getLeaderboardId() { return leaderboardId_; }
    
    // optional int32 score = 3;
    public static final int SCORE_FIELD_NUMBER = 3;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    // optional bytes details = 4;
    public static final int DETAILS_FIELD_NUMBER = 4;
    private boolean hasDetails;
    private com.google.protobuf.ByteString details_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasDetails() { return hasDetails; }
    public com.google.protobuf.ByteString getDetails() { return details_; }
    
    // optional int32 upload_score_method = 5;
    public static final int UPLOAD_SCORE_METHOD_FIELD_NUMBER = 5;
    private boolean hasUploadScoreMethod;
    private int uploadScoreMethod_ = 0;
    public boolean hasUploadScoreMethod() { return hasUploadScoreMethod; }
    public int getUploadScoreMethod() { return uploadScoreMethod_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasLeaderboardId()) {
        output.writeInt32(2, getLeaderboardId());
      }
      if (hasScore()) {
        output.writeInt32(3, getScore());
      }
      if (hasDetails()) {
        output.writeBytes(4, getDetails());
      }
      if (hasUploadScoreMethod()) {
        output.writeInt32(5, getUploadScoreMethod());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasLeaderboardId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardId());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getScore());
      }
      if (hasDetails()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDetails());
      }
      if (hasUploadScoreMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getUploadScoreMethod());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSSetScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSSetScore prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSSetScore result;
      
      // Construct using SteamMessages.CMsgClientLBSSetScore.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSSetScore();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSSetScore internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSSetScore();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSSetScore.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSSetScore getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSSetScore.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSSetScore build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSSetScore buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSSetScore buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLBSSetScore returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSSetScore) {
          return mergeFrom((SteamMessages.CMsgClientLBSSetScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSSetScore other) {
        if (other == SteamMessages.CMsgClientLBSSetScore.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasLeaderboardId()) {
          setLeaderboardId(other.getLeaderboardId());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasDetails()) {
          setDetails(other.getDetails());
        }
        if (other.hasUploadScoreMethod()) {
          setUploadScoreMethod(other.getUploadScoreMethod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 16: {
              setLeaderboardId(input.readInt32());
              break;
            }
            case 24: {
              setScore(input.readInt32());
              break;
            }
            case 34: {
              setDetails(input.readBytes());
              break;
            }
            case 40: {
              setUploadScoreMethod(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_id = 2;
      public boolean hasLeaderboardId() {
        return result.hasLeaderboardId();
      }
      public int getLeaderboardId() {
        return result.getLeaderboardId();
      }
      public Builder setLeaderboardId(int value) {
        result.hasLeaderboardId = true;
        result.leaderboardId_ = value;
        return this;
      }
      public Builder clearLeaderboardId() {
        result.hasLeaderboardId = false;
        result.leaderboardId_ = 0;
        return this;
      }
      
      // optional int32 score = 3;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // optional bytes details = 4;
      public boolean hasDetails() {
        return result.hasDetails();
      }
      public com.google.protobuf.ByteString getDetails() {
        return result.getDetails();
      }
      public Builder setDetails(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDetails = true;
        result.details_ = value;
        return this;
      }
      public Builder clearDetails() {
        result.hasDetails = false;
        result.details_ = getDefaultInstance().getDetails();
        return this;
      }
      
      // optional int32 upload_score_method = 5;
      public boolean hasUploadScoreMethod() {
        return result.hasUploadScoreMethod();
      }
      public int getUploadScoreMethod() {
        return result.getUploadScoreMethod();
      }
      public Builder setUploadScoreMethod(int value) {
        result.hasUploadScoreMethod = true;
        result.uploadScoreMethod_ = value;
        return this;
      }
      public Builder clearUploadScoreMethod() {
        result.hasUploadScoreMethod = false;
        result.uploadScoreMethod_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSSetScore)
    }
    
    static {
      defaultInstance = new CMsgClientLBSSetScore(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSSetScore)
  }
  
  public static final class CMsgClientLBSSetScoreResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSSetScoreResponse.newBuilder() to construct.
    private CMsgClientLBSSetScoreResponse() {
      initFields();
    }
    private CMsgClientLBSSetScoreResponse(boolean noInit) {}
    
    private static final CMsgClientLBSSetScoreResponse defaultInstance;
    public static CMsgClientLBSSetScoreResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSSetScoreResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSSetScoreResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSSetScoreResponse_fieldAccessorTable;
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional int32 leaderboard_entry_count = 2;
    public static final int LEADERBOARD_ENTRY_COUNT_FIELD_NUMBER = 2;
    private boolean hasLeaderboardEntryCount;
    private int leaderboardEntryCount_ = 0;
    public boolean hasLeaderboardEntryCount() { return hasLeaderboardEntryCount; }
    public int getLeaderboardEntryCount() { return leaderboardEntryCount_; }
    
    // optional bool score_changed = 3;
    public static final int SCORE_CHANGED_FIELD_NUMBER = 3;
    private boolean hasScoreChanged;
    private boolean scoreChanged_ = false;
    public boolean hasScoreChanged() { return hasScoreChanged; }
    public boolean getScoreChanged() { return scoreChanged_; }
    
    // optional int32 global_rank_previous = 4;
    public static final int GLOBAL_RANK_PREVIOUS_FIELD_NUMBER = 4;
    private boolean hasGlobalRankPrevious;
    private int globalRankPrevious_ = 0;
    public boolean hasGlobalRankPrevious() { return hasGlobalRankPrevious; }
    public int getGlobalRankPrevious() { return globalRankPrevious_; }
    
    // optional int32 global_rank_new = 5;
    public static final int GLOBAL_RANK_NEW_FIELD_NUMBER = 5;
    private boolean hasGlobalRankNew;
    private int globalRankNew_ = 0;
    public boolean hasGlobalRankNew() { return hasGlobalRankNew; }
    public int getGlobalRankNew() { return globalRankNew_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      if (hasLeaderboardEntryCount()) {
        output.writeInt32(2, getLeaderboardEntryCount());
      }
      if (hasScoreChanged()) {
        output.writeBool(3, getScoreChanged());
      }
      if (hasGlobalRankPrevious()) {
        output.writeInt32(4, getGlobalRankPrevious());
      }
      if (hasGlobalRankNew()) {
        output.writeInt32(5, getGlobalRankNew());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      if (hasLeaderboardEntryCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardEntryCount());
      }
      if (hasScoreChanged()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getScoreChanged());
      }
      if (hasGlobalRankPrevious()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getGlobalRankPrevious());
      }
      if (hasGlobalRankNew()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getGlobalRankNew());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSSetScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSSetScoreResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSSetScoreResponse result;
      
      // Construct using SteamMessages.CMsgClientLBSSetScoreResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSSetScoreResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSSetScoreResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSSetScoreResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSSetScoreResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSSetScoreResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSSetScoreResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSSetScoreResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSSetScoreResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSSetScoreResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLBSSetScoreResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSSetScoreResponse) {
          return mergeFrom((SteamMessages.CMsgClientLBSSetScoreResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSSetScoreResponse other) {
        if (other == SteamMessages.CMsgClientLBSSetScoreResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasLeaderboardEntryCount()) {
          setLeaderboardEntryCount(other.getLeaderboardEntryCount());
        }
        if (other.hasScoreChanged()) {
          setScoreChanged(other.getScoreChanged());
        }
        if (other.hasGlobalRankPrevious()) {
          setGlobalRankPrevious(other.getGlobalRankPrevious());
        }
        if (other.hasGlobalRankNew()) {
          setGlobalRankNew(other.getGlobalRankNew());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
            case 16: {
              setLeaderboardEntryCount(input.readInt32());
              break;
            }
            case 24: {
              setScoreChanged(input.readBool());
              break;
            }
            case 32: {
              setGlobalRankPrevious(input.readInt32());
              break;
            }
            case 40: {
              setGlobalRankNew(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional int32 leaderboard_entry_count = 2;
      public boolean hasLeaderboardEntryCount() {
        return result.hasLeaderboardEntryCount();
      }
      public int getLeaderboardEntryCount() {
        return result.getLeaderboardEntryCount();
      }
      public Builder setLeaderboardEntryCount(int value) {
        result.hasLeaderboardEntryCount = true;
        result.leaderboardEntryCount_ = value;
        return this;
      }
      public Builder clearLeaderboardEntryCount() {
        result.hasLeaderboardEntryCount = false;
        result.leaderboardEntryCount_ = 0;
        return this;
      }
      
      // optional bool score_changed = 3;
      public boolean hasScoreChanged() {
        return result.hasScoreChanged();
      }
      public boolean getScoreChanged() {
        return result.getScoreChanged();
      }
      public Builder setScoreChanged(boolean value) {
        result.hasScoreChanged = true;
        result.scoreChanged_ = value;
        return this;
      }
      public Builder clearScoreChanged() {
        result.hasScoreChanged = false;
        result.scoreChanged_ = false;
        return this;
      }
      
      // optional int32 global_rank_previous = 4;
      public boolean hasGlobalRankPrevious() {
        return result.hasGlobalRankPrevious();
      }
      public int getGlobalRankPrevious() {
        return result.getGlobalRankPrevious();
      }
      public Builder setGlobalRankPrevious(int value) {
        result.hasGlobalRankPrevious = true;
        result.globalRankPrevious_ = value;
        return this;
      }
      public Builder clearGlobalRankPrevious() {
        result.hasGlobalRankPrevious = false;
        result.globalRankPrevious_ = 0;
        return this;
      }
      
      // optional int32 global_rank_new = 5;
      public boolean hasGlobalRankNew() {
        return result.hasGlobalRankNew();
      }
      public int getGlobalRankNew() {
        return result.getGlobalRankNew();
      }
      public Builder setGlobalRankNew(int value) {
        result.hasGlobalRankNew = true;
        result.globalRankNew_ = value;
        return this;
      }
      public Builder clearGlobalRankNew() {
        result.hasGlobalRankNew = false;
        result.globalRankNew_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSSetScoreResponse)
    }
    
    static {
      defaultInstance = new CMsgClientLBSSetScoreResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSSetScoreResponse)
  }
  
  public static final class CMsgClientLBSFindOrCreateLB extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSFindOrCreateLB.newBuilder() to construct.
    private CMsgClientLBSFindOrCreateLB() {
      initFields();
    }
    private CMsgClientLBSFindOrCreateLB(boolean noInit) {}
    
    private static final CMsgClientLBSFindOrCreateLB defaultInstance;
    public static CMsgClientLBSFindOrCreateLB getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSFindOrCreateLB getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSFindOrCreateLB_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSFindOrCreateLB_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 leaderboard_sort_method = 2;
    public static final int LEADERBOARD_SORT_METHOD_FIELD_NUMBER = 2;
    private boolean hasLeaderboardSortMethod;
    private int leaderboardSortMethod_ = 0;
    public boolean hasLeaderboardSortMethod() { return hasLeaderboardSortMethod; }
    public int getLeaderboardSortMethod() { return leaderboardSortMethod_; }
    
    // optional int32 leaderboard_display_type = 3;
    public static final int LEADERBOARD_DISPLAY_TYPE_FIELD_NUMBER = 3;
    private boolean hasLeaderboardDisplayType;
    private int leaderboardDisplayType_ = 0;
    public boolean hasLeaderboardDisplayType() { return hasLeaderboardDisplayType; }
    public int getLeaderboardDisplayType() { return leaderboardDisplayType_; }
    
    // optional bool create_if_not_found = 4;
    public static final int CREATE_IF_NOT_FOUND_FIELD_NUMBER = 4;
    private boolean hasCreateIfNotFound;
    private boolean createIfNotFound_ = false;
    public boolean hasCreateIfNotFound() { return hasCreateIfNotFound; }
    public boolean getCreateIfNotFound() { return createIfNotFound_; }
    
    // optional string leaderboard_name = 5;
    public static final int LEADERBOARD_NAME_FIELD_NUMBER = 5;
    private boolean hasLeaderboardName;
    private java.lang.String leaderboardName_ = "";
    public boolean hasLeaderboardName() { return hasLeaderboardName; }
    public java.lang.String getLeaderboardName() { return leaderboardName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasLeaderboardSortMethod()) {
        output.writeInt32(2, getLeaderboardSortMethod());
      }
      if (hasLeaderboardDisplayType()) {
        output.writeInt32(3, getLeaderboardDisplayType());
      }
      if (hasCreateIfNotFound()) {
        output.writeBool(4, getCreateIfNotFound());
      }
      if (hasLeaderboardName()) {
        output.writeString(5, getLeaderboardName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasLeaderboardSortMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardSortMethod());
      }
      if (hasLeaderboardDisplayType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getLeaderboardDisplayType());
      }
      if (hasCreateIfNotFound()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getCreateIfNotFound());
      }
      if (hasLeaderboardName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getLeaderboardName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSFindOrCreateLB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSFindOrCreateLB result;
      
      // Construct using SteamMessages.CMsgClientLBSFindOrCreateLB.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSFindOrCreateLB();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSFindOrCreateLB internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSFindOrCreateLB();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSFindOrCreateLB.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSFindOrCreateLB getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSFindOrCreateLB.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSFindOrCreateLB build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSFindOrCreateLB buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSFindOrCreateLB buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLBSFindOrCreateLB returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSFindOrCreateLB) {
          return mergeFrom((SteamMessages.CMsgClientLBSFindOrCreateLB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSFindOrCreateLB other) {
        if (other == SteamMessages.CMsgClientLBSFindOrCreateLB.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasLeaderboardSortMethod()) {
          setLeaderboardSortMethod(other.getLeaderboardSortMethod());
        }
        if (other.hasLeaderboardDisplayType()) {
          setLeaderboardDisplayType(other.getLeaderboardDisplayType());
        }
        if (other.hasCreateIfNotFound()) {
          setCreateIfNotFound(other.getCreateIfNotFound());
        }
        if (other.hasLeaderboardName()) {
          setLeaderboardName(other.getLeaderboardName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 16: {
              setLeaderboardSortMethod(input.readInt32());
              break;
            }
            case 24: {
              setLeaderboardDisplayType(input.readInt32());
              break;
            }
            case 32: {
              setCreateIfNotFound(input.readBool());
              break;
            }
            case 42: {
              setLeaderboardName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_sort_method = 2;
      public boolean hasLeaderboardSortMethod() {
        return result.hasLeaderboardSortMethod();
      }
      public int getLeaderboardSortMethod() {
        return result.getLeaderboardSortMethod();
      }
      public Builder setLeaderboardSortMethod(int value) {
        result.hasLeaderboardSortMethod = true;
        result.leaderboardSortMethod_ = value;
        return this;
      }
      public Builder clearLeaderboardSortMethod() {
        result.hasLeaderboardSortMethod = false;
        result.leaderboardSortMethod_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_display_type = 3;
      public boolean hasLeaderboardDisplayType() {
        return result.hasLeaderboardDisplayType();
      }
      public int getLeaderboardDisplayType() {
        return result.getLeaderboardDisplayType();
      }
      public Builder setLeaderboardDisplayType(int value) {
        result.hasLeaderboardDisplayType = true;
        result.leaderboardDisplayType_ = value;
        return this;
      }
      public Builder clearLeaderboardDisplayType() {
        result.hasLeaderboardDisplayType = false;
        result.leaderboardDisplayType_ = 0;
        return this;
      }
      
      // optional bool create_if_not_found = 4;
      public boolean hasCreateIfNotFound() {
        return result.hasCreateIfNotFound();
      }
      public boolean getCreateIfNotFound() {
        return result.getCreateIfNotFound();
      }
      public Builder setCreateIfNotFound(boolean value) {
        result.hasCreateIfNotFound = true;
        result.createIfNotFound_ = value;
        return this;
      }
      public Builder clearCreateIfNotFound() {
        result.hasCreateIfNotFound = false;
        result.createIfNotFound_ = false;
        return this;
      }
      
      // optional string leaderboard_name = 5;
      public boolean hasLeaderboardName() {
        return result.hasLeaderboardName();
      }
      public java.lang.String getLeaderboardName() {
        return result.getLeaderboardName();
      }
      public Builder setLeaderboardName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLeaderboardName = true;
        result.leaderboardName_ = value;
        return this;
      }
      public Builder clearLeaderboardName() {
        result.hasLeaderboardName = false;
        result.leaderboardName_ = getDefaultInstance().getLeaderboardName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSFindOrCreateLB)
    }
    
    static {
      defaultInstance = new CMsgClientLBSFindOrCreateLB(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSFindOrCreateLB)
  }
  
  public static final class CMsgClientLBSFindOrCreateLBResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSFindOrCreateLBResponse.newBuilder() to construct.
    private CMsgClientLBSFindOrCreateLBResponse() {
      initFields();
    }
    private CMsgClientLBSFindOrCreateLBResponse(boolean noInit) {}
    
    private static final CMsgClientLBSFindOrCreateLBResponse defaultInstance;
    public static CMsgClientLBSFindOrCreateLBResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSFindOrCreateLBResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSFindOrCreateLBResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSFindOrCreateLBResponse_fieldAccessorTable;
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional int32 leaderboard_id = 2;
    public static final int LEADERBOARD_ID_FIELD_NUMBER = 2;
    private boolean hasLeaderboardId;
    private int leaderboardId_ = 0;
    public boolean hasLeaderboardId() { return hasLeaderboardId; }
    public int getLeaderboardId() { return leaderboardId_; }
    
    // optional int32 leaderboard_entry_count = 3;
    public static final int LEADERBOARD_ENTRY_COUNT_FIELD_NUMBER = 3;
    private boolean hasLeaderboardEntryCount;
    private int leaderboardEntryCount_ = 0;
    public boolean hasLeaderboardEntryCount() { return hasLeaderboardEntryCount; }
    public int getLeaderboardEntryCount() { return leaderboardEntryCount_; }
    
    // optional int32 leaderboard_sort_method = 4 [default = 0];
    public static final int LEADERBOARD_SORT_METHOD_FIELD_NUMBER = 4;
    private boolean hasLeaderboardSortMethod;
    private int leaderboardSortMethod_ = 0;
    public boolean hasLeaderboardSortMethod() { return hasLeaderboardSortMethod; }
    public int getLeaderboardSortMethod() { return leaderboardSortMethod_; }
    
    // optional int32 leaderboard_display_type = 5 [default = 0];
    public static final int LEADERBOARD_DISPLAY_TYPE_FIELD_NUMBER = 5;
    private boolean hasLeaderboardDisplayType;
    private int leaderboardDisplayType_ = 0;
    public boolean hasLeaderboardDisplayType() { return hasLeaderboardDisplayType; }
    public int getLeaderboardDisplayType() { return leaderboardDisplayType_; }
    
    // optional string leaderboard_name = 6;
    public static final int LEADERBOARD_NAME_FIELD_NUMBER = 6;
    private boolean hasLeaderboardName;
    private java.lang.String leaderboardName_ = "";
    public boolean hasLeaderboardName() { return hasLeaderboardName; }
    public java.lang.String getLeaderboardName() { return leaderboardName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      if (hasLeaderboardId()) {
        output.writeInt32(2, getLeaderboardId());
      }
      if (hasLeaderboardEntryCount()) {
        output.writeInt32(3, getLeaderboardEntryCount());
      }
      if (hasLeaderboardSortMethod()) {
        output.writeInt32(4, getLeaderboardSortMethod());
      }
      if (hasLeaderboardDisplayType()) {
        output.writeInt32(5, getLeaderboardDisplayType());
      }
      if (hasLeaderboardName()) {
        output.writeString(6, getLeaderboardName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      if (hasLeaderboardId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardId());
      }
      if (hasLeaderboardEntryCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getLeaderboardEntryCount());
      }
      if (hasLeaderboardSortMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getLeaderboardSortMethod());
      }
      if (hasLeaderboardDisplayType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLeaderboardDisplayType());
      }
      if (hasLeaderboardName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getLeaderboardName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSFindOrCreateLBResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSFindOrCreateLBResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSFindOrCreateLBResponse result;
      
      // Construct using SteamMessages.CMsgClientLBSFindOrCreateLBResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSFindOrCreateLBResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSFindOrCreateLBResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSFindOrCreateLBResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSFindOrCreateLBResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSFindOrCreateLBResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSFindOrCreateLBResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSFindOrCreateLBResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSFindOrCreateLBResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSFindOrCreateLBResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLBSFindOrCreateLBResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSFindOrCreateLBResponse) {
          return mergeFrom((SteamMessages.CMsgClientLBSFindOrCreateLBResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSFindOrCreateLBResponse other) {
        if (other == SteamMessages.CMsgClientLBSFindOrCreateLBResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasLeaderboardId()) {
          setLeaderboardId(other.getLeaderboardId());
        }
        if (other.hasLeaderboardEntryCount()) {
          setLeaderboardEntryCount(other.getLeaderboardEntryCount());
        }
        if (other.hasLeaderboardSortMethod()) {
          setLeaderboardSortMethod(other.getLeaderboardSortMethod());
        }
        if (other.hasLeaderboardDisplayType()) {
          setLeaderboardDisplayType(other.getLeaderboardDisplayType());
        }
        if (other.hasLeaderboardName()) {
          setLeaderboardName(other.getLeaderboardName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
            case 16: {
              setLeaderboardId(input.readInt32());
              break;
            }
            case 24: {
              setLeaderboardEntryCount(input.readInt32());
              break;
            }
            case 32: {
              setLeaderboardSortMethod(input.readInt32());
              break;
            }
            case 40: {
              setLeaderboardDisplayType(input.readInt32());
              break;
            }
            case 50: {
              setLeaderboardName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional int32 leaderboard_id = 2;
      public boolean hasLeaderboardId() {
        return result.hasLeaderboardId();
      }
      public int getLeaderboardId() {
        return result.getLeaderboardId();
      }
      public Builder setLeaderboardId(int value) {
        result.hasLeaderboardId = true;
        result.leaderboardId_ = value;
        return this;
      }
      public Builder clearLeaderboardId() {
        result.hasLeaderboardId = false;
        result.leaderboardId_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_entry_count = 3;
      public boolean hasLeaderboardEntryCount() {
        return result.hasLeaderboardEntryCount();
      }
      public int getLeaderboardEntryCount() {
        return result.getLeaderboardEntryCount();
      }
      public Builder setLeaderboardEntryCount(int value) {
        result.hasLeaderboardEntryCount = true;
        result.leaderboardEntryCount_ = value;
        return this;
      }
      public Builder clearLeaderboardEntryCount() {
        result.hasLeaderboardEntryCount = false;
        result.leaderboardEntryCount_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_sort_method = 4 [default = 0];
      public boolean hasLeaderboardSortMethod() {
        return result.hasLeaderboardSortMethod();
      }
      public int getLeaderboardSortMethod() {
        return result.getLeaderboardSortMethod();
      }
      public Builder setLeaderboardSortMethod(int value) {
        result.hasLeaderboardSortMethod = true;
        result.leaderboardSortMethod_ = value;
        return this;
      }
      public Builder clearLeaderboardSortMethod() {
        result.hasLeaderboardSortMethod = false;
        result.leaderboardSortMethod_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_display_type = 5 [default = 0];
      public boolean hasLeaderboardDisplayType() {
        return result.hasLeaderboardDisplayType();
      }
      public int getLeaderboardDisplayType() {
        return result.getLeaderboardDisplayType();
      }
      public Builder setLeaderboardDisplayType(int value) {
        result.hasLeaderboardDisplayType = true;
        result.leaderboardDisplayType_ = value;
        return this;
      }
      public Builder clearLeaderboardDisplayType() {
        result.hasLeaderboardDisplayType = false;
        result.leaderboardDisplayType_ = 0;
        return this;
      }
      
      // optional string leaderboard_name = 6;
      public boolean hasLeaderboardName() {
        return result.hasLeaderboardName();
      }
      public java.lang.String getLeaderboardName() {
        return result.getLeaderboardName();
      }
      public Builder setLeaderboardName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLeaderboardName = true;
        result.leaderboardName_ = value;
        return this;
      }
      public Builder clearLeaderboardName() {
        result.hasLeaderboardName = false;
        result.leaderboardName_ = getDefaultInstance().getLeaderboardName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSFindOrCreateLBResponse)
    }
    
    static {
      defaultInstance = new CMsgClientLBSFindOrCreateLBResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSFindOrCreateLBResponse)
  }
  
  public static final class CMsgClientLBSGetLBEntries extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSGetLBEntries.newBuilder() to construct.
    private CMsgClientLBSGetLBEntries() {
      initFields();
    }
    private CMsgClientLBSGetLBEntries(boolean noInit) {}
    
    private static final CMsgClientLBSGetLBEntries defaultInstance;
    public static CMsgClientLBSGetLBEntries getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSGetLBEntries getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSGetLBEntries_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSGetLBEntries_fieldAccessorTable;
    }
    
    // optional int32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 leaderboard_id = 2;
    public static final int LEADERBOARD_ID_FIELD_NUMBER = 2;
    private boolean hasLeaderboardId;
    private int leaderboardId_ = 0;
    public boolean hasLeaderboardId() { return hasLeaderboardId; }
    public int getLeaderboardId() { return leaderboardId_; }
    
    // optional int32 range_start = 3;
    public static final int RANGE_START_FIELD_NUMBER = 3;
    private boolean hasRangeStart;
    private int rangeStart_ = 0;
    public boolean hasRangeStart() { return hasRangeStart; }
    public int getRangeStart() { return rangeStart_; }
    
    // optional int32 range_end = 4;
    public static final int RANGE_END_FIELD_NUMBER = 4;
    private boolean hasRangeEnd;
    private int rangeEnd_ = 0;
    public boolean hasRangeEnd() { return hasRangeEnd; }
    public int getRangeEnd() { return rangeEnd_; }
    
    // optional int32 leaderboard_data_request = 5;
    public static final int LEADERBOARD_DATA_REQUEST_FIELD_NUMBER = 5;
    private boolean hasLeaderboardDataRequest;
    private int leaderboardDataRequest_ = 0;
    public boolean hasLeaderboardDataRequest() { return hasLeaderboardDataRequest; }
    public int getLeaderboardDataRequest() { return leaderboardDataRequest_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeInt32(1, getAppId());
      }
      if (hasLeaderboardId()) {
        output.writeInt32(2, getLeaderboardId());
      }
      if (hasRangeStart()) {
        output.writeInt32(3, getRangeStart());
      }
      if (hasRangeEnd()) {
        output.writeInt32(4, getRangeEnd());
      }
      if (hasLeaderboardDataRequest()) {
        output.writeInt32(5, getLeaderboardDataRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getAppId());
      }
      if (hasLeaderboardId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardId());
      }
      if (hasRangeStart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getRangeStart());
      }
      if (hasRangeEnd()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getRangeEnd());
      }
      if (hasLeaderboardDataRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLeaderboardDataRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntries parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSGetLBEntries prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSGetLBEntries result;
      
      // Construct using SteamMessages.CMsgClientLBSGetLBEntries.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSGetLBEntries();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSGetLBEntries internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSGetLBEntries();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSGetLBEntries.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSGetLBEntries getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSGetLBEntries.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSGetLBEntries build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSGetLBEntries buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSGetLBEntries buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientLBSGetLBEntries returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSGetLBEntries) {
          return mergeFrom((SteamMessages.CMsgClientLBSGetLBEntries)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSGetLBEntries other) {
        if (other == SteamMessages.CMsgClientLBSGetLBEntries.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasLeaderboardId()) {
          setLeaderboardId(other.getLeaderboardId());
        }
        if (other.hasRangeStart()) {
          setRangeStart(other.getRangeStart());
        }
        if (other.hasRangeEnd()) {
          setRangeEnd(other.getRangeEnd());
        }
        if (other.hasLeaderboardDataRequest()) {
          setLeaderboardDataRequest(other.getLeaderboardDataRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readInt32());
              break;
            }
            case 16: {
              setLeaderboardId(input.readInt32());
              break;
            }
            case 24: {
              setRangeStart(input.readInt32());
              break;
            }
            case 32: {
              setRangeEnd(input.readInt32());
              break;
            }
            case 40: {
              setLeaderboardDataRequest(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_id = 2;
      public boolean hasLeaderboardId() {
        return result.hasLeaderboardId();
      }
      public int getLeaderboardId() {
        return result.getLeaderboardId();
      }
      public Builder setLeaderboardId(int value) {
        result.hasLeaderboardId = true;
        result.leaderboardId_ = value;
        return this;
      }
      public Builder clearLeaderboardId() {
        result.hasLeaderboardId = false;
        result.leaderboardId_ = 0;
        return this;
      }
      
      // optional int32 range_start = 3;
      public boolean hasRangeStart() {
        return result.hasRangeStart();
      }
      public int getRangeStart() {
        return result.getRangeStart();
      }
      public Builder setRangeStart(int value) {
        result.hasRangeStart = true;
        result.rangeStart_ = value;
        return this;
      }
      public Builder clearRangeStart() {
        result.hasRangeStart = false;
        result.rangeStart_ = 0;
        return this;
      }
      
      // optional int32 range_end = 4;
      public boolean hasRangeEnd() {
        return result.hasRangeEnd();
      }
      public int getRangeEnd() {
        return result.getRangeEnd();
      }
      public Builder setRangeEnd(int value) {
        result.hasRangeEnd = true;
        result.rangeEnd_ = value;
        return this;
      }
      public Builder clearRangeEnd() {
        result.hasRangeEnd = false;
        result.rangeEnd_ = 0;
        return this;
      }
      
      // optional int32 leaderboard_data_request = 5;
      public boolean hasLeaderboardDataRequest() {
        return result.hasLeaderboardDataRequest();
      }
      public int getLeaderboardDataRequest() {
        return result.getLeaderboardDataRequest();
      }
      public Builder setLeaderboardDataRequest(int value) {
        result.hasLeaderboardDataRequest = true;
        result.leaderboardDataRequest_ = value;
        return this;
      }
      public Builder clearLeaderboardDataRequest() {
        result.hasLeaderboardDataRequest = false;
        result.leaderboardDataRequest_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSGetLBEntries)
    }
    
    static {
      defaultInstance = new CMsgClientLBSGetLBEntries(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSGetLBEntries)
  }
  
  public static final class CMsgClientLBSGetLBEntriesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientLBSGetLBEntriesResponse.newBuilder() to construct.
    private CMsgClientLBSGetLBEntriesResponse() {
      initFields();
    }
    private CMsgClientLBSGetLBEntriesResponse(boolean noInit) {}
    
    private static final CMsgClientLBSGetLBEntriesResponse defaultInstance;
    public static CMsgClientLBSGetLBEntriesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientLBSGetLBEntriesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientLBSGetLBEntriesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientLBSGetLBEntriesResponse_fieldAccessorTable;
    }
    
    public static final class Entry extends
        com.google.protobuf.GeneratedMessage {
      // Use Entry.newBuilder() to construct.
      private Entry() {
        initFields();
      }
      private Entry(boolean noInit) {}
      
      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }
      
      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_fieldAccessorTable;
      }
      
      // optional fixed64 steam_id_user = 1;
      public static final int STEAM_ID_USER_FIELD_NUMBER = 1;
      private boolean hasSteamIdUser;
      private long steamIdUser_ = 0L;
      public boolean hasSteamIdUser() { return hasSteamIdUser; }
      public long getSteamIdUser() { return steamIdUser_; }
      
      // optional int32 global_rank = 2;
      public static final int GLOBAL_RANK_FIELD_NUMBER = 2;
      private boolean hasGlobalRank;
      private int globalRank_ = 0;
      public boolean hasGlobalRank() { return hasGlobalRank; }
      public int getGlobalRank() { return globalRank_; }
      
      // optional int32 score = 3;
      public static final int SCORE_FIELD_NUMBER = 3;
      private boolean hasScore;
      private int score_ = 0;
      public boolean hasScore() { return hasScore; }
      public int getScore() { return score_; }
      
      // optional bytes details = 4;
      public static final int DETAILS_FIELD_NUMBER = 4;
      private boolean hasDetails;
      private com.google.protobuf.ByteString details_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasDetails() { return hasDetails; }
      public com.google.protobuf.ByteString getDetails() { return details_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamIdUser()) {
          output.writeFixed64(1, getSteamIdUser());
        }
        if (hasGlobalRank()) {
          output.writeInt32(2, getGlobalRank());
        }
        if (hasScore()) {
          output.writeInt32(3, getScore());
        }
        if (hasDetails()) {
          output.writeBytes(4, getDetails());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamIdUser()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getSteamIdUser());
        }
        if (hasGlobalRank()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getGlobalRank());
        }
        if (hasScore()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getScore());
        }
        if (hasDetails()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getDetails());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry result;
        
        // Construct using SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry();
          return builder;
        }
        
        protected SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.getDescriptor();
        }
        
        public SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry getDefaultInstanceForType() {
          return SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry) {
            return mergeFrom((SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry other) {
          if (other == SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.getDefaultInstance()) return this;
          if (other.hasSteamIdUser()) {
            setSteamIdUser(other.getSteamIdUser());
          }
          if (other.hasGlobalRank()) {
            setGlobalRank(other.getGlobalRank());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasDetails()) {
            setDetails(other.getDetails());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setSteamIdUser(input.readFixed64());
                break;
              }
              case 16: {
                setGlobalRank(input.readInt32());
                break;
              }
              case 24: {
                setScore(input.readInt32());
                break;
              }
              case 34: {
                setDetails(input.readBytes());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 steam_id_user = 1;
        public boolean hasSteamIdUser() {
          return result.hasSteamIdUser();
        }
        public long getSteamIdUser() {
          return result.getSteamIdUser();
        }
        public Builder setSteamIdUser(long value) {
          result.hasSteamIdUser = true;
          result.steamIdUser_ = value;
          return this;
        }
        public Builder clearSteamIdUser() {
          result.hasSteamIdUser = false;
          result.steamIdUser_ = 0L;
          return this;
        }
        
        // optional int32 global_rank = 2;
        public boolean hasGlobalRank() {
          return result.hasGlobalRank();
        }
        public int getGlobalRank() {
          return result.getGlobalRank();
        }
        public Builder setGlobalRank(int value) {
          result.hasGlobalRank = true;
          result.globalRank_ = value;
          return this;
        }
        public Builder clearGlobalRank() {
          result.hasGlobalRank = false;
          result.globalRank_ = 0;
          return this;
        }
        
        // optional int32 score = 3;
        public boolean hasScore() {
          return result.hasScore();
        }
        public int getScore() {
          return result.getScore();
        }
        public Builder setScore(int value) {
          result.hasScore = true;
          result.score_ = value;
          return this;
        }
        public Builder clearScore() {
          result.hasScore = false;
          result.score_ = 0;
          return this;
        }
        
        // optional bytes details = 4;
        public boolean hasDetails() {
          return result.hasDetails();
        }
        public com.google.protobuf.ByteString getDetails() {
          return result.getDetails();
        }
        public Builder setDetails(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDetails = true;
          result.details_ = value;
          return this;
        }
        public Builder clearDetails() {
          result.hasDetails = false;
          result.details_ = getDefaultInstance().getDetails();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientLBSGetLBEntriesResponse.Entry)
      }
      
      static {
        defaultInstance = new Entry(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientLBSGetLBEntriesResponse.Entry)
    }
    
    // optional int32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional int32 leaderboard_entry_count = 2;
    public static final int LEADERBOARD_ENTRY_COUNT_FIELD_NUMBER = 2;
    private boolean hasLeaderboardEntryCount;
    private int leaderboardEntryCount_ = 0;
    public boolean hasLeaderboardEntryCount() { return hasLeaderboardEntryCount; }
    public int getLeaderboardEntryCount() { return leaderboardEntryCount_; }
    
    // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
    public static final int ENTRIES_FIELD_NUMBER = 3;
    private java.util.List<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry> entries_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry> getEntriesList() {
      return entries_;
    }
    public int getEntriesCount() { return entries_.size(); }
    public SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry getEntries(int index) {
      return entries_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeInt32(1, getEresult());
      }
      if (hasLeaderboardEntryCount()) {
        output.writeInt32(2, getLeaderboardEntryCount());
      }
      for (SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry element : getEntriesList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getEresult());
      }
      if (hasLeaderboardEntryCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLeaderboardEntryCount());
      }
      for (SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry element : getEntriesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientLBSGetLBEntriesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientLBSGetLBEntriesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientLBSGetLBEntriesResponse result;
      
      // Construct using SteamMessages.CMsgClientLBSGetLBEntriesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientLBSGetLBEntriesResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientLBSGetLBEntriesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientLBSGetLBEntriesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientLBSGetLBEntriesResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientLBSGetLBEntriesResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientLBSGetLBEntriesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientLBSGetLBEntriesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientLBSGetLBEntriesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientLBSGetLBEntriesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.entries_ != java.util.Collections.EMPTY_LIST) {
          result.entries_ =
            java.util.Collections.unmodifiableList(result.entries_);
        }
        SteamMessages.CMsgClientLBSGetLBEntriesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientLBSGetLBEntriesResponse) {
          return mergeFrom((SteamMessages.CMsgClientLBSGetLBEntriesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientLBSGetLBEntriesResponse other) {
        if (other == SteamMessages.CMsgClientLBSGetLBEntriesResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasLeaderboardEntryCount()) {
          setLeaderboardEntryCount(other.getLeaderboardEntryCount());
        }
        if (!other.entries_.isEmpty()) {
          if (result.entries_.isEmpty()) {
            result.entries_ = new java.util.ArrayList<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry>();
          }
          result.entries_.addAll(other.entries_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readInt32());
              break;
            }
            case 16: {
              setLeaderboardEntryCount(input.readInt32());
              break;
            }
            case 26: {
              SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.Builder subBuilder = SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntries(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional int32 leaderboard_entry_count = 2;
      public boolean hasLeaderboardEntryCount() {
        return result.hasLeaderboardEntryCount();
      }
      public int getLeaderboardEntryCount() {
        return result.getLeaderboardEntryCount();
      }
      public Builder setLeaderboardEntryCount(int value) {
        result.hasLeaderboardEntryCount = true;
        result.leaderboardEntryCount_ = value;
        return this;
      }
      public Builder clearLeaderboardEntryCount() {
        result.hasLeaderboardEntryCount = false;
        result.leaderboardEntryCount_ = 0;
        return this;
      }
      
      // repeated .CMsgClientLBSGetLBEntriesResponse.Entry entries = 3;
      public java.util.List<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry> getEntriesList() {
        return java.util.Collections.unmodifiableList(result.entries_);
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry getEntries(int index) {
        return result.getEntries(index);
      }
      public Builder setEntries(int index, SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.entries_.set(index, value);
        return this;
      }
      public Builder setEntries(int index, SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.Builder builderForValue) {
        result.entries_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEntries(SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry>();
        }
        result.entries_.add(value);
        return this;
      }
      public Builder addEntries(SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.Builder builderForValue) {
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry>();
        }
        result.entries_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEntries(
          java.lang.Iterable<? extends SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry> values) {
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry>();
        }
        super.addAll(values, result.entries_);
        return this;
      }
      public Builder clearEntries() {
        result.entries_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientLBSGetLBEntriesResponse)
    }
    
    static {
      defaultInstance = new CMsgClientLBSGetLBEntriesResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientLBSGetLBEntriesResponse)
  }
  
  public static final class CMsgUFSDownloadRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgUFSDownloadRequest.newBuilder() to construct.
    private CMsgUFSDownloadRequest() {
      initFields();
    }
    private CMsgUFSDownloadRequest(boolean noInit) {}
    
    private static final CMsgUFSDownloadRequest defaultInstance;
    public static CMsgUFSDownloadRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgUFSDownloadRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgUFSDownloadRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgUFSDownloadRequest_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional int32 app_id = 2;
    public static final int APP_ID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional string filename = 3;
    public static final int FILENAME_FIELD_NUMBER = 3;
    private boolean hasFilename;
    private java.lang.String filename_ = "";
    public boolean hasFilename() { return hasFilename; }
    public java.lang.String getFilename() { return filename_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasAppId()) {
        output.writeInt32(2, getAppId());
      }
      if (hasFilename()) {
        output.writeString(3, getFilename());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getAppId());
      }
      if (hasFilename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFilename());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgUFSDownloadRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgUFSDownloadRequest result;
      
      // Construct using SteamMessages.CMsgUFSDownloadRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgUFSDownloadRequest();
        return builder;
      }
      
      protected SteamMessages.CMsgUFSDownloadRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgUFSDownloadRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgUFSDownloadRequest.getDescriptor();
      }
      
      public SteamMessages.CMsgUFSDownloadRequest getDefaultInstanceForType() {
        return SteamMessages.CMsgUFSDownloadRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgUFSDownloadRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgUFSDownloadRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgUFSDownloadRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgUFSDownloadRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgUFSDownloadRequest) {
          return mergeFrom((SteamMessages.CMsgUFSDownloadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgUFSDownloadRequest other) {
        if (other == SteamMessages.CMsgUFSDownloadRequest.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setAppId(input.readInt32());
              break;
            }
            case 26: {
              setFilename(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional int32 app_id = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional string filename = 3;
      public boolean hasFilename() {
        return result.hasFilename();
      }
      public java.lang.String getFilename() {
        return result.getFilename();
      }
      public Builder setFilename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFilename = true;
        result.filename_ = value;
        return this;
      }
      public Builder clearFilename() {
        result.hasFilename = false;
        result.filename_ = getDefaultInstance().getFilename();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgUFSDownloadRequest)
    }
    
    static {
      defaultInstance = new CMsgUFSDownloadRequest(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgUFSDownloadRequest)
  }
  
  public static final class CMsgUFSDownloadResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgUFSDownloadResponse.newBuilder() to construct.
    private CMsgUFSDownloadResponse() {
      initFields();
    }
    private CMsgUFSDownloadResponse(boolean noInit) {}
    
    private static final CMsgUFSDownloadResponse defaultInstance;
    public static CMsgUFSDownloadResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgUFSDownloadResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgUFSDownloadResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgUFSDownloadResponse_fieldAccessorTable;
    }
    
    public static final class FileData extends
        com.google.protobuf.GeneratedMessage {
      // Use FileData.newBuilder() to construct.
      private FileData() {
        initFields();
      }
      private FileData(boolean noInit) {}
      
      private static final FileData defaultInstance;
      public static FileData getDefaultInstance() {
        return defaultInstance;
      }
      
      public FileData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgUFSDownloadResponse_FileData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgUFSDownloadResponse_FileData_fieldAccessorTable;
      }
      
      // optional uint32 file_size = 1;
      public static final int FILE_SIZE_FIELD_NUMBER = 1;
      private boolean hasFileSize;
      private int fileSize_ = 0;
      public boolean hasFileSize() { return hasFileSize; }
      public int getFileSize() { return fileSize_; }
      
      // optional uint32 raw_file_size = 2;
      public static final int RAW_FILE_SIZE_FIELD_NUMBER = 2;
      private boolean hasRawFileSize;
      private int rawFileSize_ = 0;
      public boolean hasRawFileSize() { return hasRawFileSize; }
      public int getRawFileSize() { return rawFileSize_; }
      
      // optional bytes sha_file = 3;
      public static final int SHA_FILE_FIELD_NUMBER = 3;
      private boolean hasShaFile;
      private com.google.protobuf.ByteString shaFile_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasShaFile() { return hasShaFile; }
      public com.google.protobuf.ByteString getShaFile() { return shaFile_; }
      
      // optional uint64 timestamp = 4;
      public static final int TIMESTAMP_FIELD_NUMBER = 4;
      private boolean hasTimestamp;
      private long timestamp_ = 0L;
      public boolean hasTimestamp() { return hasTimestamp; }
      public long getTimestamp() { return timestamp_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasFileSize()) {
          output.writeUInt32(1, getFileSize());
        }
        if (hasRawFileSize()) {
          output.writeUInt32(2, getRawFileSize());
        }
        if (hasShaFile()) {
          output.writeBytes(3, getShaFile());
        }
        if (hasTimestamp()) {
          output.writeUInt64(4, getTimestamp());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasFileSize()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, getFileSize());
        }
        if (hasRawFileSize()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getRawFileSize());
        }
        if (hasShaFile()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getShaFile());
        }
        if (hasTimestamp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, getTimestamp());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgUFSDownloadResponse.FileData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgUFSDownloadResponse.FileData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgUFSDownloadResponse.FileData result;
        
        // Construct using SteamMessages.CMsgUFSDownloadResponse.FileData.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgUFSDownloadResponse.FileData();
          return builder;
        }
        
        protected SteamMessages.CMsgUFSDownloadResponse.FileData internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgUFSDownloadResponse.FileData();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgUFSDownloadResponse.FileData.getDescriptor();
        }
        
        public SteamMessages.CMsgUFSDownloadResponse.FileData getDefaultInstanceForType() {
          return SteamMessages.CMsgUFSDownloadResponse.FileData.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgUFSDownloadResponse.FileData build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgUFSDownloadResponse.FileData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgUFSDownloadResponse.FileData buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgUFSDownloadResponse.FileData returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgUFSDownloadResponse.FileData) {
            return mergeFrom((SteamMessages.CMsgUFSDownloadResponse.FileData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgUFSDownloadResponse.FileData other) {
          if (other == SteamMessages.CMsgUFSDownloadResponse.FileData.getDefaultInstance()) return this;
          if (other.hasFileSize()) {
            setFileSize(other.getFileSize());
          }
          if (other.hasRawFileSize()) {
            setRawFileSize(other.getRawFileSize());
          }
          if (other.hasShaFile()) {
            setShaFile(other.getShaFile());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setFileSize(input.readUInt32());
                break;
              }
              case 16: {
                setRawFileSize(input.readUInt32());
                break;
              }
              case 26: {
                setShaFile(input.readBytes());
                break;
              }
              case 32: {
                setTimestamp(input.readUInt64());
                break;
              }
            }
          }
        }
        
        
        // optional uint32 file_size = 1;
        public boolean hasFileSize() {
          return result.hasFileSize();
        }
        public int getFileSize() {
          return result.getFileSize();
        }
        public Builder setFileSize(int value) {
          result.hasFileSize = true;
          result.fileSize_ = value;
          return this;
        }
        public Builder clearFileSize() {
          result.hasFileSize = false;
          result.fileSize_ = 0;
          return this;
        }
        
        // optional uint32 raw_file_size = 2;
        public boolean hasRawFileSize() {
          return result.hasRawFileSize();
        }
        public int getRawFileSize() {
          return result.getRawFileSize();
        }
        public Builder setRawFileSize(int value) {
          result.hasRawFileSize = true;
          result.rawFileSize_ = value;
          return this;
        }
        public Builder clearRawFileSize() {
          result.hasRawFileSize = false;
          result.rawFileSize_ = 0;
          return this;
        }
        
        // optional bytes sha_file = 3;
        public boolean hasShaFile() {
          return result.hasShaFile();
        }
        public com.google.protobuf.ByteString getShaFile() {
          return result.getShaFile();
        }
        public Builder setShaFile(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasShaFile = true;
          result.shaFile_ = value;
          return this;
        }
        public Builder clearShaFile() {
          result.hasShaFile = false;
          result.shaFile_ = getDefaultInstance().getShaFile();
          return this;
        }
        
        // optional uint64 timestamp = 4;
        public boolean hasTimestamp() {
          return result.hasTimestamp();
        }
        public long getTimestamp() {
          return result.getTimestamp();
        }
        public Builder setTimestamp(long value) {
          result.hasTimestamp = true;
          result.timestamp_ = value;
          return this;
        }
        public Builder clearTimestamp() {
          result.hasTimestamp = false;
          result.timestamp_ = 0L;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgUFSDownloadResponse.FileData)
      }
      
      static {
        defaultInstance = new FileData(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgUFSDownloadResponse.FileData)
    }
    
    // optional uint32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional .CMsgUFSDownloadResponse.FileData file_data = 2;
    public static final int FILE_DATA_FIELD_NUMBER = 2;
    private boolean hasFileData;
    private SteamMessages.CMsgUFSDownloadResponse.FileData fileData_;
    public boolean hasFileData() { return hasFileData; }
    public SteamMessages.CMsgUFSDownloadResponse.FileData getFileData() { return fileData_; }
    
    private void initFields() {
      fileData_ = SteamMessages.CMsgUFSDownloadResponse.FileData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeUInt32(1, getEresult());
      }
      if (hasFileData()) {
        output.writeMessage(2, getFileData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getEresult());
      }
      if (hasFileData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFileData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgUFSDownloadResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgUFSDownloadResponse result;
      
      // Construct using SteamMessages.CMsgUFSDownloadResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgUFSDownloadResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgUFSDownloadResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgUFSDownloadResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgUFSDownloadResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgUFSDownloadResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgUFSDownloadResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgUFSDownloadResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgUFSDownloadResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgUFSDownloadResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgUFSDownloadResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgUFSDownloadResponse) {
          return mergeFrom((SteamMessages.CMsgUFSDownloadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgUFSDownloadResponse other) {
        if (other == SteamMessages.CMsgUFSDownloadResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasFileData()) {
          mergeFileData(other.getFileData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readUInt32());
              break;
            }
            case 18: {
              SteamMessages.CMsgUFSDownloadResponse.FileData.Builder subBuilder = SteamMessages.CMsgUFSDownloadResponse.FileData.newBuilder();
              if (hasFileData()) {
                subBuilder.mergeFrom(getFileData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFileData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional .CMsgUFSDownloadResponse.FileData file_data = 2;
      public boolean hasFileData() {
        return result.hasFileData();
      }
      public SteamMessages.CMsgUFSDownloadResponse.FileData getFileData() {
        return result.getFileData();
      }
      public Builder setFileData(SteamMessages.CMsgUFSDownloadResponse.FileData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFileData = true;
        result.fileData_ = value;
        return this;
      }
      public Builder setFileData(SteamMessages.CMsgUFSDownloadResponse.FileData.Builder builderForValue) {
        result.hasFileData = true;
        result.fileData_ = builderForValue.build();
        return this;
      }
      public Builder mergeFileData(SteamMessages.CMsgUFSDownloadResponse.FileData value) {
        if (result.hasFileData() &&
            result.fileData_ != SteamMessages.CMsgUFSDownloadResponse.FileData.getDefaultInstance()) {
          result.fileData_ =
            SteamMessages.CMsgUFSDownloadResponse.FileData.newBuilder(result.fileData_).mergeFrom(value).buildPartial();
        } else {
          result.fileData_ = value;
        }
        result.hasFileData = true;
        return this;
      }
      public Builder clearFileData() {
        result.hasFileData = false;
        result.fileData_ = SteamMessages.CMsgUFSDownloadResponse.FileData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgUFSDownloadResponse)
    }
    
    static {
      defaultInstance = new CMsgUFSDownloadResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgUFSDownloadResponse)
  }
  
  public static final class CMsgUFSDownloadChunk extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgUFSDownloadChunk.newBuilder() to construct.
    private CMsgUFSDownloadChunk() {
      initFields();
    }
    private CMsgUFSDownloadChunk(boolean noInit) {}
    
    private static final CMsgUFSDownloadChunk defaultInstance;
    public static CMsgUFSDownloadChunk getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgUFSDownloadChunk getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgUFSDownloadChunk_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgUFSDownloadChunk_fieldAccessorTable;
    }
    
    // optional uint32 offset = 1;
    public static final int OFFSET_FIELD_NUMBER = 1;
    private boolean hasOffset;
    private int offset_ = 0;
    public boolean hasOffset() { return hasOffset; }
    public int getOffset() { return offset_; }
    
    // optional bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOffset()) {
        output.writeUInt32(1, getOffset());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOffset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getOffset());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDownloadChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgUFSDownloadChunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgUFSDownloadChunk result;
      
      // Construct using SteamMessages.CMsgUFSDownloadChunk.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgUFSDownloadChunk();
        return builder;
      }
      
      protected SteamMessages.CMsgUFSDownloadChunk internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgUFSDownloadChunk();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgUFSDownloadChunk.getDescriptor();
      }
      
      public SteamMessages.CMsgUFSDownloadChunk getDefaultInstanceForType() {
        return SteamMessages.CMsgUFSDownloadChunk.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgUFSDownloadChunk build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgUFSDownloadChunk buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgUFSDownloadChunk buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgUFSDownloadChunk returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgUFSDownloadChunk) {
          return mergeFrom((SteamMessages.CMsgUFSDownloadChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgUFSDownloadChunk other) {
        if (other == SteamMessages.CMsgUFSDownloadChunk.getDefaultInstance()) return this;
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setOffset(input.readUInt32());
              break;
            }
            case 18: {
              setData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 offset = 1;
      public boolean hasOffset() {
        return result.hasOffset();
      }
      public int getOffset() {
        return result.getOffset();
      }
      public Builder setOffset(int value) {
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder clearOffset() {
        result.hasOffset = false;
        result.offset_ = 0;
        return this;
      }
      
      // optional bytes data = 2;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgUFSDownloadChunk)
    }
    
    static {
      defaultInstance = new CMsgUFSDownloadChunk(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgUFSDownloadChunk)
  }
  
  public static final class CMsgUFSDeleteFileRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgUFSDeleteFileRequest.newBuilder() to construct.
    private CMsgUFSDeleteFileRequest() {
      initFields();
    }
    private CMsgUFSDeleteFileRequest(boolean noInit) {}
    
    private static final CMsgUFSDeleteFileRequest defaultInstance;
    public static CMsgUFSDeleteFileRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgUFSDeleteFileRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgUFSDeleteFileRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgUFSDeleteFileRequest_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private boolean hasSteamId;
    private long steamId_ = 0L;
    public boolean hasSteamId() { return hasSteamId; }
    public long getSteamId() { return steamId_; }
    
    // optional int32 app_id = 2;
    public static final int APP_ID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional string filename = 3;
    public static final int FILENAME_FIELD_NUMBER = 3;
    private boolean hasFilename;
    private java.lang.String filename_ = "";
    public boolean hasFilename() { return hasFilename; }
    public java.lang.String getFilename() { return filename_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamId()) {
        output.writeFixed64(1, getSteamId());
      }
      if (hasAppId()) {
        output.writeInt32(2, getAppId());
      }
      if (hasFilename()) {
        output.writeString(3, getFilename());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamId());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getAppId());
      }
      if (hasFilename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFilename());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgUFSDeleteFileRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgUFSDeleteFileRequest result;
      
      // Construct using SteamMessages.CMsgUFSDeleteFileRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgUFSDeleteFileRequest();
        return builder;
      }
      
      protected SteamMessages.CMsgUFSDeleteFileRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgUFSDeleteFileRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgUFSDeleteFileRequest.getDescriptor();
      }
      
      public SteamMessages.CMsgUFSDeleteFileRequest getDefaultInstanceForType() {
        return SteamMessages.CMsgUFSDeleteFileRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgUFSDeleteFileRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgUFSDeleteFileRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgUFSDeleteFileRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgUFSDeleteFileRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgUFSDeleteFileRequest) {
          return mergeFrom((SteamMessages.CMsgUFSDeleteFileRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgUFSDeleteFileRequest other) {
        if (other == SteamMessages.CMsgUFSDeleteFileRequest.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamId(input.readFixed64());
              break;
            }
            case 16: {
              setAppId(input.readInt32());
              break;
            }
            case 26: {
              setFilename(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id = 1;
      public boolean hasSteamId() {
        return result.hasSteamId();
      }
      public long getSteamId() {
        return result.getSteamId();
      }
      public Builder setSteamId(long value) {
        result.hasSteamId = true;
        result.steamId_ = value;
        return this;
      }
      public Builder clearSteamId() {
        result.hasSteamId = false;
        result.steamId_ = 0L;
        return this;
      }
      
      // optional int32 app_id = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional string filename = 3;
      public boolean hasFilename() {
        return result.hasFilename();
      }
      public java.lang.String getFilename() {
        return result.getFilename();
      }
      public Builder setFilename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFilename = true;
        result.filename_ = value;
        return this;
      }
      public Builder clearFilename() {
        result.hasFilename = false;
        result.filename_ = getDefaultInstance().getFilename();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgUFSDeleteFileRequest)
    }
    
    static {
      defaultInstance = new CMsgUFSDeleteFileRequest(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgUFSDeleteFileRequest)
  }
  
  public static final class CMsgUFSDeleteFileResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgUFSDeleteFileResponse.newBuilder() to construct.
    private CMsgUFSDeleteFileResponse() {
      initFields();
    }
    private CMsgUFSDeleteFileResponse(boolean noInit) {}
    
    private static final CMsgUFSDeleteFileResponse defaultInstance;
    public static CMsgUFSDeleteFileResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgUFSDeleteFileResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgUFSDeleteFileResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgUFSDeleteFileResponse_fieldAccessorTable;
    }
    
    // optional uint32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEresult()) {
        output.writeUInt32(1, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgUFSDeleteFileResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgUFSDeleteFileResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgUFSDeleteFileResponse result;
      
      // Construct using SteamMessages.CMsgUFSDeleteFileResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgUFSDeleteFileResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgUFSDeleteFileResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgUFSDeleteFileResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgUFSDeleteFileResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgUFSDeleteFileResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgUFSDeleteFileResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgUFSDeleteFileResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgUFSDeleteFileResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgUFSDeleteFileResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgUFSDeleteFileResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgUFSDeleteFileResponse) {
          return mergeFrom((SteamMessages.CMsgUFSDeleteFileResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgUFSDeleteFileResponse other) {
        if (other == SteamMessages.CMsgUFSDeleteFileResponse.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setEresult(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 eresult = 1 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgUFSDeleteFileResponse)
    }
    
    static {
      defaultInstance = new CMsgUFSDeleteFileResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgUFSDeleteFileResponse)
  }
  
  public static final class CMsgClientAccountInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientAccountInfo.newBuilder() to construct.
    private CMsgClientAccountInfo() {
      initFields();
    }
    private CMsgClientAccountInfo(boolean noInit) {}
    
    private static final CMsgClientAccountInfo defaultInstance;
    public static CMsgClientAccountInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientAccountInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientAccountInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientAccountInfo_fieldAccessorTable;
    }
    
    // optional string persona_name = 1;
    public static final int PERSONA_NAME_FIELD_NUMBER = 1;
    private boolean hasPersonaName;
    private java.lang.String personaName_ = "";
    public boolean hasPersonaName() { return hasPersonaName; }
    public java.lang.String getPersonaName() { return personaName_; }
    
    // optional string ip_country = 2;
    public static final int IP_COUNTRY_FIELD_NUMBER = 2;
    private boolean hasIpCountry;
    private java.lang.String ipCountry_ = "";
    public boolean hasIpCountry() { return hasIpCountry; }
    public java.lang.String getIpCountry() { return ipCountry_; }
    
    // optional bytes salt_password = 3;
    public static final int SALT_PASSWORD_FIELD_NUMBER = 3;
    private boolean hasSaltPassword;
    private com.google.protobuf.ByteString saltPassword_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasSaltPassword() { return hasSaltPassword; }
    public com.google.protobuf.ByteString getSaltPassword() { return saltPassword_; }
    
    // optional bytes sha_digest_Password = 4;
    public static final int SHA_DIGEST_PASSWORD_FIELD_NUMBER = 4;
    private boolean hasShaDigestPassword;
    private com.google.protobuf.ByteString shaDigestPassword_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasShaDigestPassword() { return hasShaDigestPassword; }
    public com.google.protobuf.ByteString getShaDigestPassword() { return shaDigestPassword_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPersonaName()) {
        output.writeString(1, getPersonaName());
      }
      if (hasIpCountry()) {
        output.writeString(2, getIpCountry());
      }
      if (hasSaltPassword()) {
        output.writeBytes(3, getSaltPassword());
      }
      if (hasShaDigestPassword()) {
        output.writeBytes(4, getShaDigestPassword());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPersonaName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPersonaName());
      }
      if (hasIpCountry()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getIpCountry());
      }
      if (hasSaltPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSaltPassword());
      }
      if (hasShaDigestPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getShaDigestPassword());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAccountInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAccountInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientAccountInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientAccountInfo result;
      
      // Construct using SteamMessages.CMsgClientAccountInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientAccountInfo();
        return builder;
      }
      
      protected SteamMessages.CMsgClientAccountInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientAccountInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientAccountInfo.getDescriptor();
      }
      
      public SteamMessages.CMsgClientAccountInfo getDefaultInstanceForType() {
        return SteamMessages.CMsgClientAccountInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientAccountInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientAccountInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientAccountInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientAccountInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientAccountInfo) {
          return mergeFrom((SteamMessages.CMsgClientAccountInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientAccountInfo other) {
        if (other == SteamMessages.CMsgClientAccountInfo.getDefaultInstance()) return this;
        if (other.hasPersonaName()) {
          setPersonaName(other.getPersonaName());
        }
        if (other.hasIpCountry()) {
          setIpCountry(other.getIpCountry());
        }
        if (other.hasSaltPassword()) {
          setSaltPassword(other.getSaltPassword());
        }
        if (other.hasShaDigestPassword()) {
          setShaDigestPassword(other.getShaDigestPassword());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setPersonaName(input.readString());
              break;
            }
            case 18: {
              setIpCountry(input.readString());
              break;
            }
            case 26: {
              setSaltPassword(input.readBytes());
              break;
            }
            case 34: {
              setShaDigestPassword(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional string persona_name = 1;
      public boolean hasPersonaName() {
        return result.hasPersonaName();
      }
      public java.lang.String getPersonaName() {
        return result.getPersonaName();
      }
      public Builder setPersonaName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
        result.personaName_ = value;
        return this;
      }
      public Builder clearPersonaName() {
        result.hasPersonaName = false;
        result.personaName_ = getDefaultInstance().getPersonaName();
        return this;
      }
      
      // optional string ip_country = 2;
      public boolean hasIpCountry() {
        return result.hasIpCountry();
      }
      public java.lang.String getIpCountry() {
        return result.getIpCountry();
      }
      public Builder setIpCountry(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIpCountry = true;
        result.ipCountry_ = value;
        return this;
      }
      public Builder clearIpCountry() {
        result.hasIpCountry = false;
        result.ipCountry_ = getDefaultInstance().getIpCountry();
        return this;
      }
      
      // optional bytes salt_password = 3;
      public boolean hasSaltPassword() {
        return result.hasSaltPassword();
      }
      public com.google.protobuf.ByteString getSaltPassword() {
        return result.getSaltPassword();
      }
      public Builder setSaltPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSaltPassword = true;
        result.saltPassword_ = value;
        return this;
      }
      public Builder clearSaltPassword() {
        result.hasSaltPassword = false;
        result.saltPassword_ = getDefaultInstance().getSaltPassword();
        return this;
      }
      
      // optional bytes sha_digest_Password = 4;
      public boolean hasShaDigestPassword() {
        return result.hasShaDigestPassword();
      }
      public com.google.protobuf.ByteString getShaDigestPassword() {
        return result.getShaDigestPassword();
      }
      public Builder setShaDigestPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasShaDigestPassword = true;
        result.shaDigestPassword_ = value;
        return this;
      }
      public Builder clearShaDigestPassword() {
        result.hasShaDigestPassword = false;
        result.shaDigestPassword_ = getDefaultInstance().getShaDigestPassword();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientAccountInfo)
    }
    
    static {
      defaultInstance = new CMsgClientAccountInfo(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientAccountInfo)
  }
  
  public static final class CMsgClientAppMinutesPlayedData extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientAppMinutesPlayedData.newBuilder() to construct.
    private CMsgClientAppMinutesPlayedData() {
      initFields();
    }
    private CMsgClientAppMinutesPlayedData(boolean noInit) {}
    
    private static final CMsgClientAppMinutesPlayedData defaultInstance;
    public static CMsgClientAppMinutesPlayedData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientAppMinutesPlayedData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientAppMinutesPlayedData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientAppMinutesPlayedData_fieldAccessorTable;
    }
    
    public static final class AppMinutesPlayedData extends
        com.google.protobuf.GeneratedMessage {
      // Use AppMinutesPlayedData.newBuilder() to construct.
      private AppMinutesPlayedData() {
        initFields();
      }
      private AppMinutesPlayedData(boolean noInit) {}
      
      private static final AppMinutesPlayedData defaultInstance;
      public static AppMinutesPlayedData getDefaultInstance() {
        return defaultInstance;
      }
      
      public AppMinutesPlayedData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_fieldAccessorTable;
      }
      
      // optional uint32 app_id = 1;
      public static final int APP_ID_FIELD_NUMBER = 1;
      private boolean hasAppId;
      private int appId_ = 0;
      public boolean hasAppId() { return hasAppId; }
      public int getAppId() { return appId_; }
      
      // optional int32 forever = 2;
      public static final int FOREVER_FIELD_NUMBER = 2;
      private boolean hasForever;
      private int forever_ = 0;
      public boolean hasForever() { return hasForever; }
      public int getForever() { return forever_; }
      
      // optional int32 last_two_weeks = 3;
      public static final int LAST_TWO_WEEKS_FIELD_NUMBER = 3;
      private boolean hasLastTwoWeeks;
      private int lastTwoWeeks_ = 0;
      public boolean hasLastTwoWeeks() { return hasLastTwoWeeks; }
      public int getLastTwoWeeks() { return lastTwoWeeks_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasAppId()) {
          output.writeUInt32(1, getAppId());
        }
        if (hasForever()) {
          output.writeInt32(2, getForever());
        }
        if (hasLastTwoWeeks()) {
          output.writeInt32(3, getLastTwoWeeks());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasAppId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, getAppId());
        }
        if (hasForever()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getForever());
        }
        if (hasLastTwoWeeks()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getLastTwoWeeks());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData result;
        
        // Construct using SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData();
          return builder;
        }
        
        protected SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.getDescriptor();
        }
        
        public SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData getDefaultInstanceForType() {
          return SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData) {
            return mergeFrom((SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData other) {
          if (other == SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.getDefaultInstance()) return this;
          if (other.hasAppId()) {
            setAppId(other.getAppId());
          }
          if (other.hasForever()) {
            setForever(other.getForever());
          }
          if (other.hasLastTwoWeeks()) {
            setLastTwoWeeks(other.getLastTwoWeeks());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setAppId(input.readUInt32());
                break;
              }
              case 16: {
                setForever(input.readInt32());
                break;
              }
              case 24: {
                setLastTwoWeeks(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // optional uint32 app_id = 1;
        public boolean hasAppId() {
          return result.hasAppId();
        }
        public int getAppId() {
          return result.getAppId();
        }
        public Builder setAppId(int value) {
          result.hasAppId = true;
          result.appId_ = value;
          return this;
        }
        public Builder clearAppId() {
          result.hasAppId = false;
          result.appId_ = 0;
          return this;
        }
        
        // optional int32 forever = 2;
        public boolean hasForever() {
          return result.hasForever();
        }
        public int getForever() {
          return result.getForever();
        }
        public Builder setForever(int value) {
          result.hasForever = true;
          result.forever_ = value;
          return this;
        }
        public Builder clearForever() {
          result.hasForever = false;
          result.forever_ = 0;
          return this;
        }
        
        // optional int32 last_two_weeks = 3;
        public boolean hasLastTwoWeeks() {
          return result.hasLastTwoWeeks();
        }
        public int getLastTwoWeeks() {
          return result.getLastTwoWeeks();
        }
        public Builder setLastTwoWeeks(int value) {
          result.hasLastTwoWeeks = true;
          result.lastTwoWeeks_ = value;
          return this;
        }
        public Builder clearLastTwoWeeks() {
          result.hasLastTwoWeeks = false;
          result.lastTwoWeeks_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
      }
      
      static {
        defaultInstance = new AppMinutesPlayedData(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientAppMinutesPlayedData.AppMinutesPlayedData)
    }
    
    // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
    public static final int MINUTES_PLAYED_FIELD_NUMBER = 1;
    private java.util.List<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData> minutesPlayed_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData> getMinutesPlayedList() {
      return minutesPlayed_;
    }
    public int getMinutesPlayedCount() { return minutesPlayed_.size(); }
    public SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData getMinutesPlayed(int index) {
      return minutesPlayed_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData element : getMinutesPlayedList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData element : getMinutesPlayedList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientAppMinutesPlayedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientAppMinutesPlayedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientAppMinutesPlayedData result;
      
      // Construct using SteamMessages.CMsgClientAppMinutesPlayedData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientAppMinutesPlayedData();
        return builder;
      }
      
      protected SteamMessages.CMsgClientAppMinutesPlayedData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientAppMinutesPlayedData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientAppMinutesPlayedData.getDescriptor();
      }
      
      public SteamMessages.CMsgClientAppMinutesPlayedData getDefaultInstanceForType() {
        return SteamMessages.CMsgClientAppMinutesPlayedData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientAppMinutesPlayedData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientAppMinutesPlayedData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientAppMinutesPlayedData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.minutesPlayed_ != java.util.Collections.EMPTY_LIST) {
          result.minutesPlayed_ =
            java.util.Collections.unmodifiableList(result.minutesPlayed_);
        }
        SteamMessages.CMsgClientAppMinutesPlayedData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientAppMinutesPlayedData) {
          return mergeFrom((SteamMessages.CMsgClientAppMinutesPlayedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientAppMinutesPlayedData other) {
        if (other == SteamMessages.CMsgClientAppMinutesPlayedData.getDefaultInstance()) return this;
        if (!other.minutesPlayed_.isEmpty()) {
          if (result.minutesPlayed_.isEmpty()) {
            result.minutesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData>();
          }
          result.minutesPlayed_.addAll(other.minutesPlayed_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.Builder subBuilder = SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMinutesPlayed(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .CMsgClientAppMinutesPlayedData.AppMinutesPlayedData minutes_played = 1;
      public java.util.List<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData> getMinutesPlayedList() {
        return java.util.Collections.unmodifiableList(result.minutesPlayed_);
      }
      public int getMinutesPlayedCount() {
        return result.getMinutesPlayedCount();
      }
      public SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData getMinutesPlayed(int index) {
        return result.getMinutesPlayed(index);
      }
      public Builder setMinutesPlayed(int index, SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.minutesPlayed_.set(index, value);
        return this;
      }
      public Builder setMinutesPlayed(int index, SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.Builder builderForValue) {
        result.minutesPlayed_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMinutesPlayed(SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.minutesPlayed_.isEmpty()) {
          result.minutesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData>();
        }
        result.minutesPlayed_.add(value);
        return this;
      }
      public Builder addMinutesPlayed(SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.Builder builderForValue) {
        if (result.minutesPlayed_.isEmpty()) {
          result.minutesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData>();
        }
        result.minutesPlayed_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMinutesPlayed(
          java.lang.Iterable<? extends SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData> values) {
        if (result.minutesPlayed_.isEmpty()) {
          result.minutesPlayed_ = new java.util.ArrayList<SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData>();
        }
        super.addAll(values, result.minutesPlayed_);
        return this;
      }
      public Builder clearMinutesPlayed() {
        result.minutesPlayed_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientAppMinutesPlayedData)
    }
    
    static {
      defaultInstance = new CMsgClientAppMinutesPlayedData(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientAppMinutesPlayedData)
  }
  
  public static final class CMsgAMFindAccounts extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMFindAccounts.newBuilder() to construct.
    private CMsgAMFindAccounts() {
      initFields();
    }
    private CMsgAMFindAccounts(boolean noInit) {}
    
    private static final CMsgAMFindAccounts defaultInstance;
    public static CMsgAMFindAccounts getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMFindAccounts getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMFindAccounts_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMFindAccounts_fieldAccessorTable;
    }
    
    // optional uint32 search_type = 1;
    public static final int SEARCH_TYPE_FIELD_NUMBER = 1;
    private boolean hasSearchType;
    private int searchType_ = 0;
    public boolean hasSearchType() { return hasSearchType; }
    public int getSearchType() { return searchType_; }
    
    // optional string search_string = 2;
    public static final int SEARCH_STRING_FIELD_NUMBER = 2;
    private boolean hasSearchString;
    private java.lang.String searchString_ = "";
    public boolean hasSearchString() { return hasSearchString; }
    public java.lang.String getSearchString() { return searchString_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSearchType()) {
        output.writeUInt32(1, getSearchType());
      }
      if (hasSearchString()) {
        output.writeString(2, getSearchString());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSearchType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSearchType());
      }
      if (hasSearchString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSearchString());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMFindAccounts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccounts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMFindAccounts prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMFindAccounts result;
      
      // Construct using SteamMessages.CMsgAMFindAccounts.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMFindAccounts();
        return builder;
      }
      
      protected SteamMessages.CMsgAMFindAccounts internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMFindAccounts();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMFindAccounts.getDescriptor();
      }
      
      public SteamMessages.CMsgAMFindAccounts getDefaultInstanceForType() {
        return SteamMessages.CMsgAMFindAccounts.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMFindAccounts build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMFindAccounts buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMFindAccounts buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgAMFindAccounts returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMFindAccounts) {
          return mergeFrom((SteamMessages.CMsgAMFindAccounts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMFindAccounts other) {
        if (other == SteamMessages.CMsgAMFindAccounts.getDefaultInstance()) return this;
        if (other.hasSearchType()) {
          setSearchType(other.getSearchType());
        }
        if (other.hasSearchString()) {
          setSearchString(other.getSearchString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSearchType(input.readUInt32());
              break;
            }
            case 18: {
              setSearchString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 search_type = 1;
      public boolean hasSearchType() {
        return result.hasSearchType();
      }
      public int getSearchType() {
        return result.getSearchType();
      }
      public Builder setSearchType(int value) {
        result.hasSearchType = true;
        result.searchType_ = value;
        return this;
      }
      public Builder clearSearchType() {
        result.hasSearchType = false;
        result.searchType_ = 0;
        return this;
      }
      
      // optional string search_string = 2;
      public boolean hasSearchString() {
        return result.hasSearchString();
      }
      public java.lang.String getSearchString() {
        return result.getSearchString();
      }
      public Builder setSearchString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSearchString = true;
        result.searchString_ = value;
        return this;
      }
      public Builder clearSearchString() {
        result.hasSearchString = false;
        result.searchString_ = getDefaultInstance().getSearchString();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMFindAccounts)
    }
    
    static {
      defaultInstance = new CMsgAMFindAccounts(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMFindAccounts)
  }
  
  public static final class CMsgAMFindAccountsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMFindAccountsResponse.newBuilder() to construct.
    private CMsgAMFindAccountsResponse() {
      initFields();
    }
    private CMsgAMFindAccountsResponse(boolean noInit) {}
    
    private static final CMsgAMFindAccountsResponse defaultInstance;
    public static CMsgAMFindAccountsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMFindAccountsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMFindAccountsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMFindAccountsResponse_fieldAccessorTable;
    }
    
    // repeated fixed64 steam_id = 1;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> steamId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getSteamIdList() {
      return steamId_;
    }
    public int getSteamIdCount() { return steamId_.size(); }
    public long getSteamId(int index) {
      return steamId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (long element : getSteamIdList()) {
        output.writeFixed64(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getSteamIdList().size();
        size += dataSize;
        size += 1 * getSteamIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMFindAccountsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMFindAccountsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMFindAccountsResponse result;
      
      // Construct using SteamMessages.CMsgAMFindAccountsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMFindAccountsResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgAMFindAccountsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMFindAccountsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMFindAccountsResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgAMFindAccountsResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgAMFindAccountsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMFindAccountsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMFindAccountsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMFindAccountsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.steamId_ != java.util.Collections.EMPTY_LIST) {
          result.steamId_ =
            java.util.Collections.unmodifiableList(result.steamId_);
        }
        SteamMessages.CMsgAMFindAccountsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMFindAccountsResponse) {
          return mergeFrom((SteamMessages.CMsgAMFindAccountsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMFindAccountsResponse other) {
        if (other == SteamMessages.CMsgAMFindAccountsResponse.getDefaultInstance()) return this;
        if (!other.steamId_.isEmpty()) {
          if (result.steamId_.isEmpty()) {
            result.steamId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.steamId_.addAll(other.steamId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addSteamId(input.readFixed64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSteamId(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated fixed64 steam_id = 1;
      public java.util.List<java.lang.Long> getSteamIdList() {
        return java.util.Collections.unmodifiableList(result.steamId_);
      }
      public int getSteamIdCount() {
        return result.getSteamIdCount();
      }
      public long getSteamId(int index) {
        return result.getSteamId(index);
      }
      public Builder setSteamId(int index, long value) {
        result.steamId_.set(index, value);
        return this;
      }
      public Builder addSteamId(long value) {
        if (result.steamId_.isEmpty()) {
          result.steamId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.steamId_.add(value);
        return this;
      }
      public Builder addAllSteamId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.steamId_.isEmpty()) {
          result.steamId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.steamId_);
        return this;
      }
      public Builder clearSteamId() {
        result.steamId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMFindAccountsResponse)
    }
    
    static {
      defaultInstance = new CMsgAMFindAccountsResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMFindAccountsResponse)
  }
  
  public static final class CMsgClientIsLimitedAccount extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientIsLimitedAccount.newBuilder() to construct.
    private CMsgClientIsLimitedAccount() {
      initFields();
    }
    private CMsgClientIsLimitedAccount(boolean noInit) {}
    
    private static final CMsgClientIsLimitedAccount defaultInstance;
    public static CMsgClientIsLimitedAccount getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientIsLimitedAccount getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientIsLimitedAccount_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientIsLimitedAccount_fieldAccessorTable;
    }
    
    // optional bool bis_limited_account = 1;
    public static final int BIS_LIMITED_ACCOUNT_FIELD_NUMBER = 1;
    private boolean hasBisLimitedAccount;
    private boolean bisLimitedAccount_ = false;
    public boolean hasBisLimitedAccount() { return hasBisLimitedAccount; }
    public boolean getBisLimitedAccount() { return bisLimitedAccount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBisLimitedAccount()) {
        output.writeBool(1, getBisLimitedAccount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBisLimitedAccount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getBisLimitedAccount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientIsLimitedAccount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientIsLimitedAccount prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientIsLimitedAccount result;
      
      // Construct using SteamMessages.CMsgClientIsLimitedAccount.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientIsLimitedAccount();
        return builder;
      }
      
      protected SteamMessages.CMsgClientIsLimitedAccount internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientIsLimitedAccount();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientIsLimitedAccount.getDescriptor();
      }
      
      public SteamMessages.CMsgClientIsLimitedAccount getDefaultInstanceForType() {
        return SteamMessages.CMsgClientIsLimitedAccount.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientIsLimitedAccount build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientIsLimitedAccount buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientIsLimitedAccount buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientIsLimitedAccount returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientIsLimitedAccount) {
          return mergeFrom((SteamMessages.CMsgClientIsLimitedAccount)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientIsLimitedAccount other) {
        if (other == SteamMessages.CMsgClientIsLimitedAccount.getDefaultInstance()) return this;
        if (other.hasBisLimitedAccount()) {
          setBisLimitedAccount(other.getBisLimitedAccount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setBisLimitedAccount(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional bool bis_limited_account = 1;
      public boolean hasBisLimitedAccount() {
        return result.hasBisLimitedAccount();
      }
      public boolean getBisLimitedAccount() {
        return result.getBisLimitedAccount();
      }
      public Builder setBisLimitedAccount(boolean value) {
        result.hasBisLimitedAccount = true;
        result.bisLimitedAccount_ = value;
        return this;
      }
      public Builder clearBisLimitedAccount() {
        result.hasBisLimitedAccount = false;
        result.bisLimitedAccount_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientIsLimitedAccount)
    }
    
    static {
      defaultInstance = new CMsgClientIsLimitedAccount(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientIsLimitedAccount)
  }
  
  public static final class CMsgClientRequestFriendData extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientRequestFriendData.newBuilder() to construct.
    private CMsgClientRequestFriendData() {
      initFields();
    }
    private CMsgClientRequestFriendData(boolean noInit) {}
    
    private static final CMsgClientRequestFriendData defaultInstance;
    public static CMsgClientRequestFriendData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientRequestFriendData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientRequestFriendData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientRequestFriendData_fieldAccessorTable;
    }
    
    // optional uint32 persona_state_requested = 1;
    public static final int PERSONA_STATE_REQUESTED_FIELD_NUMBER = 1;
    private boolean hasPersonaStateRequested;
    private int personaStateRequested_ = 0;
    public boolean hasPersonaStateRequested() { return hasPersonaStateRequested; }
    public int getPersonaStateRequested() { return personaStateRequested_; }
    
    // repeated fixed64 friends = 2;
    public static final int FRIENDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> friends_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getFriendsList() {
      return friends_;
    }
    public int getFriendsCount() { return friends_.size(); }
    public long getFriends(int index) {
      return friends_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPersonaStateRequested()) {
        output.writeUInt32(1, getPersonaStateRequested());
      }
      for (long element : getFriendsList()) {
        output.writeFixed64(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPersonaStateRequested()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getPersonaStateRequested());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFriendsList().size();
        size += dataSize;
        size += 1 * getFriendsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestFriendData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestFriendData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientRequestFriendData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientRequestFriendData result;
      
      // Construct using SteamMessages.CMsgClientRequestFriendData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientRequestFriendData();
        return builder;
      }
      
      protected SteamMessages.CMsgClientRequestFriendData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientRequestFriendData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientRequestFriendData.getDescriptor();
      }
      
      public SteamMessages.CMsgClientRequestFriendData getDefaultInstanceForType() {
        return SteamMessages.CMsgClientRequestFriendData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientRequestFriendData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientRequestFriendData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientRequestFriendData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.friends_ != java.util.Collections.EMPTY_LIST) {
          result.friends_ =
            java.util.Collections.unmodifiableList(result.friends_);
        }
        SteamMessages.CMsgClientRequestFriendData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientRequestFriendData) {
          return mergeFrom((SteamMessages.CMsgClientRequestFriendData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientRequestFriendData other) {
        if (other == SteamMessages.CMsgClientRequestFriendData.getDefaultInstance()) return this;
        if (other.hasPersonaStateRequested()) {
          setPersonaStateRequested(other.getPersonaStateRequested());
        }
        if (!other.friends_.isEmpty()) {
          if (result.friends_.isEmpty()) {
            result.friends_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.friends_.addAll(other.friends_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPersonaStateRequested(input.readUInt32());
              break;
            }
            case 17: {
              addFriends(input.readFixed64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFriends(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional uint32 persona_state_requested = 1;
      public boolean hasPersonaStateRequested() {
        return result.hasPersonaStateRequested();
      }
      public int getPersonaStateRequested() {
        return result.getPersonaStateRequested();
      }
      public Builder setPersonaStateRequested(int value) {
        result.hasPersonaStateRequested = true;
        result.personaStateRequested_ = value;
        return this;
      }
      public Builder clearPersonaStateRequested() {
        result.hasPersonaStateRequested = false;
        result.personaStateRequested_ = 0;
        return this;
      }
      
      // repeated fixed64 friends = 2;
      public java.util.List<java.lang.Long> getFriendsList() {
        return java.util.Collections.unmodifiableList(result.friends_);
      }
      public int getFriendsCount() {
        return result.getFriendsCount();
      }
      public long getFriends(int index) {
        return result.getFriends(index);
      }
      public Builder setFriends(int index, long value) {
        result.friends_.set(index, value);
        return this;
      }
      public Builder addFriends(long value) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.friends_.add(value);
        return this;
      }
      public Builder addAllFriends(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.friends_);
        return this;
      }
      public Builder clearFriends() {
        result.friends_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientRequestFriendData)
    }
    
    static {
      defaultInstance = new CMsgClientRequestFriendData(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientRequestFriendData)
  }
  
  public static final class CMsgClientPersonaState extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientPersonaState.newBuilder() to construct.
    private CMsgClientPersonaState() {
      initFields();
    }
    private CMsgClientPersonaState(boolean noInit) {}
    
    private static final CMsgClientPersonaState defaultInstance;
    public static CMsgClientPersonaState getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientPersonaState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientPersonaState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientPersonaState_fieldAccessorTable;
    }
    
    public static final class Friend extends
        com.google.protobuf.GeneratedMessage {
      // Use Friend.newBuilder() to construct.
      private Friend() {
        initFields();
      }
      private Friend(boolean noInit) {}
      
      private static final Friend defaultInstance;
      public static Friend getDefaultInstance() {
        return defaultInstance;
      }
      
      public Friend getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientPersonaState_Friend_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientPersonaState_Friend_fieldAccessorTable;
      }
      
      // optional fixed64 friendid = 1;
      public static final int FRIENDID_FIELD_NUMBER = 1;
      private boolean hasFriendid;
      private long friendid_ = 0L;
      public boolean hasFriendid() { return hasFriendid; }
      public long getFriendid() { return friendid_; }
      
      // optional uint32 persona_state = 2;
      public static final int PERSONA_STATE_FIELD_NUMBER = 2;
      private boolean hasPersonaState;
      private int personaState_ = 0;
      public boolean hasPersonaState() { return hasPersonaState; }
      public int getPersonaState() { return personaState_; }
      
      // optional uint32 game_played_app_id = 3;
      public static final int GAME_PLAYED_APP_ID_FIELD_NUMBER = 3;
      private boolean hasGamePlayedAppId;
      private int gamePlayedAppId_ = 0;
      public boolean hasGamePlayedAppId() { return hasGamePlayedAppId; }
      public int getGamePlayedAppId() { return gamePlayedAppId_; }
      
      // optional uint32 game_server_ip = 4;
      public static final int GAME_SERVER_IP_FIELD_NUMBER = 4;
      private boolean hasGameServerIp;
      private int gameServerIp_ = 0;
      public boolean hasGameServerIp() { return hasGameServerIp; }
      public int getGameServerIp() { return gameServerIp_; }
      
      // optional uint32 game_server_port = 5;
      public static final int GAME_SERVER_PORT_FIELD_NUMBER = 5;
      private boolean hasGameServerPort;
      private int gameServerPort_ = 0;
      public boolean hasGameServerPort() { return hasGameServerPort; }
      public int getGameServerPort() { return gameServerPort_; }
      
      // optional string player_name = 15;
      public static final int PLAYER_NAME_FIELD_NUMBER = 15;
      private boolean hasPlayerName;
      private java.lang.String playerName_ = "";
      public boolean hasPlayerName() { return hasPlayerName; }
      public java.lang.String getPlayerName() { return playerName_; }
      
      // optional uint32 query_port = 20;
      public static final int QUERY_PORT_FIELD_NUMBER = 20;
      private boolean hasQueryPort;
      private int queryPort_ = 0;
      public boolean hasQueryPort() { return hasQueryPort; }
      public int getQueryPort() { return queryPort_; }
      
      // optional fixed64 steamid_source = 25;
      public static final int STEAMID_SOURCE_FIELD_NUMBER = 25;
      private boolean hasSteamidSource;
      private long steamidSource_ = 0L;
      public boolean hasSteamidSource() { return hasSteamidSource; }
      public long getSteamidSource() { return steamidSource_; }
      
      // optional uint32 cm_ip = 30;
      public static final int CM_IP_FIELD_NUMBER = 30;
      private boolean hasCmIp;
      private int cmIp_ = 0;
      public boolean hasCmIp() { return hasCmIp; }
      public int getCmIp() { return cmIp_; }
      
      // optional bytes avatar_hash = 31;
      public static final int AVATAR_HASH_FIELD_NUMBER = 31;
      private boolean hasAvatarHash;
      private com.google.protobuf.ByteString avatarHash_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasAvatarHash() { return hasAvatarHash; }
      public com.google.protobuf.ByteString getAvatarHash() { return avatarHash_; }
      
      // optional bytes chat_metadata = 40;
      public static final int CHAT_METADATA_FIELD_NUMBER = 40;
      private boolean hasChatMetadata;
      private com.google.protobuf.ByteString chatMetadata_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasChatMetadata() { return hasChatMetadata; }
      public com.google.protobuf.ByteString getChatMetadata() { return chatMetadata_; }
      
      // optional uint32 last_logoff = 45;
      public static final int LAST_LOGOFF_FIELD_NUMBER = 45;
      private boolean hasLastLogoff;
      private int lastLogoff_ = 0;
      public boolean hasLastLogoff() { return hasLastLogoff; }
      public int getLastLogoff() { return lastLogoff_; }
      
      // optional uint32 last_logon = 46;
      public static final int LAST_LOGON_FIELD_NUMBER = 46;
      private boolean hasLastLogon;
      private int lastLogon_ = 0;
      public boolean hasLastLogon() { return hasLastLogon; }
      public int getLastLogon() { return lastLogon_; }
      
      // optional uint32 clan_rank = 50;
      public static final int CLAN_RANK_FIELD_NUMBER = 50;
      private boolean hasClanRank;
      private int clanRank_ = 0;
      public boolean hasClanRank() { return hasClanRank; }
      public int getClanRank() { return clanRank_; }
      
      // optional string game_name = 55;
      public static final int GAME_NAME_FIELD_NUMBER = 55;
      private boolean hasGameName;
      private java.lang.String gameName_ = "";
      public boolean hasGameName() { return hasGameName; }
      public java.lang.String getGameName() { return gameName_; }
      
      // optional fixed64 gameid = 56;
      public static final int GAMEID_FIELD_NUMBER = 56;
      private boolean hasGameid;
      private long gameid_ = 0L;
      public boolean hasGameid() { return hasGameid; }
      public long getGameid() { return gameid_; }
      
      // optional bytes game_data_blob = 60;
      public static final int GAME_DATA_BLOB_FIELD_NUMBER = 60;
      private boolean hasGameDataBlob;
      private com.google.protobuf.ByteString gameDataBlob_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasGameDataBlob() { return hasGameDataBlob; }
      public com.google.protobuf.ByteString getGameDataBlob() { return gameDataBlob_; }
      
      // optional string clan_tag = 65;
      public static final int CLAN_TAG_FIELD_NUMBER = 65;
      private boolean hasClanTag;
      private java.lang.String clanTag_ = "";
      public boolean hasClanTag() { return hasClanTag; }
      public java.lang.String getClanTag() { return clanTag_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasFriendid()) {
          output.writeFixed64(1, getFriendid());
        }
        if (hasPersonaState()) {
          output.writeUInt32(2, getPersonaState());
        }
        if (hasGamePlayedAppId()) {
          output.writeUInt32(3, getGamePlayedAppId());
        }
        if (hasGameServerIp()) {
          output.writeUInt32(4, getGameServerIp());
        }
        if (hasGameServerPort()) {
          output.writeUInt32(5, getGameServerPort());
        }
        if (hasPlayerName()) {
          output.writeString(15, getPlayerName());
        }
        if (hasQueryPort()) {
          output.writeUInt32(20, getQueryPort());
        }
        if (hasSteamidSource()) {
          output.writeFixed64(25, getSteamidSource());
        }
        if (hasCmIp()) {
          output.writeUInt32(30, getCmIp());
        }
        if (hasAvatarHash()) {
          output.writeBytes(31, getAvatarHash());
        }
        if (hasChatMetadata()) {
          output.writeBytes(40, getChatMetadata());
        }
        if (hasLastLogoff()) {
          output.writeUInt32(45, getLastLogoff());
        }
        if (hasLastLogon()) {
          output.writeUInt32(46, getLastLogon());
        }
        if (hasClanRank()) {
          output.writeUInt32(50, getClanRank());
        }
        if (hasGameName()) {
          output.writeString(55, getGameName());
        }
        if (hasGameid()) {
          output.writeFixed64(56, getGameid());
        }
        if (hasGameDataBlob()) {
          output.writeBytes(60, getGameDataBlob());
        }
        if (hasClanTag()) {
          output.writeString(65, getClanTag());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasFriendid()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getFriendid());
        }
        if (hasPersonaState()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getPersonaState());
        }
        if (hasGamePlayedAppId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, getGamePlayedAppId());
        }
        if (hasGameServerIp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, getGameServerIp());
        }
        if (hasGameServerPort()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, getGameServerPort());
        }
        if (hasPlayerName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(15, getPlayerName());
        }
        if (hasQueryPort()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(20, getQueryPort());
        }
        if (hasSteamidSource()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(25, getSteamidSource());
        }
        if (hasCmIp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(30, getCmIp());
        }
        if (hasAvatarHash()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(31, getAvatarHash());
        }
        if (hasChatMetadata()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(40, getChatMetadata());
        }
        if (hasLastLogoff()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(45, getLastLogoff());
        }
        if (hasLastLogon()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(46, getLastLogon());
        }
        if (hasClanRank()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(50, getClanRank());
        }
        if (hasGameName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(55, getGameName());
        }
        if (hasGameid()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(56, getGameid());
        }
        if (hasGameDataBlob()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(60, getGameDataBlob());
        }
        if (hasClanTag()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(65, getClanTag());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientPersonaState.Friend parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientPersonaState.Friend prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientPersonaState.Friend result;
        
        // Construct using SteamMessages.CMsgClientPersonaState.Friend.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientPersonaState.Friend();
          return builder;
        }
        
        protected SteamMessages.CMsgClientPersonaState.Friend internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientPersonaState.Friend();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientPersonaState.Friend.getDescriptor();
        }
        
        public SteamMessages.CMsgClientPersonaState.Friend getDefaultInstanceForType() {
          return SteamMessages.CMsgClientPersonaState.Friend.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientPersonaState.Friend build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientPersonaState.Friend buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientPersonaState.Friend buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientPersonaState.Friend returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientPersonaState.Friend) {
            return mergeFrom((SteamMessages.CMsgClientPersonaState.Friend)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientPersonaState.Friend other) {
          if (other == SteamMessages.CMsgClientPersonaState.Friend.getDefaultInstance()) return this;
          if (other.hasFriendid()) {
            setFriendid(other.getFriendid());
          }
          if (other.hasPersonaState()) {
            setPersonaState(other.getPersonaState());
          }
          if (other.hasGamePlayedAppId()) {
            setGamePlayedAppId(other.getGamePlayedAppId());
          }
          if (other.hasGameServerIp()) {
            setGameServerIp(other.getGameServerIp());
          }
          if (other.hasGameServerPort()) {
            setGameServerPort(other.getGameServerPort());
          }
          if (other.hasPlayerName()) {
            setPlayerName(other.getPlayerName());
          }
          if (other.hasQueryPort()) {
            setQueryPort(other.getQueryPort());
          }
          if (other.hasSteamidSource()) {
            setSteamidSource(other.getSteamidSource());
          }
          if (other.hasCmIp()) {
            setCmIp(other.getCmIp());
          }
          if (other.hasAvatarHash()) {
            setAvatarHash(other.getAvatarHash());
          }
          if (other.hasChatMetadata()) {
            setChatMetadata(other.getChatMetadata());
          }
          if (other.hasLastLogoff()) {
            setLastLogoff(other.getLastLogoff());
          }
          if (other.hasLastLogon()) {
            setLastLogon(other.getLastLogon());
          }
          if (other.hasClanRank()) {
            setClanRank(other.getClanRank());
          }
          if (other.hasGameName()) {
            setGameName(other.getGameName());
          }
          if (other.hasGameid()) {
            setGameid(other.getGameid());
          }
          if (other.hasGameDataBlob()) {
            setGameDataBlob(other.getGameDataBlob());
          }
          if (other.hasClanTag()) {
            setClanTag(other.getClanTag());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setFriendid(input.readFixed64());
                break;
              }
              case 16: {
                setPersonaState(input.readUInt32());
                break;
              }
              case 24: {
                setGamePlayedAppId(input.readUInt32());
                break;
              }
              case 32: {
                setGameServerIp(input.readUInt32());
                break;
              }
              case 40: {
                setGameServerPort(input.readUInt32());
                break;
              }
              case 122: {
                setPlayerName(input.readString());
                break;
              }
              case 160: {
                setQueryPort(input.readUInt32());
                break;
              }
              case 201: {
                setSteamidSource(input.readFixed64());
                break;
              }
              case 240: {
                setCmIp(input.readUInt32());
                break;
              }
              case 250: {
                setAvatarHash(input.readBytes());
                break;
              }
              case 322: {
                setChatMetadata(input.readBytes());
                break;
              }
              case 360: {
                setLastLogoff(input.readUInt32());
                break;
              }
              case 368: {
                setLastLogon(input.readUInt32());
                break;
              }
              case 400: {
                setClanRank(input.readUInt32());
                break;
              }
              case 442: {
                setGameName(input.readString());
                break;
              }
              case 449: {
                setGameid(input.readFixed64());
                break;
              }
              case 482: {
                setGameDataBlob(input.readBytes());
                break;
              }
              case 522: {
                setClanTag(input.readString());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 friendid = 1;
        public boolean hasFriendid() {
          return result.hasFriendid();
        }
        public long getFriendid() {
          return result.getFriendid();
        }
        public Builder setFriendid(long value) {
          result.hasFriendid = true;
          result.friendid_ = value;
          return this;
        }
        public Builder clearFriendid() {
          result.hasFriendid = false;
          result.friendid_ = 0L;
          return this;
        }
        
        // optional uint32 persona_state = 2;
        public boolean hasPersonaState() {
          return result.hasPersonaState();
        }
        public int getPersonaState() {
          return result.getPersonaState();
        }
        public Builder setPersonaState(int value) {
          result.hasPersonaState = true;
          result.personaState_ = value;
          return this;
        }
        public Builder clearPersonaState() {
          result.hasPersonaState = false;
          result.personaState_ = 0;
          return this;
        }
        
        // optional uint32 game_played_app_id = 3;
        public boolean hasGamePlayedAppId() {
          return result.hasGamePlayedAppId();
        }
        public int getGamePlayedAppId() {
          return result.getGamePlayedAppId();
        }
        public Builder setGamePlayedAppId(int value) {
          result.hasGamePlayedAppId = true;
          result.gamePlayedAppId_ = value;
          return this;
        }
        public Builder clearGamePlayedAppId() {
          result.hasGamePlayedAppId = false;
          result.gamePlayedAppId_ = 0;
          return this;
        }
        
        // optional uint32 game_server_ip = 4;
        public boolean hasGameServerIp() {
          return result.hasGameServerIp();
        }
        public int getGameServerIp() {
          return result.getGameServerIp();
        }
        public Builder setGameServerIp(int value) {
          result.hasGameServerIp = true;
          result.gameServerIp_ = value;
          return this;
        }
        public Builder clearGameServerIp() {
          result.hasGameServerIp = false;
          result.gameServerIp_ = 0;
          return this;
        }
        
        // optional uint32 game_server_port = 5;
        public boolean hasGameServerPort() {
          return result.hasGameServerPort();
        }
        public int getGameServerPort() {
          return result.getGameServerPort();
        }
        public Builder setGameServerPort(int value) {
          result.hasGameServerPort = true;
          result.gameServerPort_ = value;
          return this;
        }
        public Builder clearGameServerPort() {
          result.hasGameServerPort = false;
          result.gameServerPort_ = 0;
          return this;
        }
        
        // optional string player_name = 15;
        public boolean hasPlayerName() {
          return result.hasPlayerName();
        }
        public java.lang.String getPlayerName() {
          return result.getPlayerName();
        }
        public Builder setPlayerName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPlayerName = true;
          result.playerName_ = value;
          return this;
        }
        public Builder clearPlayerName() {
          result.hasPlayerName = false;
          result.playerName_ = getDefaultInstance().getPlayerName();
          return this;
        }
        
        // optional uint32 query_port = 20;
        public boolean hasQueryPort() {
          return result.hasQueryPort();
        }
        public int getQueryPort() {
          return result.getQueryPort();
        }
        public Builder setQueryPort(int value) {
          result.hasQueryPort = true;
          result.queryPort_ = value;
          return this;
        }
        public Builder clearQueryPort() {
          result.hasQueryPort = false;
          result.queryPort_ = 0;
          return this;
        }
        
        // optional fixed64 steamid_source = 25;
        public boolean hasSteamidSource() {
          return result.hasSteamidSource();
        }
        public long getSteamidSource() {
          return result.getSteamidSource();
        }
        public Builder setSteamidSource(long value) {
          result.hasSteamidSource = true;
          result.steamidSource_ = value;
          return this;
        }
        public Builder clearSteamidSource() {
          result.hasSteamidSource = false;
          result.steamidSource_ = 0L;
          return this;
        }
        
        // optional uint32 cm_ip = 30;
        public boolean hasCmIp() {
          return result.hasCmIp();
        }
        public int getCmIp() {
          return result.getCmIp();
        }
        public Builder setCmIp(int value) {
          result.hasCmIp = true;
          result.cmIp_ = value;
          return this;
        }
        public Builder clearCmIp() {
          result.hasCmIp = false;
          result.cmIp_ = 0;
          return this;
        }
        
        // optional bytes avatar_hash = 31;
        public boolean hasAvatarHash() {
          return result.hasAvatarHash();
        }
        public com.google.protobuf.ByteString getAvatarHash() {
          return result.getAvatarHash();
        }
        public Builder setAvatarHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasAvatarHash = true;
          result.avatarHash_ = value;
          return this;
        }
        public Builder clearAvatarHash() {
          result.hasAvatarHash = false;
          result.avatarHash_ = getDefaultInstance().getAvatarHash();
          return this;
        }
        
        // optional bytes chat_metadata = 40;
        public boolean hasChatMetadata() {
          return result.hasChatMetadata();
        }
        public com.google.protobuf.ByteString getChatMetadata() {
          return result.getChatMetadata();
        }
        public Builder setChatMetadata(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasChatMetadata = true;
          result.chatMetadata_ = value;
          return this;
        }
        public Builder clearChatMetadata() {
          result.hasChatMetadata = false;
          result.chatMetadata_ = getDefaultInstance().getChatMetadata();
          return this;
        }
        
        // optional uint32 last_logoff = 45;
        public boolean hasLastLogoff() {
          return result.hasLastLogoff();
        }
        public int getLastLogoff() {
          return result.getLastLogoff();
        }
        public Builder setLastLogoff(int value) {
          result.hasLastLogoff = true;
          result.lastLogoff_ = value;
          return this;
        }
        public Builder clearLastLogoff() {
          result.hasLastLogoff = false;
          result.lastLogoff_ = 0;
          return this;
        }
        
        // optional uint32 last_logon = 46;
        public boolean hasLastLogon() {
          return result.hasLastLogon();
        }
        public int getLastLogon() {
          return result.getLastLogon();
        }
        public Builder setLastLogon(int value) {
          result.hasLastLogon = true;
          result.lastLogon_ = value;
          return this;
        }
        public Builder clearLastLogon() {
          result.hasLastLogon = false;
          result.lastLogon_ = 0;
          return this;
        }
        
        // optional uint32 clan_rank = 50;
        public boolean hasClanRank() {
          return result.hasClanRank();
        }
        public int getClanRank() {
          return result.getClanRank();
        }
        public Builder setClanRank(int value) {
          result.hasClanRank = true;
          result.clanRank_ = value;
          return this;
        }
        public Builder clearClanRank() {
          result.hasClanRank = false;
          result.clanRank_ = 0;
          return this;
        }
        
        // optional string game_name = 55;
        public boolean hasGameName() {
          return result.hasGameName();
        }
        public java.lang.String getGameName() {
          return result.getGameName();
        }
        public Builder setGameName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameName = true;
          result.gameName_ = value;
          return this;
        }
        public Builder clearGameName() {
          result.hasGameName = false;
          result.gameName_ = getDefaultInstance().getGameName();
          return this;
        }
        
        // optional fixed64 gameid = 56;
        public boolean hasGameid() {
          return result.hasGameid();
        }
        public long getGameid() {
          return result.getGameid();
        }
        public Builder setGameid(long value) {
          result.hasGameid = true;
          result.gameid_ = value;
          return this;
        }
        public Builder clearGameid() {
          result.hasGameid = false;
          result.gameid_ = 0L;
          return this;
        }
        
        // optional bytes game_data_blob = 60;
        public boolean hasGameDataBlob() {
          return result.hasGameDataBlob();
        }
        public com.google.protobuf.ByteString getGameDataBlob() {
          return result.getGameDataBlob();
        }
        public Builder setGameDataBlob(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameDataBlob = true;
          result.gameDataBlob_ = value;
          return this;
        }
        public Builder clearGameDataBlob() {
          result.hasGameDataBlob = false;
          result.gameDataBlob_ = getDefaultInstance().getGameDataBlob();
          return this;
        }
        
        // optional string clan_tag = 65;
        public boolean hasClanTag() {
          return result.hasClanTag();
        }
        public java.lang.String getClanTag() {
          return result.getClanTag();
        }
        public Builder setClanTag(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasClanTag = true;
          result.clanTag_ = value;
          return this;
        }
        public Builder clearClanTag() {
          result.hasClanTag = false;
          result.clanTag_ = getDefaultInstance().getClanTag();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientPersonaState.Friend)
      }
      
      static {
        defaultInstance = new Friend(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientPersonaState.Friend)
    }
    
    // optional uint32 status_flags = 1;
    public static final int STATUS_FLAGS_FIELD_NUMBER = 1;
    private boolean hasStatusFlags;
    private int statusFlags_ = 0;
    public boolean hasStatusFlags() { return hasStatusFlags; }
    public int getStatusFlags() { return statusFlags_; }
    
    // repeated .CMsgClientPersonaState.Friend friends = 2;
    public static final int FRIENDS_FIELD_NUMBER = 2;
    private java.util.List<SteamMessages.CMsgClientPersonaState.Friend> friends_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientPersonaState.Friend> getFriendsList() {
      return friends_;
    }
    public int getFriendsCount() { return friends_.size(); }
    public SteamMessages.CMsgClientPersonaState.Friend getFriends(int index) {
      return friends_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatusFlags()) {
        output.writeUInt32(1, getStatusFlags());
      }
      for (SteamMessages.CMsgClientPersonaState.Friend element : getFriendsList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatusFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getStatusFlags());
      }
      for (SteamMessages.CMsgClientPersonaState.Friend element : getFriendsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientPersonaState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientPersonaState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientPersonaState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientPersonaState result;
      
      // Construct using SteamMessages.CMsgClientPersonaState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientPersonaState();
        return builder;
      }
      
      protected SteamMessages.CMsgClientPersonaState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientPersonaState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientPersonaState.getDescriptor();
      }
      
      public SteamMessages.CMsgClientPersonaState getDefaultInstanceForType() {
        return SteamMessages.CMsgClientPersonaState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientPersonaState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientPersonaState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientPersonaState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.friends_ != java.util.Collections.EMPTY_LIST) {
          result.friends_ =
            java.util.Collections.unmodifiableList(result.friends_);
        }
        SteamMessages.CMsgClientPersonaState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientPersonaState) {
          return mergeFrom((SteamMessages.CMsgClientPersonaState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientPersonaState other) {
        if (other == SteamMessages.CMsgClientPersonaState.getDefaultInstance()) return this;
        if (other.hasStatusFlags()) {
          setStatusFlags(other.getStatusFlags());
        }
        if (!other.friends_.isEmpty()) {
          if (result.friends_.isEmpty()) {
            result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientPersonaState.Friend>();
          }
          result.friends_.addAll(other.friends_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setStatusFlags(input.readUInt32());
              break;
            }
            case 18: {
              SteamMessages.CMsgClientPersonaState.Friend.Builder subBuilder = SteamMessages.CMsgClientPersonaState.Friend.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFriends(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 status_flags = 1;
      public boolean hasStatusFlags() {
        return result.hasStatusFlags();
      }
      public int getStatusFlags() {
        return result.getStatusFlags();
      }
      public Builder setStatusFlags(int value) {
        result.hasStatusFlags = true;
        result.statusFlags_ = value;
        return this;
      }
      public Builder clearStatusFlags() {
        result.hasStatusFlags = false;
        result.statusFlags_ = 0;
        return this;
      }
      
      // repeated .CMsgClientPersonaState.Friend friends = 2;
      public java.util.List<SteamMessages.CMsgClientPersonaState.Friend> getFriendsList() {
        return java.util.Collections.unmodifiableList(result.friends_);
      }
      public int getFriendsCount() {
        return result.getFriendsCount();
      }
      public SteamMessages.CMsgClientPersonaState.Friend getFriends(int index) {
        return result.getFriends(index);
      }
      public Builder setFriends(int index, SteamMessages.CMsgClientPersonaState.Friend value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.friends_.set(index, value);
        return this;
      }
      public Builder setFriends(int index, SteamMessages.CMsgClientPersonaState.Friend.Builder builderForValue) {
        result.friends_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFriends(SteamMessages.CMsgClientPersonaState.Friend value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientPersonaState.Friend>();
        }
        result.friends_.add(value);
        return this;
      }
      public Builder addFriends(SteamMessages.CMsgClientPersonaState.Friend.Builder builderForValue) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientPersonaState.Friend>();
        }
        result.friends_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFriends(
          java.lang.Iterable<? extends SteamMessages.CMsgClientPersonaState.Friend> values) {
        if (result.friends_.isEmpty()) {
          result.friends_ = new java.util.ArrayList<SteamMessages.CMsgClientPersonaState.Friend>();
        }
        super.addAll(values, result.friends_);
        return this;
      }
      public Builder clearFriends() {
        result.friends_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientPersonaState)
    }
    
    static {
      defaultInstance = new CMsgClientPersonaState(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientPersonaState)
  }
  
  public static final class CMsgAMRouteToClients extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgAMRouteToClients.newBuilder() to construct.
    private CMsgAMRouteToClients() {
      initFields();
    }
    private CMsgAMRouteToClients(boolean noInit) {}
    
    private static final CMsgAMRouteToClients defaultInstance;
    public static CMsgAMRouteToClients getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgAMRouteToClients getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgAMRouteToClients_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgAMRouteToClients_fieldAccessorTable;
    }
    
    // optional bool contains_protobuf_msg = 1;
    public static final int CONTAINS_PROTOBUF_MSG_FIELD_NUMBER = 1;
    private boolean hasContainsProtobufMsg;
    private boolean containsProtobufMsg_ = false;
    public boolean hasContainsProtobufMsg() { return hasContainsProtobufMsg; }
    public boolean getContainsProtobufMsg() { return containsProtobufMsg_; }
    
    // optional bytes payload = 2;
    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private boolean hasPayload;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPayload() { return hasPayload; }
    public com.google.protobuf.ByteString getPayload() { return payload_; }
    
    // repeated fixed64 clients = 3;
    public static final int CLIENTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> clients_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getClientsList() {
      return clients_;
    }
    public int getClientsCount() { return clients_.size(); }
    public long getClients(int index) {
      return clients_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContainsProtobufMsg()) {
        output.writeBool(1, getContainsProtobufMsg());
      }
      if (hasPayload()) {
        output.writeBytes(2, getPayload());
      }
      for (long element : getClientsList()) {
        output.writeFixed64(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContainsProtobufMsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getContainsProtobufMsg());
      }
      if (hasPayload()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPayload());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getClientsList().size();
        size += dataSize;
        size += 1 * getClientsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMRouteToClients parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgAMRouteToClients parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgAMRouteToClients prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgAMRouteToClients result;
      
      // Construct using SteamMessages.CMsgAMRouteToClients.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgAMRouteToClients();
        return builder;
      }
      
      protected SteamMessages.CMsgAMRouteToClients internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgAMRouteToClients();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgAMRouteToClients.getDescriptor();
      }
      
      public SteamMessages.CMsgAMRouteToClients getDefaultInstanceForType() {
        return SteamMessages.CMsgAMRouteToClients.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgAMRouteToClients build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgAMRouteToClients buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgAMRouteToClients buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.clients_ != java.util.Collections.EMPTY_LIST) {
          result.clients_ =
            java.util.Collections.unmodifiableList(result.clients_);
        }
        SteamMessages.CMsgAMRouteToClients returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgAMRouteToClients) {
          return mergeFrom((SteamMessages.CMsgAMRouteToClients)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgAMRouteToClients other) {
        if (other == SteamMessages.CMsgAMRouteToClients.getDefaultInstance()) return this;
        if (other.hasContainsProtobufMsg()) {
          setContainsProtobufMsg(other.getContainsProtobufMsg());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        if (!other.clients_.isEmpty()) {
          if (result.clients_.isEmpty()) {
            result.clients_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.clients_.addAll(other.clients_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setContainsProtobufMsg(input.readBool());
              break;
            }
            case 18: {
              setPayload(input.readBytes());
              break;
            }
            case 25: {
              addClients(input.readFixed64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addClients(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional bool contains_protobuf_msg = 1;
      public boolean hasContainsProtobufMsg() {
        return result.hasContainsProtobufMsg();
      }
      public boolean getContainsProtobufMsg() {
        return result.getContainsProtobufMsg();
      }
      public Builder setContainsProtobufMsg(boolean value) {
        result.hasContainsProtobufMsg = true;
        result.containsProtobufMsg_ = value;
        return this;
      }
      public Builder clearContainsProtobufMsg() {
        result.hasContainsProtobufMsg = false;
        result.containsProtobufMsg_ = false;
        return this;
      }
      
      // optional bytes payload = 2;
      public boolean hasPayload() {
        return result.hasPayload();
      }
      public com.google.protobuf.ByteString getPayload() {
        return result.getPayload();
      }
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder clearPayload() {
        result.hasPayload = false;
        result.payload_ = getDefaultInstance().getPayload();
        return this;
      }
      
      // repeated fixed64 clients = 3;
      public java.util.List<java.lang.Long> getClientsList() {
        return java.util.Collections.unmodifiableList(result.clients_);
      }
      public int getClientsCount() {
        return result.getClientsCount();
      }
      public long getClients(int index) {
        return result.getClients(index);
      }
      public Builder setClients(int index, long value) {
        result.clients_.set(index, value);
        return this;
      }
      public Builder addClients(long value) {
        if (result.clients_.isEmpty()) {
          result.clients_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.clients_.add(value);
        return this;
      }
      public Builder addAllClients(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.clients_.isEmpty()) {
          result.clients_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.clients_);
        return this;
      }
      public Builder clearClients() {
        result.clients_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgAMRouteToClients)
    }
    
    static {
      defaultInstance = new CMsgAMRouteToClients(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgAMRouteToClients)
  }
  
  public static final class CMsgClientMMSCreateLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSCreateLobby.newBuilder() to construct.
    private CMsgClientMMSCreateLobby() {
      initFields();
    }
    private CMsgClientMMSCreateLobby(boolean noInit) {}
    
    private static final CMsgClientMMSCreateLobby defaultInstance;
    public static CMsgClientMMSCreateLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSCreateLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSCreateLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSCreateLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 max_members = 2;
    public static final int MAX_MEMBERS_FIELD_NUMBER = 2;
    private boolean hasMaxMembers;
    private int maxMembers_ = 0;
    public boolean hasMaxMembers() { return hasMaxMembers; }
    public int getMaxMembers() { return maxMembers_; }
    
    // optional int32 lobby_type = 3;
    public static final int LOBBY_TYPE_FIELD_NUMBER = 3;
    private boolean hasLobbyType;
    private int lobbyType_ = 0;
    public boolean hasLobbyType() { return hasLobbyType; }
    public int getLobbyType() { return lobbyType_; }
    
    // optional int32 lobby_flags = 4;
    public static final int LOBBY_FLAGS_FIELD_NUMBER = 4;
    private boolean hasLobbyFlags;
    private int lobbyFlags_ = 0;
    public boolean hasLobbyFlags() { return hasLobbyFlags; }
    public int getLobbyFlags() { return lobbyFlags_; }
    
    // optional uint32 cell_id = 5;
    public static final int CELL_ID_FIELD_NUMBER = 5;
    private boolean hasCellId;
    private int cellId_ = 0;
    public boolean hasCellId() { return hasCellId; }
    public int getCellId() { return cellId_; }
    
    // optional uint32 public_ip = 6;
    public static final int PUBLIC_IP_FIELD_NUMBER = 6;
    private boolean hasPublicIp;
    private int publicIp_ = 0;
    public boolean hasPublicIp() { return hasPublicIp; }
    public int getPublicIp() { return publicIp_; }
    
    // optional bytes metadata = 7;
    public static final int METADATA_FIELD_NUMBER = 7;
    private boolean hasMetadata;
    private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMetadata() { return hasMetadata; }
    public com.google.protobuf.ByteString getMetadata() { return metadata_; }
    
    // optional string persona_name_owner = 8;
    public static final int PERSONA_NAME_OWNER_FIELD_NUMBER = 8;
    private boolean hasPersonaNameOwner;
    private java.lang.String personaNameOwner_ = "";
    public boolean hasPersonaNameOwner() { return hasPersonaNameOwner; }
    public java.lang.String getPersonaNameOwner() { return personaNameOwner_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasMaxMembers()) {
        output.writeInt32(2, getMaxMembers());
      }
      if (hasLobbyType()) {
        output.writeInt32(3, getLobbyType());
      }
      if (hasLobbyFlags()) {
        output.writeInt32(4, getLobbyFlags());
      }
      if (hasCellId()) {
        output.writeUInt32(5, getCellId());
      }
      if (hasPublicIp()) {
        output.writeUInt32(6, getPublicIp());
      }
      if (hasMetadata()) {
        output.writeBytes(7, getMetadata());
      }
      if (hasPersonaNameOwner()) {
        output.writeString(8, getPersonaNameOwner());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasMaxMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getMaxMembers());
      }
      if (hasLobbyType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getLobbyType());
      }
      if (hasLobbyFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getLobbyFlags());
      }
      if (hasCellId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getCellId());
      }
      if (hasPublicIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getPublicIp());
      }
      if (hasMetadata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMetadata());
      }
      if (hasPersonaNameOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getPersonaNameOwner());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSCreateLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSCreateLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSCreateLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSCreateLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSCreateLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSCreateLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSCreateLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSCreateLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSCreateLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSCreateLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSCreateLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSCreateLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSCreateLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSCreateLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSCreateLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSCreateLobby other) {
        if (other == SteamMessages.CMsgClientMMSCreateLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasLobbyFlags()) {
          setLobbyFlags(other.getLobbyFlags());
        }
        if (other.hasCellId()) {
          setCellId(other.getCellId());
        }
        if (other.hasPublicIp()) {
          setPublicIp(other.getPublicIp());
        }
        if (other.hasMetadata()) {
          setMetadata(other.getMetadata());
        }
        if (other.hasPersonaNameOwner()) {
          setPersonaNameOwner(other.getPersonaNameOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 16: {
              setMaxMembers(input.readInt32());
              break;
            }
            case 24: {
              setLobbyType(input.readInt32());
              break;
            }
            case 32: {
              setLobbyFlags(input.readInt32());
              break;
            }
            case 40: {
              setCellId(input.readUInt32());
              break;
            }
            case 48: {
              setPublicIp(input.readUInt32());
              break;
            }
            case 58: {
              setMetadata(input.readBytes());
              break;
            }
            case 66: {
              setPersonaNameOwner(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 max_members = 2;
      public boolean hasMaxMembers() {
        return result.hasMaxMembers();
      }
      public int getMaxMembers() {
        return result.getMaxMembers();
      }
      public Builder setMaxMembers(int value) {
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder clearMaxMembers() {
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      // optional int32 lobby_type = 3;
      public boolean hasLobbyType() {
        return result.hasLobbyType();
      }
      public int getLobbyType() {
        return result.getLobbyType();
      }
      public Builder setLobbyType(int value) {
        result.hasLobbyType = true;
        result.lobbyType_ = value;
        return this;
      }
      public Builder clearLobbyType() {
        result.hasLobbyType = false;
        result.lobbyType_ = 0;
        return this;
      }
      
      // optional int32 lobby_flags = 4;
      public boolean hasLobbyFlags() {
        return result.hasLobbyFlags();
      }
      public int getLobbyFlags() {
        return result.getLobbyFlags();
      }
      public Builder setLobbyFlags(int value) {
        result.hasLobbyFlags = true;
        result.lobbyFlags_ = value;
        return this;
      }
      public Builder clearLobbyFlags() {
        result.hasLobbyFlags = false;
        result.lobbyFlags_ = 0;
        return this;
      }
      
      // optional uint32 cell_id = 5;
      public boolean hasCellId() {
        return result.hasCellId();
      }
      public int getCellId() {
        return result.getCellId();
      }
      public Builder setCellId(int value) {
        result.hasCellId = true;
        result.cellId_ = value;
        return this;
      }
      public Builder clearCellId() {
        result.hasCellId = false;
        result.cellId_ = 0;
        return this;
      }
      
      // optional uint32 public_ip = 6;
      public boolean hasPublicIp() {
        return result.hasPublicIp();
      }
      public int getPublicIp() {
        return result.getPublicIp();
      }
      public Builder setPublicIp(int value) {
        result.hasPublicIp = true;
        result.publicIp_ = value;
        return this;
      }
      public Builder clearPublicIp() {
        result.hasPublicIp = false;
        result.publicIp_ = 0;
        return this;
      }
      
      // optional bytes metadata = 7;
      public boolean hasMetadata() {
        return result.hasMetadata();
      }
      public com.google.protobuf.ByteString getMetadata() {
        return result.getMetadata();
      }
      public Builder setMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
        result.metadata_ = value;
        return this;
      }
      public Builder clearMetadata() {
        result.hasMetadata = false;
        result.metadata_ = getDefaultInstance().getMetadata();
        return this;
      }
      
      // optional string persona_name_owner = 8;
      public boolean hasPersonaNameOwner() {
        return result.hasPersonaNameOwner();
      }
      public java.lang.String getPersonaNameOwner() {
        return result.getPersonaNameOwner();
      }
      public Builder setPersonaNameOwner(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaNameOwner = true;
        result.personaNameOwner_ = value;
        return this;
      }
      public Builder clearPersonaNameOwner() {
        result.hasPersonaNameOwner = false;
        result.personaNameOwner_ = getDefaultInstance().getPersonaNameOwner();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSCreateLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSCreateLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSCreateLobby)
  }
  
  public static final class CMsgClientMMSCreateLobbyResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSCreateLobbyResponse.newBuilder() to construct.
    private CMsgClientMMSCreateLobbyResponse() {
      initFields();
    }
    private CMsgClientMMSCreateLobbyResponse(boolean noInit) {}
    
    private static final CMsgClientMMSCreateLobbyResponse defaultInstance;
    public static CMsgClientMMSCreateLobbyResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSCreateLobbyResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSCreateLobbyResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSCreateLobbyResponse_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 eresult = 3 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 3;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        output.writeInt32(3, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSCreateLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSCreateLobbyResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSCreateLobbyResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSCreateLobbyResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSCreateLobbyResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSCreateLobbyResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSCreateLobbyResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSCreateLobbyResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSCreateLobbyResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSCreateLobbyResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSCreateLobbyResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSCreateLobbyResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSCreateLobbyResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSCreateLobbyResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSCreateLobbyResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSCreateLobbyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSCreateLobbyResponse other) {
        if (other == SteamMessages.CMsgClientMMSCreateLobbyResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setEresult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 eresult = 3 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSCreateLobbyResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSCreateLobbyResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSCreateLobbyResponse)
  }
  
  public static final class CMsgClientMMSJoinLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSJoinLobby.newBuilder() to construct.
    private CMsgClientMMSJoinLobby() {
      initFields();
    }
    private CMsgClientMMSJoinLobby(boolean noInit) {}
    
    private static final CMsgClientMMSJoinLobby defaultInstance;
    public static CMsgClientMMSJoinLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSJoinLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSJoinLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSJoinLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional string persona_name = 3;
    public static final int PERSONA_NAME_FIELD_NUMBER = 3;
    private boolean hasPersonaName;
    private java.lang.String personaName_ = "";
    public boolean hasPersonaName() { return hasPersonaName; }
    public java.lang.String getPersonaName() { return personaName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasPersonaName()) {
        output.writeString(3, getPersonaName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasPersonaName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPersonaName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSJoinLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSJoinLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSJoinLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSJoinLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSJoinLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSJoinLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSJoinLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSJoinLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSJoinLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSJoinLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSJoinLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSJoinLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSJoinLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSJoinLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSJoinLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSJoinLobby other) {
        if (other == SteamMessages.CMsgClientMMSJoinLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasPersonaName()) {
          setPersonaName(other.getPersonaName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 26: {
              setPersonaName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional string persona_name = 3;
      public boolean hasPersonaName() {
        return result.hasPersonaName();
      }
      public java.lang.String getPersonaName() {
        return result.getPersonaName();
      }
      public Builder setPersonaName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
        result.personaName_ = value;
        return this;
      }
      public Builder clearPersonaName() {
        result.hasPersonaName = false;
        result.personaName_ = getDefaultInstance().getPersonaName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSJoinLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSJoinLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSJoinLobby)
  }
  
  public static final class CMsgClientMMSJoinLobbyResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSJoinLobbyResponse.newBuilder() to construct.
    private CMsgClientMMSJoinLobbyResponse() {
      initFields();
    }
    private CMsgClientMMSJoinLobbyResponse(boolean noInit) {}
    
    private static final CMsgClientMMSJoinLobbyResponse defaultInstance;
    public static CMsgClientMMSJoinLobbyResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSJoinLobbyResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSJoinLobbyResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSJoinLobbyResponse_fieldAccessorTable;
    }
    
    public static final class Member extends
        com.google.protobuf.GeneratedMessage {
      // Use Member.newBuilder() to construct.
      private Member() {
        initFields();
      }
      private Member(boolean noInit) {}
      
      private static final Member defaultInstance;
      public static Member getDefaultInstance() {
        return defaultInstance;
      }
      
      public Member getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientMMSJoinLobbyResponse_Member_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientMMSJoinLobbyResponse_Member_fieldAccessorTable;
      }
      
      // optional fixed64 steam_id = 1;
      public static final int STEAM_ID_FIELD_NUMBER = 1;
      private boolean hasSteamId;
      private long steamId_ = 0L;
      public boolean hasSteamId() { return hasSteamId; }
      public long getSteamId() { return steamId_; }
      
      // optional string persona_name = 2;
      public static final int PERSONA_NAME_FIELD_NUMBER = 2;
      private boolean hasPersonaName;
      private java.lang.String personaName_ = "";
      public boolean hasPersonaName() { return hasPersonaName; }
      public java.lang.String getPersonaName() { return personaName_; }
      
      // optional bytes metadata = 3;
      public static final int METADATA_FIELD_NUMBER = 3;
      private boolean hasMetadata;
      private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMetadata() { return hasMetadata; }
      public com.google.protobuf.ByteString getMetadata() { return metadata_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamId()) {
          output.writeFixed64(1, getSteamId());
        }
        if (hasPersonaName()) {
          output.writeString(2, getPersonaName());
        }
        if (hasMetadata()) {
          output.writeBytes(3, getMetadata());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getSteamId());
        }
        if (hasPersonaName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getPersonaName());
        }
        if (hasMetadata()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getMetadata());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSJoinLobbyResponse.Member parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientMMSJoinLobbyResponse.Member prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientMMSJoinLobbyResponse.Member result;
        
        // Construct using SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientMMSJoinLobbyResponse.Member();
          return builder;
        }
        
        protected SteamMessages.CMsgClientMMSJoinLobbyResponse.Member internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientMMSJoinLobbyResponse.Member();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.getDescriptor();
        }
        
        public SteamMessages.CMsgClientMMSJoinLobbyResponse.Member getDefaultInstanceForType() {
          return SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientMMSJoinLobbyResponse.Member build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientMMSJoinLobbyResponse.Member buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientMMSJoinLobbyResponse.Member buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientMMSJoinLobbyResponse.Member returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientMMSJoinLobbyResponse.Member) {
            return mergeFrom((SteamMessages.CMsgClientMMSJoinLobbyResponse.Member)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientMMSJoinLobbyResponse.Member other) {
          if (other == SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.getDefaultInstance()) return this;
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasPersonaName()) {
            setPersonaName(other.getPersonaName());
          }
          if (other.hasMetadata()) {
            setMetadata(other.getMetadata());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setSteamId(input.readFixed64());
                break;
              }
              case 18: {
                setPersonaName(input.readString());
                break;
              }
              case 26: {
                setMetadata(input.readBytes());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 steam_id = 1;
        public boolean hasSteamId() {
          return result.hasSteamId();
        }
        public long getSteamId() {
          return result.getSteamId();
        }
        public Builder setSteamId(long value) {
          result.hasSteamId = true;
          result.steamId_ = value;
          return this;
        }
        public Builder clearSteamId() {
          result.hasSteamId = false;
          result.steamId_ = 0L;
          return this;
        }
        
        // optional string persona_name = 2;
        public boolean hasPersonaName() {
          return result.hasPersonaName();
        }
        public java.lang.String getPersonaName() {
          return result.getPersonaName();
        }
        public Builder setPersonaName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
          result.personaName_ = value;
          return this;
        }
        public Builder clearPersonaName() {
          result.hasPersonaName = false;
          result.personaName_ = getDefaultInstance().getPersonaName();
          return this;
        }
        
        // optional bytes metadata = 3;
        public boolean hasMetadata() {
          return result.hasMetadata();
        }
        public com.google.protobuf.ByteString getMetadata() {
          return result.getMetadata();
        }
        public Builder setMetadata(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
          result.metadata_ = value;
          return this;
        }
        public Builder clearMetadata() {
          result.hasMetadata = false;
          result.metadata_ = getDefaultInstance().getMetadata();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientMMSJoinLobbyResponse.Member)
      }
      
      static {
        defaultInstance = new Member(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientMMSJoinLobbyResponse.Member)
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 chat_room_enter_response = 3;
    public static final int CHAT_ROOM_ENTER_RESPONSE_FIELD_NUMBER = 3;
    private boolean hasChatRoomEnterResponse;
    private int chatRoomEnterResponse_ = 0;
    public boolean hasChatRoomEnterResponse() { return hasChatRoomEnterResponse; }
    public int getChatRoomEnterResponse() { return chatRoomEnterResponse_; }
    
    // optional int32 max_members = 4;
    public static final int MAX_MEMBERS_FIELD_NUMBER = 4;
    private boolean hasMaxMembers;
    private int maxMembers_ = 0;
    public boolean hasMaxMembers() { return hasMaxMembers; }
    public int getMaxMembers() { return maxMembers_; }
    
    // optional int32 lobby_type = 5;
    public static final int LOBBY_TYPE_FIELD_NUMBER = 5;
    private boolean hasLobbyType;
    private int lobbyType_ = 0;
    public boolean hasLobbyType() { return hasLobbyType; }
    public int getLobbyType() { return lobbyType_; }
    
    // optional int32 lobby_flags = 6;
    public static final int LOBBY_FLAGS_FIELD_NUMBER = 6;
    private boolean hasLobbyFlags;
    private int lobbyFlags_ = 0;
    public boolean hasLobbyFlags() { return hasLobbyFlags; }
    public int getLobbyFlags() { return lobbyFlags_; }
    
    // optional fixed64 steam_id_owner = 7;
    public static final int STEAM_ID_OWNER_FIELD_NUMBER = 7;
    private boolean hasSteamIdOwner;
    private long steamIdOwner_ = 0L;
    public boolean hasSteamIdOwner() { return hasSteamIdOwner; }
    public long getSteamIdOwner() { return steamIdOwner_; }
    
    // optional bytes metadata = 8;
    public static final int METADATA_FIELD_NUMBER = 8;
    private boolean hasMetadata;
    private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMetadata() { return hasMetadata; }
    public com.google.protobuf.ByteString getMetadata() { return metadata_; }
    
    // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
    public static final int MEMBERS_FIELD_NUMBER = 9;
    private java.util.List<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member> members_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member> getMembersList() {
      return members_;
    }
    public int getMembersCount() { return members_.size(); }
    public SteamMessages.CMsgClientMMSJoinLobbyResponse.Member getMembers(int index) {
      return members_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasChatRoomEnterResponse()) {
        output.writeInt32(3, getChatRoomEnterResponse());
      }
      if (hasMaxMembers()) {
        output.writeInt32(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        output.writeInt32(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        output.writeInt32(6, getLobbyFlags());
      }
      if (hasSteamIdOwner()) {
        output.writeFixed64(7, getSteamIdOwner());
      }
      if (hasMetadata()) {
        output.writeBytes(8, getMetadata());
      }
      for (SteamMessages.CMsgClientMMSJoinLobbyResponse.Member element : getMembersList()) {
        output.writeMessage(9, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasChatRoomEnterResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getChatRoomEnterResponse());
      }
      if (hasMaxMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getLobbyFlags());
      }
      if (hasSteamIdOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, getSteamIdOwner());
      }
      if (hasMetadata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMetadata());
      }
      for (SteamMessages.CMsgClientMMSJoinLobbyResponse.Member element : getMembersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSJoinLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSJoinLobbyResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSJoinLobbyResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSJoinLobbyResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSJoinLobbyResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSJoinLobbyResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSJoinLobbyResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSJoinLobbyResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSJoinLobbyResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSJoinLobbyResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSJoinLobbyResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSJoinLobbyResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSJoinLobbyResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.members_ != java.util.Collections.EMPTY_LIST) {
          result.members_ =
            java.util.Collections.unmodifiableList(result.members_);
        }
        SteamMessages.CMsgClientMMSJoinLobbyResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSJoinLobbyResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSJoinLobbyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSJoinLobbyResponse other) {
        if (other == SteamMessages.CMsgClientMMSJoinLobbyResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasChatRoomEnterResponse()) {
          setChatRoomEnterResponse(other.getChatRoomEnterResponse());
        }
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasLobbyFlags()) {
          setLobbyFlags(other.getLobbyFlags());
        }
        if (other.hasSteamIdOwner()) {
          setSteamIdOwner(other.getSteamIdOwner());
        }
        if (other.hasMetadata()) {
          setMetadata(other.getMetadata());
        }
        if (!other.members_.isEmpty()) {
          if (result.members_.isEmpty()) {
            result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member>();
          }
          result.members_.addAll(other.members_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setChatRoomEnterResponse(input.readInt32());
              break;
            }
            case 32: {
              setMaxMembers(input.readInt32());
              break;
            }
            case 40: {
              setLobbyType(input.readInt32());
              break;
            }
            case 48: {
              setLobbyFlags(input.readInt32());
              break;
            }
            case 57: {
              setSteamIdOwner(input.readFixed64());
              break;
            }
            case 66: {
              setMetadata(input.readBytes());
              break;
            }
            case 74: {
              SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.Builder subBuilder = SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMembers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 chat_room_enter_response = 3;
      public boolean hasChatRoomEnterResponse() {
        return result.hasChatRoomEnterResponse();
      }
      public int getChatRoomEnterResponse() {
        return result.getChatRoomEnterResponse();
      }
      public Builder setChatRoomEnterResponse(int value) {
        result.hasChatRoomEnterResponse = true;
        result.chatRoomEnterResponse_ = value;
        return this;
      }
      public Builder clearChatRoomEnterResponse() {
        result.hasChatRoomEnterResponse = false;
        result.chatRoomEnterResponse_ = 0;
        return this;
      }
      
      // optional int32 max_members = 4;
      public boolean hasMaxMembers() {
        return result.hasMaxMembers();
      }
      public int getMaxMembers() {
        return result.getMaxMembers();
      }
      public Builder setMaxMembers(int value) {
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder clearMaxMembers() {
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      // optional int32 lobby_type = 5;
      public boolean hasLobbyType() {
        return result.hasLobbyType();
      }
      public int getLobbyType() {
        return result.getLobbyType();
      }
      public Builder setLobbyType(int value) {
        result.hasLobbyType = true;
        result.lobbyType_ = value;
        return this;
      }
      public Builder clearLobbyType() {
        result.hasLobbyType = false;
        result.lobbyType_ = 0;
        return this;
      }
      
      // optional int32 lobby_flags = 6;
      public boolean hasLobbyFlags() {
        return result.hasLobbyFlags();
      }
      public int getLobbyFlags() {
        return result.getLobbyFlags();
      }
      public Builder setLobbyFlags(int value) {
        result.hasLobbyFlags = true;
        result.lobbyFlags_ = value;
        return this;
      }
      public Builder clearLobbyFlags() {
        result.hasLobbyFlags = false;
        result.lobbyFlags_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_owner = 7;
      public boolean hasSteamIdOwner() {
        return result.hasSteamIdOwner();
      }
      public long getSteamIdOwner() {
        return result.getSteamIdOwner();
      }
      public Builder setSteamIdOwner(long value) {
        result.hasSteamIdOwner = true;
        result.steamIdOwner_ = value;
        return this;
      }
      public Builder clearSteamIdOwner() {
        result.hasSteamIdOwner = false;
        result.steamIdOwner_ = 0L;
        return this;
      }
      
      // optional bytes metadata = 8;
      public boolean hasMetadata() {
        return result.hasMetadata();
      }
      public com.google.protobuf.ByteString getMetadata() {
        return result.getMetadata();
      }
      public Builder setMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
        result.metadata_ = value;
        return this;
      }
      public Builder clearMetadata() {
        result.hasMetadata = false;
        result.metadata_ = getDefaultInstance().getMetadata();
        return this;
      }
      
      // repeated .CMsgClientMMSJoinLobbyResponse.Member members = 9;
      public java.util.List<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member> getMembersList() {
        return java.util.Collections.unmodifiableList(result.members_);
      }
      public int getMembersCount() {
        return result.getMembersCount();
      }
      public SteamMessages.CMsgClientMMSJoinLobbyResponse.Member getMembers(int index) {
        return result.getMembers(index);
      }
      public Builder setMembers(int index, SteamMessages.CMsgClientMMSJoinLobbyResponse.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.members_.set(index, value);
        return this;
      }
      public Builder setMembers(int index, SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.Builder builderForValue) {
        result.members_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMembers(SteamMessages.CMsgClientMMSJoinLobbyResponse.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member>();
        }
        result.members_.add(value);
        return this;
      }
      public Builder addMembers(SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.Builder builderForValue) {
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member>();
        }
        result.members_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMembers(
          java.lang.Iterable<? extends SteamMessages.CMsgClientMMSJoinLobbyResponse.Member> values) {
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSJoinLobbyResponse.Member>();
        }
        super.addAll(values, result.members_);
        return this;
      }
      public Builder clearMembers() {
        result.members_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSJoinLobbyResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSJoinLobbyResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSJoinLobbyResponse)
  }
  
  public static final class CMsgClientMMSLeaveLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSLeaveLobby.newBuilder() to construct.
    private CMsgClientMMSLeaveLobby() {
      initFields();
    }
    private CMsgClientMMSLeaveLobby(boolean noInit) {}
    
    private static final CMsgClientMMSLeaveLobby defaultInstance;
    public static CMsgClientMMSLeaveLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSLeaveLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSLeaveLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSLeaveLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSLeaveLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSLeaveLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSLeaveLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSLeaveLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSLeaveLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSLeaveLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSLeaveLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSLeaveLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSLeaveLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSLeaveLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSLeaveLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSLeaveLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSLeaveLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSLeaveLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSLeaveLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSLeaveLobby other) {
        if (other == SteamMessages.CMsgClientMMSLeaveLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSLeaveLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSLeaveLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSLeaveLobby)
  }
  
  public static final class CMsgClientMMSLeaveLobbyResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSLeaveLobbyResponse.newBuilder() to construct.
    private CMsgClientMMSLeaveLobbyResponse() {
      initFields();
    }
    private CMsgClientMMSLeaveLobbyResponse(boolean noInit) {}
    
    private static final CMsgClientMMSLeaveLobbyResponse defaultInstance;
    public static CMsgClientMMSLeaveLobbyResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSLeaveLobbyResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSLeaveLobbyResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSLeaveLobbyResponse_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 eresult = 3 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 3;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        output.writeInt32(3, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLeaveLobbyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSLeaveLobbyResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSLeaveLobbyResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSLeaveLobbyResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSLeaveLobbyResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSLeaveLobbyResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSLeaveLobbyResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSLeaveLobbyResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSLeaveLobbyResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSLeaveLobbyResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSLeaveLobbyResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSLeaveLobbyResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSLeaveLobbyResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSLeaveLobbyResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSLeaveLobbyResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSLeaveLobbyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSLeaveLobbyResponse other) {
        if (other == SteamMessages.CMsgClientMMSLeaveLobbyResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setEresult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 eresult = 3 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSLeaveLobbyResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSLeaveLobbyResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSLeaveLobbyResponse)
  }
  
  public static final class CMsgClientMMSGetLobbyList extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSGetLobbyList.newBuilder() to construct.
    private CMsgClientMMSGetLobbyList() {
      initFields();
    }
    private CMsgClientMMSGetLobbyList(boolean noInit) {}
    
    private static final CMsgClientMMSGetLobbyList defaultInstance;
    public static CMsgClientMMSGetLobbyList getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSGetLobbyList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyList_fieldAccessorTable;
    }
    
    public static final class Filter extends
        com.google.protobuf.GeneratedMessage {
      // Use Filter.newBuilder() to construct.
      private Filter() {
        initFields();
      }
      private Filter(boolean noInit) {}
      
      private static final Filter defaultInstance;
      public static Filter getDefaultInstance() {
        return defaultInstance;
      }
      
      public Filter getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientMMSGetLobbyList_Filter_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientMMSGetLobbyList_Filter_fieldAccessorTable;
      }
      
      // optional string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private boolean hasKey;
      private java.lang.String key_ = "";
      public boolean hasKey() { return hasKey; }
      public java.lang.String getKey() { return key_; }
      
      // optional string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      // optional int32 comparision = 3;
      public static final int COMPARISION_FIELD_NUMBER = 3;
      private boolean hasComparision;
      private int comparision_ = 0;
      public boolean hasComparision() { return hasComparision; }
      public int getComparision() { return comparision_; }
      
      // optional int32 filter_type = 4;
      public static final int FILTER_TYPE_FIELD_NUMBER = 4;
      private boolean hasFilterType;
      private int filterType_ = 0;
      public boolean hasFilterType() { return hasFilterType; }
      public int getFilterType() { return filterType_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasKey()) {
          output.writeString(1, getKey());
        }
        if (hasValue()) {
          output.writeString(2, getValue());
        }
        if (hasComparision()) {
          output.writeInt32(3, getComparision());
        }
        if (hasFilterType()) {
          output.writeInt32(4, getFilterType());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasKey()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKey());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        if (hasComparision()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getComparision());
        }
        if (hasFilterType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getFilterType());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyList.Filter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientMMSGetLobbyList.Filter prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientMMSGetLobbyList.Filter result;
        
        // Construct using SteamMessages.CMsgClientMMSGetLobbyList.Filter.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientMMSGetLobbyList.Filter();
          return builder;
        }
        
        protected SteamMessages.CMsgClientMMSGetLobbyList.Filter internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientMMSGetLobbyList.Filter();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientMMSGetLobbyList.Filter.getDescriptor();
        }
        
        public SteamMessages.CMsgClientMMSGetLobbyList.Filter getDefaultInstanceForType() {
          return SteamMessages.CMsgClientMMSGetLobbyList.Filter.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientMMSGetLobbyList.Filter build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientMMSGetLobbyList.Filter buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientMMSGetLobbyList.Filter buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientMMSGetLobbyList.Filter returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientMMSGetLobbyList.Filter) {
            return mergeFrom((SteamMessages.CMsgClientMMSGetLobbyList.Filter)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientMMSGetLobbyList.Filter other) {
          if (other == SteamMessages.CMsgClientMMSGetLobbyList.Filter.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasComparision()) {
            setComparision(other.getComparision());
          }
          if (other.hasFilterType()) {
            setFilterType(other.getFilterType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setKey(input.readString());
                break;
              }
              case 18: {
                setValue(input.readString());
                break;
              }
              case 24: {
                setComparision(input.readInt32());
                break;
              }
              case 32: {
                setFilterType(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // optional string key = 1;
        public boolean hasKey() {
          return result.hasKey();
        }
        public java.lang.String getKey() {
          return result.getKey();
        }
        public Builder setKey(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
          result.key_ = value;
          return this;
        }
        public Builder clearKey() {
          result.hasKey = false;
          result.key_ = getDefaultInstance().getKey();
          return this;
        }
        
        // optional string value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // optional int32 comparision = 3;
        public boolean hasComparision() {
          return result.hasComparision();
        }
        public int getComparision() {
          return result.getComparision();
        }
        public Builder setComparision(int value) {
          result.hasComparision = true;
          result.comparision_ = value;
          return this;
        }
        public Builder clearComparision() {
          result.hasComparision = false;
          result.comparision_ = 0;
          return this;
        }
        
        // optional int32 filter_type = 4;
        public boolean hasFilterType() {
          return result.hasFilterType();
        }
        public int getFilterType() {
          return result.getFilterType();
        }
        public Builder setFilterType(int value) {
          result.hasFilterType = true;
          result.filterType_ = value;
          return this;
        }
        public Builder clearFilterType() {
          result.hasFilterType = false;
          result.filterType_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientMMSGetLobbyList.Filter)
      }
      
      static {
        defaultInstance = new Filter(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientMMSGetLobbyList.Filter)
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 num_lobbies_requested = 3;
    public static final int NUM_LOBBIES_REQUESTED_FIELD_NUMBER = 3;
    private boolean hasNumLobbiesRequested;
    private int numLobbiesRequested_ = 0;
    public boolean hasNumLobbiesRequested() { return hasNumLobbiesRequested; }
    public int getNumLobbiesRequested() { return numLobbiesRequested_; }
    
    // optional uint32 cell_id = 4;
    public static final int CELL_ID_FIELD_NUMBER = 4;
    private boolean hasCellId;
    private int cellId_ = 0;
    public boolean hasCellId() { return hasCellId; }
    public int getCellId() { return cellId_; }
    
    // optional uint32 public_ip = 5;
    public static final int PUBLIC_IP_FIELD_NUMBER = 5;
    private boolean hasPublicIp;
    private int publicIp_ = 0;
    public boolean hasPublicIp() { return hasPublicIp; }
    public int getPublicIp() { return publicIp_; }
    
    // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
    public static final int FILTERS_FIELD_NUMBER = 6;
    private java.util.List<SteamMessages.CMsgClientMMSGetLobbyList.Filter> filters_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientMMSGetLobbyList.Filter> getFiltersList() {
      return filters_;
    }
    public int getFiltersCount() { return filters_.size(); }
    public SteamMessages.CMsgClientMMSGetLobbyList.Filter getFilters(int index) {
      return filters_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasNumLobbiesRequested()) {
        output.writeInt32(3, getNumLobbiesRequested());
      }
      if (hasCellId()) {
        output.writeUInt32(4, getCellId());
      }
      if (hasPublicIp()) {
        output.writeUInt32(5, getPublicIp());
      }
      for (SteamMessages.CMsgClientMMSGetLobbyList.Filter element : getFiltersList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasNumLobbiesRequested()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNumLobbiesRequested());
      }
      if (hasCellId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getCellId());
      }
      if (hasPublicIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getPublicIp());
      }
      for (SteamMessages.CMsgClientMMSGetLobbyList.Filter element : getFiltersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSGetLobbyList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSGetLobbyList result;
      
      // Construct using SteamMessages.CMsgClientMMSGetLobbyList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSGetLobbyList();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSGetLobbyList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSGetLobbyList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSGetLobbyList.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyList getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSGetLobbyList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSGetLobbyList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSGetLobbyList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.filters_ != java.util.Collections.EMPTY_LIST) {
          result.filters_ =
            java.util.Collections.unmodifiableList(result.filters_);
        }
        SteamMessages.CMsgClientMMSGetLobbyList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSGetLobbyList) {
          return mergeFrom((SteamMessages.CMsgClientMMSGetLobbyList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSGetLobbyList other) {
        if (other == SteamMessages.CMsgClientMMSGetLobbyList.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasNumLobbiesRequested()) {
          setNumLobbiesRequested(other.getNumLobbiesRequested());
        }
        if (other.hasCellId()) {
          setCellId(other.getCellId());
        }
        if (other.hasPublicIp()) {
          setPublicIp(other.getPublicIp());
        }
        if (!other.filters_.isEmpty()) {
          if (result.filters_.isEmpty()) {
            result.filters_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyList.Filter>();
          }
          result.filters_.addAll(other.filters_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 24: {
              setNumLobbiesRequested(input.readInt32());
              break;
            }
            case 32: {
              setCellId(input.readUInt32());
              break;
            }
            case 40: {
              setPublicIp(input.readUInt32());
              break;
            }
            case 50: {
              SteamMessages.CMsgClientMMSGetLobbyList.Filter.Builder subBuilder = SteamMessages.CMsgClientMMSGetLobbyList.Filter.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFilters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 num_lobbies_requested = 3;
      public boolean hasNumLobbiesRequested() {
        return result.hasNumLobbiesRequested();
      }
      public int getNumLobbiesRequested() {
        return result.getNumLobbiesRequested();
      }
      public Builder setNumLobbiesRequested(int value) {
        result.hasNumLobbiesRequested = true;
        result.numLobbiesRequested_ = value;
        return this;
      }
      public Builder clearNumLobbiesRequested() {
        result.hasNumLobbiesRequested = false;
        result.numLobbiesRequested_ = 0;
        return this;
      }
      
      // optional uint32 cell_id = 4;
      public boolean hasCellId() {
        return result.hasCellId();
      }
      public int getCellId() {
        return result.getCellId();
      }
      public Builder setCellId(int value) {
        result.hasCellId = true;
        result.cellId_ = value;
        return this;
      }
      public Builder clearCellId() {
        result.hasCellId = false;
        result.cellId_ = 0;
        return this;
      }
      
      // optional uint32 public_ip = 5;
      public boolean hasPublicIp() {
        return result.hasPublicIp();
      }
      public int getPublicIp() {
        return result.getPublicIp();
      }
      public Builder setPublicIp(int value) {
        result.hasPublicIp = true;
        result.publicIp_ = value;
        return this;
      }
      public Builder clearPublicIp() {
        result.hasPublicIp = false;
        result.publicIp_ = 0;
        return this;
      }
      
      // repeated .CMsgClientMMSGetLobbyList.Filter filters = 6;
      public java.util.List<SteamMessages.CMsgClientMMSGetLobbyList.Filter> getFiltersList() {
        return java.util.Collections.unmodifiableList(result.filters_);
      }
      public int getFiltersCount() {
        return result.getFiltersCount();
      }
      public SteamMessages.CMsgClientMMSGetLobbyList.Filter getFilters(int index) {
        return result.getFilters(index);
      }
      public Builder setFilters(int index, SteamMessages.CMsgClientMMSGetLobbyList.Filter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.filters_.set(index, value);
        return this;
      }
      public Builder setFilters(int index, SteamMessages.CMsgClientMMSGetLobbyList.Filter.Builder builderForValue) {
        result.filters_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFilters(SteamMessages.CMsgClientMMSGetLobbyList.Filter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.filters_.isEmpty()) {
          result.filters_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyList.Filter>();
        }
        result.filters_.add(value);
        return this;
      }
      public Builder addFilters(SteamMessages.CMsgClientMMSGetLobbyList.Filter.Builder builderForValue) {
        if (result.filters_.isEmpty()) {
          result.filters_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyList.Filter>();
        }
        result.filters_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFilters(
          java.lang.Iterable<? extends SteamMessages.CMsgClientMMSGetLobbyList.Filter> values) {
        if (result.filters_.isEmpty()) {
          result.filters_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyList.Filter>();
        }
        super.addAll(values, result.filters_);
        return this;
      }
      public Builder clearFilters() {
        result.filters_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSGetLobbyList)
    }
    
    static {
      defaultInstance = new CMsgClientMMSGetLobbyList(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSGetLobbyList)
  }
  
  public static final class CMsgClientMMSGetLobbyListResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSGetLobbyListResponse.newBuilder() to construct.
    private CMsgClientMMSGetLobbyListResponse() {
      initFields();
    }
    private CMsgClientMMSGetLobbyListResponse(boolean noInit) {}
    
    private static final CMsgClientMMSGetLobbyListResponse defaultInstance;
    public static CMsgClientMMSGetLobbyListResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSGetLobbyListResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyListResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyListResponse_fieldAccessorTable;
    }
    
    public static final class Lobby extends
        com.google.protobuf.GeneratedMessage {
      // Use Lobby.newBuilder() to construct.
      private Lobby() {
        initFields();
      }
      private Lobby(boolean noInit) {}
      
      private static final Lobby defaultInstance;
      public static Lobby getDefaultInstance() {
        return defaultInstance;
      }
      
      public Lobby getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_fieldAccessorTable;
      }
      
      // optional fixed64 steam_id = 1;
      public static final int STEAM_ID_FIELD_NUMBER = 1;
      private boolean hasSteamId;
      private long steamId_ = 0L;
      public boolean hasSteamId() { return hasSteamId; }
      public long getSteamId() { return steamId_; }
      
      // optional int32 max_members = 2;
      public static final int MAX_MEMBERS_FIELD_NUMBER = 2;
      private boolean hasMaxMembers;
      private int maxMembers_ = 0;
      public boolean hasMaxMembers() { return hasMaxMembers; }
      public int getMaxMembers() { return maxMembers_; }
      
      // optional int32 lobby_type = 3;
      public static final int LOBBY_TYPE_FIELD_NUMBER = 3;
      private boolean hasLobbyType;
      private int lobbyType_ = 0;
      public boolean hasLobbyType() { return hasLobbyType; }
      public int getLobbyType() { return lobbyType_; }
      
      // optional int32 lobby_flags = 4;
      public static final int LOBBY_FLAGS_FIELD_NUMBER = 4;
      private boolean hasLobbyFlags;
      private int lobbyFlags_ = 0;
      public boolean hasLobbyFlags() { return hasLobbyFlags; }
      public int getLobbyFlags() { return lobbyFlags_; }
      
      // optional bytes metadata = 5;
      public static final int METADATA_FIELD_NUMBER = 5;
      private boolean hasMetadata;
      private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMetadata() { return hasMetadata; }
      public com.google.protobuf.ByteString getMetadata() { return metadata_; }
      
      // optional int32 num_members = 6;
      public static final int NUM_MEMBERS_FIELD_NUMBER = 6;
      private boolean hasNumMembers;
      private int numMembers_ = 0;
      public boolean hasNumMembers() { return hasNumMembers; }
      public int getNumMembers() { return numMembers_; }
      
      // optional float distance = 7;
      public static final int DISTANCE_FIELD_NUMBER = 7;
      private boolean hasDistance;
      private float distance_ = 0F;
      public boolean hasDistance() { return hasDistance; }
      public float getDistance() { return distance_; }
      
      // optional int64 weight = 8;
      public static final int WEIGHT_FIELD_NUMBER = 8;
      private boolean hasWeight;
      private long weight_ = 0L;
      public boolean hasWeight() { return hasWeight; }
      public long getWeight() { return weight_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamId()) {
          output.writeFixed64(1, getSteamId());
        }
        if (hasMaxMembers()) {
          output.writeInt32(2, getMaxMembers());
        }
        if (hasLobbyType()) {
          output.writeInt32(3, getLobbyType());
        }
        if (hasLobbyFlags()) {
          output.writeInt32(4, getLobbyFlags());
        }
        if (hasMetadata()) {
          output.writeBytes(5, getMetadata());
        }
        if (hasNumMembers()) {
          output.writeInt32(6, getNumMembers());
        }
        if (hasDistance()) {
          output.writeFloat(7, getDistance());
        }
        if (hasWeight()) {
          output.writeInt64(8, getWeight());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getSteamId());
        }
        if (hasMaxMembers()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getMaxMembers());
        }
        if (hasLobbyType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getLobbyType());
        }
        if (hasLobbyFlags()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getLobbyFlags());
        }
        if (hasMetadata()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getMetadata());
        }
        if (hasNumMembers()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, getNumMembers());
        }
        if (hasDistance()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, getDistance());
        }
        if (hasWeight()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(8, getWeight());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby result;
        
        // Construct using SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby();
          return builder;
        }
        
        protected SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.getDescriptor();
        }
        
        public SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby getDefaultInstanceForType() {
          return SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby) {
            return mergeFrom((SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby other) {
          if (other == SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.getDefaultInstance()) return this;
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasMaxMembers()) {
            setMaxMembers(other.getMaxMembers());
          }
          if (other.hasLobbyType()) {
            setLobbyType(other.getLobbyType());
          }
          if (other.hasLobbyFlags()) {
            setLobbyFlags(other.getLobbyFlags());
          }
          if (other.hasMetadata()) {
            setMetadata(other.getMetadata());
          }
          if (other.hasNumMembers()) {
            setNumMembers(other.getNumMembers());
          }
          if (other.hasDistance()) {
            setDistance(other.getDistance());
          }
          if (other.hasWeight()) {
            setWeight(other.getWeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setSteamId(input.readFixed64());
                break;
              }
              case 16: {
                setMaxMembers(input.readInt32());
                break;
              }
              case 24: {
                setLobbyType(input.readInt32());
                break;
              }
              case 32: {
                setLobbyFlags(input.readInt32());
                break;
              }
              case 42: {
                setMetadata(input.readBytes());
                break;
              }
              case 48: {
                setNumMembers(input.readInt32());
                break;
              }
              case 61: {
                setDistance(input.readFloat());
                break;
              }
              case 64: {
                setWeight(input.readInt64());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 steam_id = 1;
        public boolean hasSteamId() {
          return result.hasSteamId();
        }
        public long getSteamId() {
          return result.getSteamId();
        }
        public Builder setSteamId(long value) {
          result.hasSteamId = true;
          result.steamId_ = value;
          return this;
        }
        public Builder clearSteamId() {
          result.hasSteamId = false;
          result.steamId_ = 0L;
          return this;
        }
        
        // optional int32 max_members = 2;
        public boolean hasMaxMembers() {
          return result.hasMaxMembers();
        }
        public int getMaxMembers() {
          return result.getMaxMembers();
        }
        public Builder setMaxMembers(int value) {
          result.hasMaxMembers = true;
          result.maxMembers_ = value;
          return this;
        }
        public Builder clearMaxMembers() {
          result.hasMaxMembers = false;
          result.maxMembers_ = 0;
          return this;
        }
        
        // optional int32 lobby_type = 3;
        public boolean hasLobbyType() {
          return result.hasLobbyType();
        }
        public int getLobbyType() {
          return result.getLobbyType();
        }
        public Builder setLobbyType(int value) {
          result.hasLobbyType = true;
          result.lobbyType_ = value;
          return this;
        }
        public Builder clearLobbyType() {
          result.hasLobbyType = false;
          result.lobbyType_ = 0;
          return this;
        }
        
        // optional int32 lobby_flags = 4;
        public boolean hasLobbyFlags() {
          return result.hasLobbyFlags();
        }
        public int getLobbyFlags() {
          return result.getLobbyFlags();
        }
        public Builder setLobbyFlags(int value) {
          result.hasLobbyFlags = true;
          result.lobbyFlags_ = value;
          return this;
        }
        public Builder clearLobbyFlags() {
          result.hasLobbyFlags = false;
          result.lobbyFlags_ = 0;
          return this;
        }
        
        // optional bytes metadata = 5;
        public boolean hasMetadata() {
          return result.hasMetadata();
        }
        public com.google.protobuf.ByteString getMetadata() {
          return result.getMetadata();
        }
        public Builder setMetadata(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
          result.metadata_ = value;
          return this;
        }
        public Builder clearMetadata() {
          result.hasMetadata = false;
          result.metadata_ = getDefaultInstance().getMetadata();
          return this;
        }
        
        // optional int32 num_members = 6;
        public boolean hasNumMembers() {
          return result.hasNumMembers();
        }
        public int getNumMembers() {
          return result.getNumMembers();
        }
        public Builder setNumMembers(int value) {
          result.hasNumMembers = true;
          result.numMembers_ = value;
          return this;
        }
        public Builder clearNumMembers() {
          result.hasNumMembers = false;
          result.numMembers_ = 0;
          return this;
        }
        
        // optional float distance = 7;
        public boolean hasDistance() {
          return result.hasDistance();
        }
        public float getDistance() {
          return result.getDistance();
        }
        public Builder setDistance(float value) {
          result.hasDistance = true;
          result.distance_ = value;
          return this;
        }
        public Builder clearDistance() {
          result.hasDistance = false;
          result.distance_ = 0F;
          return this;
        }
        
        // optional int64 weight = 8;
        public boolean hasWeight() {
          return result.hasWeight();
        }
        public long getWeight() {
          return result.getWeight();
        }
        public Builder setWeight(long value) {
          result.hasWeight = true;
          result.weight_ = value;
          return this;
        }
        public Builder clearWeight() {
          result.hasWeight = false;
          result.weight_ = 0L;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientMMSGetLobbyListResponse.Lobby)
      }
      
      static {
        defaultInstance = new Lobby(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientMMSGetLobbyListResponse.Lobby)
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 eresult = 3 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 3;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
    public static final int LOBBIES_FIELD_NUMBER = 4;
    private java.util.List<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby> lobbies_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby> getLobbiesList() {
      return lobbies_;
    }
    public int getLobbiesCount() { return lobbies_.size(); }
    public SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby getLobbies(int index) {
      return lobbies_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasEresult()) {
        output.writeInt32(3, getEresult());
      }
      for (SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby element : getLobbiesList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEresult());
      }
      for (SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby element : getLobbiesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSGetLobbyListResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSGetLobbyListResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSGetLobbyListResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSGetLobbyListResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSGetLobbyListResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSGetLobbyListResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSGetLobbyListResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyListResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSGetLobbyListResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSGetLobbyListResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSGetLobbyListResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyListResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.lobbies_ != java.util.Collections.EMPTY_LIST) {
          result.lobbies_ =
            java.util.Collections.unmodifiableList(result.lobbies_);
        }
        SteamMessages.CMsgClientMMSGetLobbyListResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSGetLobbyListResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSGetLobbyListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSGetLobbyListResponse other) {
        if (other == SteamMessages.CMsgClientMMSGetLobbyListResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (!other.lobbies_.isEmpty()) {
          if (result.lobbies_.isEmpty()) {
            result.lobbies_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby>();
          }
          result.lobbies_.addAll(other.lobbies_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 24: {
              setEresult(input.readInt32());
              break;
            }
            case 34: {
              SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.Builder subBuilder = SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLobbies(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 eresult = 3 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // repeated .CMsgClientMMSGetLobbyListResponse.Lobby lobbies = 4;
      public java.util.List<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby> getLobbiesList() {
        return java.util.Collections.unmodifiableList(result.lobbies_);
      }
      public int getLobbiesCount() {
        return result.getLobbiesCount();
      }
      public SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby getLobbies(int index) {
        return result.getLobbies(index);
      }
      public Builder setLobbies(int index, SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.lobbies_.set(index, value);
        return this;
      }
      public Builder setLobbies(int index, SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.Builder builderForValue) {
        result.lobbies_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLobbies(SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.lobbies_.isEmpty()) {
          result.lobbies_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby>();
        }
        result.lobbies_.add(value);
        return this;
      }
      public Builder addLobbies(SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.Builder builderForValue) {
        if (result.lobbies_.isEmpty()) {
          result.lobbies_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby>();
        }
        result.lobbies_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLobbies(
          java.lang.Iterable<? extends SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby> values) {
        if (result.lobbies_.isEmpty()) {
          result.lobbies_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby>();
        }
        super.addAll(values, result.lobbies_);
        return this;
      }
      public Builder clearLobbies() {
        result.lobbies_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSGetLobbyListResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSGetLobbyListResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSGetLobbyListResponse)
  }
  
  public static final class CMsgClientMMSSetLobbyData extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSetLobbyData.newBuilder() to construct.
    private CMsgClientMMSSetLobbyData() {
      initFields();
    }
    private CMsgClientMMSSetLobbyData(boolean noInit) {}
    
    private static final CMsgClientMMSSetLobbyData defaultInstance;
    public static CMsgClientMMSSetLobbyData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSetLobbyData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyData_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_member = 3;
    public static final int STEAM_ID_MEMBER_FIELD_NUMBER = 3;
    private boolean hasSteamIdMember;
    private long steamIdMember_ = 0L;
    public boolean hasSteamIdMember() { return hasSteamIdMember; }
    public long getSteamIdMember() { return steamIdMember_; }
    
    // optional int32 max_members = 4;
    public static final int MAX_MEMBERS_FIELD_NUMBER = 4;
    private boolean hasMaxMembers;
    private int maxMembers_ = 0;
    public boolean hasMaxMembers() { return hasMaxMembers; }
    public int getMaxMembers() { return maxMembers_; }
    
    // optional int32 lobby_type = 5;
    public static final int LOBBY_TYPE_FIELD_NUMBER = 5;
    private boolean hasLobbyType;
    private int lobbyType_ = 0;
    public boolean hasLobbyType() { return hasLobbyType; }
    public int getLobbyType() { return lobbyType_; }
    
    // optional int32 lobby_flags = 6;
    public static final int LOBBY_FLAGS_FIELD_NUMBER = 6;
    private boolean hasLobbyFlags;
    private int lobbyFlags_ = 0;
    public boolean hasLobbyFlags() { return hasLobbyFlags; }
    public int getLobbyFlags() { return lobbyFlags_; }
    
    // optional bytes metadata = 7;
    public static final int METADATA_FIELD_NUMBER = 7;
    private boolean hasMetadata;
    private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMetadata() { return hasMetadata; }
    public com.google.protobuf.ByteString getMetadata() { return metadata_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdMember()) {
        output.writeFixed64(3, getSteamIdMember());
      }
      if (hasMaxMembers()) {
        output.writeInt32(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        output.writeInt32(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        output.writeInt32(6, getLobbyFlags());
      }
      if (hasMetadata()) {
        output.writeBytes(7, getMetadata());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdMember()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdMember());
      }
      if (hasMaxMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getLobbyFlags());
      }
      if (hasMetadata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSetLobbyData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSetLobbyData result;
      
      // Construct using SteamMessages.CMsgClientMMSSetLobbyData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSetLobbyData();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSetLobbyData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSetLobbyData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSetLobbyData.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyData getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSetLobbyData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSetLobbyData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSetLobbyData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSetLobbyData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSetLobbyData) {
          return mergeFrom((SteamMessages.CMsgClientMMSSetLobbyData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSetLobbyData other) {
        if (other == SteamMessages.CMsgClientMMSSetLobbyData.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdMember()) {
          setSteamIdMember(other.getSteamIdMember());
        }
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasLobbyFlags()) {
          setLobbyFlags(other.getLobbyFlags());
        }
        if (other.hasMetadata()) {
          setMetadata(other.getMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdMember(input.readFixed64());
              break;
            }
            case 32: {
              setMaxMembers(input.readInt32());
              break;
            }
            case 40: {
              setLobbyType(input.readInt32());
              break;
            }
            case 48: {
              setLobbyFlags(input.readInt32());
              break;
            }
            case 58: {
              setMetadata(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_member = 3;
      public boolean hasSteamIdMember() {
        return result.hasSteamIdMember();
      }
      public long getSteamIdMember() {
        return result.getSteamIdMember();
      }
      public Builder setSteamIdMember(long value) {
        result.hasSteamIdMember = true;
        result.steamIdMember_ = value;
        return this;
      }
      public Builder clearSteamIdMember() {
        result.hasSteamIdMember = false;
        result.steamIdMember_ = 0L;
        return this;
      }
      
      // optional int32 max_members = 4;
      public boolean hasMaxMembers() {
        return result.hasMaxMembers();
      }
      public int getMaxMembers() {
        return result.getMaxMembers();
      }
      public Builder setMaxMembers(int value) {
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder clearMaxMembers() {
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      // optional int32 lobby_type = 5;
      public boolean hasLobbyType() {
        return result.hasLobbyType();
      }
      public int getLobbyType() {
        return result.getLobbyType();
      }
      public Builder setLobbyType(int value) {
        result.hasLobbyType = true;
        result.lobbyType_ = value;
        return this;
      }
      public Builder clearLobbyType() {
        result.hasLobbyType = false;
        result.lobbyType_ = 0;
        return this;
      }
      
      // optional int32 lobby_flags = 6;
      public boolean hasLobbyFlags() {
        return result.hasLobbyFlags();
      }
      public int getLobbyFlags() {
        return result.getLobbyFlags();
      }
      public Builder setLobbyFlags(int value) {
        result.hasLobbyFlags = true;
        result.lobbyFlags_ = value;
        return this;
      }
      public Builder clearLobbyFlags() {
        result.hasLobbyFlags = false;
        result.lobbyFlags_ = 0;
        return this;
      }
      
      // optional bytes metadata = 7;
      public boolean hasMetadata() {
        return result.hasMetadata();
      }
      public com.google.protobuf.ByteString getMetadata() {
        return result.getMetadata();
      }
      public Builder setMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
        result.metadata_ = value;
        return this;
      }
      public Builder clearMetadata() {
        result.hasMetadata = false;
        result.metadata_ = getDefaultInstance().getMetadata();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSetLobbyData)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSetLobbyData(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSetLobbyData)
  }
  
  public static final class CMsgClientMMSSetLobbyDataResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSetLobbyDataResponse.newBuilder() to construct.
    private CMsgClientMMSSetLobbyDataResponse() {
      initFields();
    }
    private CMsgClientMMSSetLobbyDataResponse(boolean noInit) {}
    
    private static final CMsgClientMMSSetLobbyDataResponse defaultInstance;
    public static CMsgClientMMSSetLobbyDataResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSetLobbyDataResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyDataResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyDataResponse_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 eresult = 3 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 3;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        output.writeInt32(3, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSetLobbyDataResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSetLobbyDataResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSSetLobbyDataResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSetLobbyDataResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSetLobbyDataResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSetLobbyDataResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSetLobbyDataResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyDataResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSetLobbyDataResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSetLobbyDataResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSetLobbyDataResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyDataResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSetLobbyDataResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSetLobbyDataResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSSetLobbyDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSetLobbyDataResponse other) {
        if (other == SteamMessages.CMsgClientMMSSetLobbyDataResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setEresult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 eresult = 3 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSetLobbyDataResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSetLobbyDataResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSetLobbyDataResponse)
  }
  
  public static final class CMsgClientMMSGetLobbyData extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSGetLobbyData.newBuilder() to construct.
    private CMsgClientMMSGetLobbyData() {
      initFields();
    }
    private CMsgClientMMSGetLobbyData(boolean noInit) {}
    
    private static final CMsgClientMMSGetLobbyData defaultInstance;
    public static CMsgClientMMSGetLobbyData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSGetLobbyData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSGetLobbyData_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSGetLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSGetLobbyData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSGetLobbyData result;
      
      // Construct using SteamMessages.CMsgClientMMSGetLobbyData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSGetLobbyData();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSGetLobbyData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSGetLobbyData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSGetLobbyData.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyData getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSGetLobbyData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSGetLobbyData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSGetLobbyData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSGetLobbyData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSGetLobbyData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSGetLobbyData) {
          return mergeFrom((SteamMessages.CMsgClientMMSGetLobbyData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSGetLobbyData other) {
        if (other == SteamMessages.CMsgClientMMSGetLobbyData.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSGetLobbyData)
    }
    
    static {
      defaultInstance = new CMsgClientMMSGetLobbyData(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSGetLobbyData)
  }
  
  public static final class CMsgClientMMSLobbyData extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSLobbyData.newBuilder() to construct.
    private CMsgClientMMSLobbyData() {
      initFields();
    }
    private CMsgClientMMSLobbyData(boolean noInit) {}
    
    private static final CMsgClientMMSLobbyData defaultInstance;
    public static CMsgClientMMSLobbyData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSLobbyData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyData_fieldAccessorTable;
    }
    
    public static final class Member extends
        com.google.protobuf.GeneratedMessage {
      // Use Member.newBuilder() to construct.
      private Member() {
        initFields();
      }
      private Member(boolean noInit) {}
      
      private static final Member defaultInstance;
      public static Member getDefaultInstance() {
        return defaultInstance;
      }
      
      public Member getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteamMessages.internal_static_CMsgClientMMSLobbyData_Member_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteamMessages.internal_static_CMsgClientMMSLobbyData_Member_fieldAccessorTable;
      }
      
      // optional fixed64 steam_id = 1;
      public static final int STEAM_ID_FIELD_NUMBER = 1;
      private boolean hasSteamId;
      private long steamId_ = 0L;
      public boolean hasSteamId() { return hasSteamId; }
      public long getSteamId() { return steamId_; }
      
      // optional string persona_name = 2;
      public static final int PERSONA_NAME_FIELD_NUMBER = 2;
      private boolean hasPersonaName;
      private java.lang.String personaName_ = "";
      public boolean hasPersonaName() { return hasPersonaName; }
      public java.lang.String getPersonaName() { return personaName_; }
      
      // optional bytes metadata = 3;
      public static final int METADATA_FIELD_NUMBER = 3;
      private boolean hasMetadata;
      private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMetadata() { return hasMetadata; }
      public com.google.protobuf.ByteString getMetadata() { return metadata_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSteamId()) {
          output.writeFixed64(1, getSteamId());
        }
        if (hasPersonaName()) {
          output.writeString(2, getPersonaName());
        }
        if (hasMetadata()) {
          output.writeBytes(3, getMetadata());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSteamId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, getSteamId());
        }
        if (hasPersonaName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getPersonaName());
        }
        if (hasMetadata()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getMetadata());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SteamMessages.CMsgClientMMSLobbyData.Member parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteamMessages.CMsgClientMMSLobbyData.Member prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private SteamMessages.CMsgClientMMSLobbyData.Member result;
        
        // Construct using SteamMessages.CMsgClientMMSLobbyData.Member.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new SteamMessages.CMsgClientMMSLobbyData.Member();
          return builder;
        }
        
        protected SteamMessages.CMsgClientMMSLobbyData.Member internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new SteamMessages.CMsgClientMMSLobbyData.Member();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteamMessages.CMsgClientMMSLobbyData.Member.getDescriptor();
        }
        
        public SteamMessages.CMsgClientMMSLobbyData.Member getDefaultInstanceForType() {
          return SteamMessages.CMsgClientMMSLobbyData.Member.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public SteamMessages.CMsgClientMMSLobbyData.Member build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private SteamMessages.CMsgClientMMSLobbyData.Member buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public SteamMessages.CMsgClientMMSLobbyData.Member buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          SteamMessages.CMsgClientMMSLobbyData.Member returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteamMessages.CMsgClientMMSLobbyData.Member) {
            return mergeFrom((SteamMessages.CMsgClientMMSLobbyData.Member)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SteamMessages.CMsgClientMMSLobbyData.Member other) {
          if (other == SteamMessages.CMsgClientMMSLobbyData.Member.getDefaultInstance()) return this;
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasPersonaName()) {
            setPersonaName(other.getPersonaName());
          }
          if (other.hasMetadata()) {
            setMetadata(other.getMetadata());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 9: {
                setSteamId(input.readFixed64());
                break;
              }
              case 18: {
                setPersonaName(input.readString());
                break;
              }
              case 26: {
                setMetadata(input.readBytes());
                break;
              }
            }
          }
        }
        
        
        // optional fixed64 steam_id = 1;
        public boolean hasSteamId() {
          return result.hasSteamId();
        }
        public long getSteamId() {
          return result.getSteamId();
        }
        public Builder setSteamId(long value) {
          result.hasSteamId = true;
          result.steamId_ = value;
          return this;
        }
        public Builder clearSteamId() {
          result.hasSteamId = false;
          result.steamId_ = 0L;
          return this;
        }
        
        // optional string persona_name = 2;
        public boolean hasPersonaName() {
          return result.hasPersonaName();
        }
        public java.lang.String getPersonaName() {
          return result.getPersonaName();
        }
        public Builder setPersonaName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
          result.personaName_ = value;
          return this;
        }
        public Builder clearPersonaName() {
          result.hasPersonaName = false;
          result.personaName_ = getDefaultInstance().getPersonaName();
          return this;
        }
        
        // optional bytes metadata = 3;
        public boolean hasMetadata() {
          return result.hasMetadata();
        }
        public com.google.protobuf.ByteString getMetadata() {
          return result.getMetadata();
        }
        public Builder setMetadata(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
          result.metadata_ = value;
          return this;
        }
        public Builder clearMetadata() {
          result.hasMetadata = false;
          result.metadata_ = getDefaultInstance().getMetadata();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CMsgClientMMSLobbyData.Member)
      }
      
      static {
        defaultInstance = new Member(true);
        SteamMessages.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CMsgClientMMSLobbyData.Member)
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 num_members = 3;
    public static final int NUM_MEMBERS_FIELD_NUMBER = 3;
    private boolean hasNumMembers;
    private int numMembers_ = 0;
    public boolean hasNumMembers() { return hasNumMembers; }
    public int getNumMembers() { return numMembers_; }
    
    // optional int32 max_members = 4;
    public static final int MAX_MEMBERS_FIELD_NUMBER = 4;
    private boolean hasMaxMembers;
    private int maxMembers_ = 0;
    public boolean hasMaxMembers() { return hasMaxMembers; }
    public int getMaxMembers() { return maxMembers_; }
    
    // optional int32 lobby_type = 5;
    public static final int LOBBY_TYPE_FIELD_NUMBER = 5;
    private boolean hasLobbyType;
    private int lobbyType_ = 0;
    public boolean hasLobbyType() { return hasLobbyType; }
    public int getLobbyType() { return lobbyType_; }
    
    // optional int32 lobby_flags = 6;
    public static final int LOBBY_FLAGS_FIELD_NUMBER = 6;
    private boolean hasLobbyFlags;
    private int lobbyFlags_ = 0;
    public boolean hasLobbyFlags() { return hasLobbyFlags; }
    public int getLobbyFlags() { return lobbyFlags_; }
    
    // optional fixed64 steam_id_owner = 7;
    public static final int STEAM_ID_OWNER_FIELD_NUMBER = 7;
    private boolean hasSteamIdOwner;
    private long steamIdOwner_ = 0L;
    public boolean hasSteamIdOwner() { return hasSteamIdOwner; }
    public long getSteamIdOwner() { return steamIdOwner_; }
    
    // optional bytes metadata = 8;
    public static final int METADATA_FIELD_NUMBER = 8;
    private boolean hasMetadata;
    private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMetadata() { return hasMetadata; }
    public com.google.protobuf.ByteString getMetadata() { return metadata_; }
    
    // repeated .CMsgClientMMSLobbyData.Member members = 9;
    public static final int MEMBERS_FIELD_NUMBER = 9;
    private java.util.List<SteamMessages.CMsgClientMMSLobbyData.Member> members_ =
      java.util.Collections.emptyList();
    public java.util.List<SteamMessages.CMsgClientMMSLobbyData.Member> getMembersList() {
      return members_;
    }
    public int getMembersCount() { return members_.size(); }
    public SteamMessages.CMsgClientMMSLobbyData.Member getMembers(int index) {
      return members_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasNumMembers()) {
        output.writeInt32(3, getNumMembers());
      }
      if (hasMaxMembers()) {
        output.writeInt32(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        output.writeInt32(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        output.writeInt32(6, getLobbyFlags());
      }
      if (hasSteamIdOwner()) {
        output.writeFixed64(7, getSteamIdOwner());
      }
      if (hasMetadata()) {
        output.writeBytes(8, getMetadata());
      }
      for (SteamMessages.CMsgClientMMSLobbyData.Member element : getMembersList()) {
        output.writeMessage(9, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasNumMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNumMembers());
      }
      if (hasMaxMembers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getMaxMembers());
      }
      if (hasLobbyType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLobbyType());
      }
      if (hasLobbyFlags()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getLobbyFlags());
      }
      if (hasSteamIdOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, getSteamIdOwner());
      }
      if (hasMetadata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMetadata());
      }
      for (SteamMessages.CMsgClientMMSLobbyData.Member element : getMembersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSLobbyData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSLobbyData result;
      
      // Construct using SteamMessages.CMsgClientMMSLobbyData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSLobbyData();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSLobbyData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSLobbyData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSLobbyData.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSLobbyData getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSLobbyData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSLobbyData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSLobbyData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSLobbyData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.members_ != java.util.Collections.EMPTY_LIST) {
          result.members_ =
            java.util.Collections.unmodifiableList(result.members_);
        }
        SteamMessages.CMsgClientMMSLobbyData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSLobbyData) {
          return mergeFrom((SteamMessages.CMsgClientMMSLobbyData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSLobbyData other) {
        if (other == SteamMessages.CMsgClientMMSLobbyData.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasNumMembers()) {
          setNumMembers(other.getNumMembers());
        }
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasLobbyFlags()) {
          setLobbyFlags(other.getLobbyFlags());
        }
        if (other.hasSteamIdOwner()) {
          setSteamIdOwner(other.getSteamIdOwner());
        }
        if (other.hasMetadata()) {
          setMetadata(other.getMetadata());
        }
        if (!other.members_.isEmpty()) {
          if (result.members_.isEmpty()) {
            result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSLobbyData.Member>();
          }
          result.members_.addAll(other.members_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setNumMembers(input.readInt32());
              break;
            }
            case 32: {
              setMaxMembers(input.readInt32());
              break;
            }
            case 40: {
              setLobbyType(input.readInt32());
              break;
            }
            case 48: {
              setLobbyFlags(input.readInt32());
              break;
            }
            case 57: {
              setSteamIdOwner(input.readFixed64());
              break;
            }
            case 66: {
              setMetadata(input.readBytes());
              break;
            }
            case 74: {
              SteamMessages.CMsgClientMMSLobbyData.Member.Builder subBuilder = SteamMessages.CMsgClientMMSLobbyData.Member.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMembers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 num_members = 3;
      public boolean hasNumMembers() {
        return result.hasNumMembers();
      }
      public int getNumMembers() {
        return result.getNumMembers();
      }
      public Builder setNumMembers(int value) {
        result.hasNumMembers = true;
        result.numMembers_ = value;
        return this;
      }
      public Builder clearNumMembers() {
        result.hasNumMembers = false;
        result.numMembers_ = 0;
        return this;
      }
      
      // optional int32 max_members = 4;
      public boolean hasMaxMembers() {
        return result.hasMaxMembers();
      }
      public int getMaxMembers() {
        return result.getMaxMembers();
      }
      public Builder setMaxMembers(int value) {
        result.hasMaxMembers = true;
        result.maxMembers_ = value;
        return this;
      }
      public Builder clearMaxMembers() {
        result.hasMaxMembers = false;
        result.maxMembers_ = 0;
        return this;
      }
      
      // optional int32 lobby_type = 5;
      public boolean hasLobbyType() {
        return result.hasLobbyType();
      }
      public int getLobbyType() {
        return result.getLobbyType();
      }
      public Builder setLobbyType(int value) {
        result.hasLobbyType = true;
        result.lobbyType_ = value;
        return this;
      }
      public Builder clearLobbyType() {
        result.hasLobbyType = false;
        result.lobbyType_ = 0;
        return this;
      }
      
      // optional int32 lobby_flags = 6;
      public boolean hasLobbyFlags() {
        return result.hasLobbyFlags();
      }
      public int getLobbyFlags() {
        return result.getLobbyFlags();
      }
      public Builder setLobbyFlags(int value) {
        result.hasLobbyFlags = true;
        result.lobbyFlags_ = value;
        return this;
      }
      public Builder clearLobbyFlags() {
        result.hasLobbyFlags = false;
        result.lobbyFlags_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_owner = 7;
      public boolean hasSteamIdOwner() {
        return result.hasSteamIdOwner();
      }
      public long getSteamIdOwner() {
        return result.getSteamIdOwner();
      }
      public Builder setSteamIdOwner(long value) {
        result.hasSteamIdOwner = true;
        result.steamIdOwner_ = value;
        return this;
      }
      public Builder clearSteamIdOwner() {
        result.hasSteamIdOwner = false;
        result.steamIdOwner_ = 0L;
        return this;
      }
      
      // optional bytes metadata = 8;
      public boolean hasMetadata() {
        return result.hasMetadata();
      }
      public com.google.protobuf.ByteString getMetadata() {
        return result.getMetadata();
      }
      public Builder setMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMetadata = true;
        result.metadata_ = value;
        return this;
      }
      public Builder clearMetadata() {
        result.hasMetadata = false;
        result.metadata_ = getDefaultInstance().getMetadata();
        return this;
      }
      
      // repeated .CMsgClientMMSLobbyData.Member members = 9;
      public java.util.List<SteamMessages.CMsgClientMMSLobbyData.Member> getMembersList() {
        return java.util.Collections.unmodifiableList(result.members_);
      }
      public int getMembersCount() {
        return result.getMembersCount();
      }
      public SteamMessages.CMsgClientMMSLobbyData.Member getMembers(int index) {
        return result.getMembers(index);
      }
      public Builder setMembers(int index, SteamMessages.CMsgClientMMSLobbyData.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.members_.set(index, value);
        return this;
      }
      public Builder setMembers(int index, SteamMessages.CMsgClientMMSLobbyData.Member.Builder builderForValue) {
        result.members_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMembers(SteamMessages.CMsgClientMMSLobbyData.Member value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSLobbyData.Member>();
        }
        result.members_.add(value);
        return this;
      }
      public Builder addMembers(SteamMessages.CMsgClientMMSLobbyData.Member.Builder builderForValue) {
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSLobbyData.Member>();
        }
        result.members_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMembers(
          java.lang.Iterable<? extends SteamMessages.CMsgClientMMSLobbyData.Member> values) {
        if (result.members_.isEmpty()) {
          result.members_ = new java.util.ArrayList<SteamMessages.CMsgClientMMSLobbyData.Member>();
        }
        super.addAll(values, result.members_);
        return this;
      }
      public Builder clearMembers() {
        result.members_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSLobbyData)
    }
    
    static {
      defaultInstance = new CMsgClientMMSLobbyData(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSLobbyData)
  }
  
  public static final class CMsgClientMMSSendLobbyChatMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSendLobbyChatMsg.newBuilder() to construct.
    private CMsgClientMMSSendLobbyChatMsg() {
      initFields();
    }
    private CMsgClientMMSSendLobbyChatMsg(boolean noInit) {}
    
    private static final CMsgClientMMSSendLobbyChatMsg defaultInstance;
    public static CMsgClientMMSSendLobbyChatMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSendLobbyChatMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSendLobbyChatMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSendLobbyChatMsg_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_target = 3;
    public static final int STEAM_ID_TARGET_FIELD_NUMBER = 3;
    private boolean hasSteamIdTarget;
    private long steamIdTarget_ = 0L;
    public boolean hasSteamIdTarget() { return hasSteamIdTarget; }
    public long getSteamIdTarget() { return steamIdTarget_; }
    
    // optional bytes lobby_message = 4;
    public static final int LOBBY_MESSAGE_FIELD_NUMBER = 4;
    private boolean hasLobbyMessage;
    private com.google.protobuf.ByteString lobbyMessage_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasLobbyMessage() { return hasLobbyMessage; }
    public com.google.protobuf.ByteString getLobbyMessage() { return lobbyMessage_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdTarget()) {
        output.writeFixed64(3, getSteamIdTarget());
      }
      if (hasLobbyMessage()) {
        output.writeBytes(4, getLobbyMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdTarget()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdTarget());
      }
      if (hasLobbyMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLobbyMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSendLobbyChatMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSendLobbyChatMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSendLobbyChatMsg result;
      
      // Construct using SteamMessages.CMsgClientMMSSendLobbyChatMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSendLobbyChatMsg();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSendLobbyChatMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSendLobbyChatMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSendLobbyChatMsg.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSendLobbyChatMsg getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSendLobbyChatMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSendLobbyChatMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSendLobbyChatMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSendLobbyChatMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSendLobbyChatMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSendLobbyChatMsg) {
          return mergeFrom((SteamMessages.CMsgClientMMSSendLobbyChatMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSendLobbyChatMsg other) {
        if (other == SteamMessages.CMsgClientMMSSendLobbyChatMsg.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdTarget()) {
          setSteamIdTarget(other.getSteamIdTarget());
        }
        if (other.hasLobbyMessage()) {
          setLobbyMessage(other.getLobbyMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdTarget(input.readFixed64());
              break;
            }
            case 34: {
              setLobbyMessage(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_target = 3;
      public boolean hasSteamIdTarget() {
        return result.hasSteamIdTarget();
      }
      public long getSteamIdTarget() {
        return result.getSteamIdTarget();
      }
      public Builder setSteamIdTarget(long value) {
        result.hasSteamIdTarget = true;
        result.steamIdTarget_ = value;
        return this;
      }
      public Builder clearSteamIdTarget() {
        result.hasSteamIdTarget = false;
        result.steamIdTarget_ = 0L;
        return this;
      }
      
      // optional bytes lobby_message = 4;
      public boolean hasLobbyMessage() {
        return result.hasLobbyMessage();
      }
      public com.google.protobuf.ByteString getLobbyMessage() {
        return result.getLobbyMessage();
      }
      public Builder setLobbyMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLobbyMessage = true;
        result.lobbyMessage_ = value;
        return this;
      }
      public Builder clearLobbyMessage() {
        result.hasLobbyMessage = false;
        result.lobbyMessage_ = getDefaultInstance().getLobbyMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSendLobbyChatMsg)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSendLobbyChatMsg(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSendLobbyChatMsg)
  }
  
  public static final class CMsgClientMMSLobbyChatMsg extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSLobbyChatMsg.newBuilder() to construct.
    private CMsgClientMMSLobbyChatMsg() {
      initFields();
    }
    private CMsgClientMMSLobbyChatMsg(boolean noInit) {}
    
    private static final CMsgClientMMSLobbyChatMsg defaultInstance;
    public static CMsgClientMMSLobbyChatMsg getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSLobbyChatMsg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyChatMsg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyChatMsg_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_sender = 3;
    public static final int STEAM_ID_SENDER_FIELD_NUMBER = 3;
    private boolean hasSteamIdSender;
    private long steamIdSender_ = 0L;
    public boolean hasSteamIdSender() { return hasSteamIdSender; }
    public long getSteamIdSender() { return steamIdSender_; }
    
    // optional bytes lobby_message = 4;
    public static final int LOBBY_MESSAGE_FIELD_NUMBER = 4;
    private boolean hasLobbyMessage;
    private com.google.protobuf.ByteString lobbyMessage_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasLobbyMessage() { return hasLobbyMessage; }
    public com.google.protobuf.ByteString getLobbyMessage() { return lobbyMessage_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdSender()) {
        output.writeFixed64(3, getSteamIdSender());
      }
      if (hasLobbyMessage()) {
        output.writeBytes(4, getLobbyMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdSender()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdSender());
      }
      if (hasLobbyMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLobbyMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyChatMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSLobbyChatMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSLobbyChatMsg result;
      
      // Construct using SteamMessages.CMsgClientMMSLobbyChatMsg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSLobbyChatMsg();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSLobbyChatMsg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSLobbyChatMsg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSLobbyChatMsg.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSLobbyChatMsg getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSLobbyChatMsg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSLobbyChatMsg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSLobbyChatMsg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSLobbyChatMsg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSLobbyChatMsg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSLobbyChatMsg) {
          return mergeFrom((SteamMessages.CMsgClientMMSLobbyChatMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSLobbyChatMsg other) {
        if (other == SteamMessages.CMsgClientMMSLobbyChatMsg.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdSender()) {
          setSteamIdSender(other.getSteamIdSender());
        }
        if (other.hasLobbyMessage()) {
          setLobbyMessage(other.getLobbyMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdSender(input.readFixed64());
              break;
            }
            case 34: {
              setLobbyMessage(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_sender = 3;
      public boolean hasSteamIdSender() {
        return result.hasSteamIdSender();
      }
      public long getSteamIdSender() {
        return result.getSteamIdSender();
      }
      public Builder setSteamIdSender(long value) {
        result.hasSteamIdSender = true;
        result.steamIdSender_ = value;
        return this;
      }
      public Builder clearSteamIdSender() {
        result.hasSteamIdSender = false;
        result.steamIdSender_ = 0L;
        return this;
      }
      
      // optional bytes lobby_message = 4;
      public boolean hasLobbyMessage() {
        return result.hasLobbyMessage();
      }
      public com.google.protobuf.ByteString getLobbyMessage() {
        return result.getLobbyMessage();
      }
      public Builder setLobbyMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLobbyMessage = true;
        result.lobbyMessage_ = value;
        return this;
      }
      public Builder clearLobbyMessage() {
        result.hasLobbyMessage = false;
        result.lobbyMessage_ = getDefaultInstance().getLobbyMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSLobbyChatMsg)
    }
    
    static {
      defaultInstance = new CMsgClientMMSLobbyChatMsg(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSLobbyChatMsg)
  }
  
  public static final class CMsgClientMMSSetLobbyOwner extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSetLobbyOwner.newBuilder() to construct.
    private CMsgClientMMSSetLobbyOwner() {
      initFields();
    }
    private CMsgClientMMSSetLobbyOwner(boolean noInit) {}
    
    private static final CMsgClientMMSSetLobbyOwner defaultInstance;
    public static CMsgClientMMSSetLobbyOwner getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSetLobbyOwner getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyOwner_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyOwner_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_new_owner = 3;
    public static final int STEAM_ID_NEW_OWNER_FIELD_NUMBER = 3;
    private boolean hasSteamIdNewOwner;
    private long steamIdNewOwner_ = 0L;
    public boolean hasSteamIdNewOwner() { return hasSteamIdNewOwner; }
    public long getSteamIdNewOwner() { return steamIdNewOwner_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdNewOwner()) {
        output.writeFixed64(3, getSteamIdNewOwner());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdNewOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdNewOwner());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSetLobbyOwner prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSetLobbyOwner result;
      
      // Construct using SteamMessages.CMsgClientMMSSetLobbyOwner.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSetLobbyOwner();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSetLobbyOwner internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSetLobbyOwner();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSetLobbyOwner.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyOwner getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSetLobbyOwner.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSetLobbyOwner build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSetLobbyOwner buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyOwner buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSetLobbyOwner returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSetLobbyOwner) {
          return mergeFrom((SteamMessages.CMsgClientMMSSetLobbyOwner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSetLobbyOwner other) {
        if (other == SteamMessages.CMsgClientMMSSetLobbyOwner.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdNewOwner()) {
          setSteamIdNewOwner(other.getSteamIdNewOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdNewOwner(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_new_owner = 3;
      public boolean hasSteamIdNewOwner() {
        return result.hasSteamIdNewOwner();
      }
      public long getSteamIdNewOwner() {
        return result.getSteamIdNewOwner();
      }
      public Builder setSteamIdNewOwner(long value) {
        result.hasSteamIdNewOwner = true;
        result.steamIdNewOwner_ = value;
        return this;
      }
      public Builder clearSteamIdNewOwner() {
        result.hasSteamIdNewOwner = false;
        result.steamIdNewOwner_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSetLobbyOwner)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSetLobbyOwner(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSetLobbyOwner)
  }
  
  public static final class CMsgClientMMSSetLobbyOwnerResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSetLobbyOwnerResponse.newBuilder() to construct.
    private CMsgClientMMSSetLobbyOwnerResponse() {
      initFields();
    }
    private CMsgClientMMSSetLobbyOwnerResponse(boolean noInit) {}
    
    private static final CMsgClientMMSSetLobbyOwnerResponse defaultInstance;
    public static CMsgClientMMSSetLobbyOwnerResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSetLobbyOwnerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyOwnerResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyOwnerResponse_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional int32 eresult = 3 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 3;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        output.writeInt32(3, getEresult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEresult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSetLobbyOwnerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSetLobbyOwnerResponse result;
      
      // Construct using SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSetLobbyOwnerResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSetLobbyOwnerResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSetLobbyOwnerResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyOwnerResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSetLobbyOwnerResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSetLobbyOwnerResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyOwnerResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSetLobbyOwnerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSetLobbyOwnerResponse) {
          return mergeFrom((SteamMessages.CMsgClientMMSSetLobbyOwnerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSetLobbyOwnerResponse other) {
        if (other == SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setEresult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional int32 eresult = 3 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSetLobbyOwnerResponse)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSetLobbyOwnerResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSetLobbyOwnerResponse)
  }
  
  public static final class CMsgClientMMSSetLobbyGameServer extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSSetLobbyGameServer.newBuilder() to construct.
    private CMsgClientMMSSetLobbyGameServer() {
      initFields();
    }
    private CMsgClientMMSSetLobbyGameServer(boolean noInit) {}
    
    private static final CMsgClientMMSSetLobbyGameServer defaultInstance;
    public static CMsgClientMMSSetLobbyGameServer getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSSetLobbyGameServer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyGameServer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSSetLobbyGameServer_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional uint32 game_server_ip = 3;
    public static final int GAME_SERVER_IP_FIELD_NUMBER = 3;
    private boolean hasGameServerIp;
    private int gameServerIp_ = 0;
    public boolean hasGameServerIp() { return hasGameServerIp; }
    public int getGameServerIp() { return gameServerIp_; }
    
    // optional uint32 game_server_port = 4;
    public static final int GAME_SERVER_PORT_FIELD_NUMBER = 4;
    private boolean hasGameServerPort;
    private int gameServerPort_ = 0;
    public boolean hasGameServerPort() { return hasGameServerPort; }
    public int getGameServerPort() { return gameServerPort_; }
    
    // optional fixed64 game_server_steam_id = 5;
    public static final int GAME_SERVER_STEAM_ID_FIELD_NUMBER = 5;
    private boolean hasGameServerSteamId;
    private long gameServerSteamId_ = 0L;
    public boolean hasGameServerSteamId() { return hasGameServerSteamId; }
    public long getGameServerSteamId() { return gameServerSteamId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasGameServerIp()) {
        output.writeUInt32(3, getGameServerIp());
      }
      if (hasGameServerPort()) {
        output.writeUInt32(4, getGameServerPort());
      }
      if (hasGameServerSteamId()) {
        output.writeFixed64(5, getGameServerSteamId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasGameServerIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getGameServerIp());
      }
      if (hasGameServerPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getGameServerPort());
      }
      if (hasGameServerSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, getGameServerSteamId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSSetLobbyGameServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSSetLobbyGameServer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSSetLobbyGameServer result;
      
      // Construct using SteamMessages.CMsgClientMMSSetLobbyGameServer.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSSetLobbyGameServer();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSSetLobbyGameServer internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSSetLobbyGameServer();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSSetLobbyGameServer.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyGameServer getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSSetLobbyGameServer.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSSetLobbyGameServer build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSSetLobbyGameServer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSSetLobbyGameServer buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSSetLobbyGameServer returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSSetLobbyGameServer) {
          return mergeFrom((SteamMessages.CMsgClientMMSSetLobbyGameServer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSSetLobbyGameServer other) {
        if (other == SteamMessages.CMsgClientMMSSetLobbyGameServer.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasGameServerIp()) {
          setGameServerIp(other.getGameServerIp());
        }
        if (other.hasGameServerPort()) {
          setGameServerPort(other.getGameServerPort());
        }
        if (other.hasGameServerSteamId()) {
          setGameServerSteamId(other.getGameServerSteamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setGameServerIp(input.readUInt32());
              break;
            }
            case 32: {
              setGameServerPort(input.readUInt32());
              break;
            }
            case 41: {
              setGameServerSteamId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional uint32 game_server_ip = 3;
      public boolean hasGameServerIp() {
        return result.hasGameServerIp();
      }
      public int getGameServerIp() {
        return result.getGameServerIp();
      }
      public Builder setGameServerIp(int value) {
        result.hasGameServerIp = true;
        result.gameServerIp_ = value;
        return this;
      }
      public Builder clearGameServerIp() {
        result.hasGameServerIp = false;
        result.gameServerIp_ = 0;
        return this;
      }
      
      // optional uint32 game_server_port = 4;
      public boolean hasGameServerPort() {
        return result.hasGameServerPort();
      }
      public int getGameServerPort() {
        return result.getGameServerPort();
      }
      public Builder setGameServerPort(int value) {
        result.hasGameServerPort = true;
        result.gameServerPort_ = value;
        return this;
      }
      public Builder clearGameServerPort() {
        result.hasGameServerPort = false;
        result.gameServerPort_ = 0;
        return this;
      }
      
      // optional fixed64 game_server_steam_id = 5;
      public boolean hasGameServerSteamId() {
        return result.hasGameServerSteamId();
      }
      public long getGameServerSteamId() {
        return result.getGameServerSteamId();
      }
      public Builder setGameServerSteamId(long value) {
        result.hasGameServerSteamId = true;
        result.gameServerSteamId_ = value;
        return this;
      }
      public Builder clearGameServerSteamId() {
        result.hasGameServerSteamId = false;
        result.gameServerSteamId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSSetLobbyGameServer)
    }
    
    static {
      defaultInstance = new CMsgClientMMSSetLobbyGameServer(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSSetLobbyGameServer)
  }
  
  public static final class CMsgClientMMSLobbyGameServerSet extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSLobbyGameServerSet.newBuilder() to construct.
    private CMsgClientMMSLobbyGameServerSet() {
      initFields();
    }
    private CMsgClientMMSLobbyGameServerSet(boolean noInit) {}
    
    private static final CMsgClientMMSLobbyGameServerSet defaultInstance;
    public static CMsgClientMMSLobbyGameServerSet getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSLobbyGameServerSet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyGameServerSet_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSLobbyGameServerSet_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional uint32 game_server_ip = 3;
    public static final int GAME_SERVER_IP_FIELD_NUMBER = 3;
    private boolean hasGameServerIp;
    private int gameServerIp_ = 0;
    public boolean hasGameServerIp() { return hasGameServerIp; }
    public int getGameServerIp() { return gameServerIp_; }
    
    // optional uint32 game_server_port = 4;
    public static final int GAME_SERVER_PORT_FIELD_NUMBER = 4;
    private boolean hasGameServerPort;
    private int gameServerPort_ = 0;
    public boolean hasGameServerPort() { return hasGameServerPort; }
    public int getGameServerPort() { return gameServerPort_; }
    
    // optional fixed64 game_server_steam_id = 5;
    public static final int GAME_SERVER_STEAM_ID_FIELD_NUMBER = 5;
    private boolean hasGameServerSteamId;
    private long gameServerSteamId_ = 0L;
    public boolean hasGameServerSteamId() { return hasGameServerSteamId; }
    public long getGameServerSteamId() { return gameServerSteamId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasGameServerIp()) {
        output.writeUInt32(3, getGameServerIp());
      }
      if (hasGameServerPort()) {
        output.writeUInt32(4, getGameServerPort());
      }
      if (hasGameServerSteamId()) {
        output.writeFixed64(5, getGameServerSteamId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasGameServerIp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getGameServerIp());
      }
      if (hasGameServerPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getGameServerPort());
      }
      if (hasGameServerSteamId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, getGameServerSteamId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSLobbyGameServerSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSLobbyGameServerSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSLobbyGameServerSet result;
      
      // Construct using SteamMessages.CMsgClientMMSLobbyGameServerSet.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSLobbyGameServerSet();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSLobbyGameServerSet internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSLobbyGameServerSet();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSLobbyGameServerSet.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSLobbyGameServerSet getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSLobbyGameServerSet.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSLobbyGameServerSet build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSLobbyGameServerSet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSLobbyGameServerSet buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSLobbyGameServerSet returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSLobbyGameServerSet) {
          return mergeFrom((SteamMessages.CMsgClientMMSLobbyGameServerSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSLobbyGameServerSet other) {
        if (other == SteamMessages.CMsgClientMMSLobbyGameServerSet.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasGameServerIp()) {
          setGameServerIp(other.getGameServerIp());
        }
        if (other.hasGameServerPort()) {
          setGameServerPort(other.getGameServerPort());
        }
        if (other.hasGameServerSteamId()) {
          setGameServerSteamId(other.getGameServerSteamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 24: {
              setGameServerIp(input.readUInt32());
              break;
            }
            case 32: {
              setGameServerPort(input.readUInt32());
              break;
            }
            case 41: {
              setGameServerSteamId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional uint32 game_server_ip = 3;
      public boolean hasGameServerIp() {
        return result.hasGameServerIp();
      }
      public int getGameServerIp() {
        return result.getGameServerIp();
      }
      public Builder setGameServerIp(int value) {
        result.hasGameServerIp = true;
        result.gameServerIp_ = value;
        return this;
      }
      public Builder clearGameServerIp() {
        result.hasGameServerIp = false;
        result.gameServerIp_ = 0;
        return this;
      }
      
      // optional uint32 game_server_port = 4;
      public boolean hasGameServerPort() {
        return result.hasGameServerPort();
      }
      public int getGameServerPort() {
        return result.getGameServerPort();
      }
      public Builder setGameServerPort(int value) {
        result.hasGameServerPort = true;
        result.gameServerPort_ = value;
        return this;
      }
      public Builder clearGameServerPort() {
        result.hasGameServerPort = false;
        result.gameServerPort_ = 0;
        return this;
      }
      
      // optional fixed64 game_server_steam_id = 5;
      public boolean hasGameServerSteamId() {
        return result.hasGameServerSteamId();
      }
      public long getGameServerSteamId() {
        return result.getGameServerSteamId();
      }
      public Builder setGameServerSteamId(long value) {
        result.hasGameServerSteamId = true;
        result.gameServerSteamId_ = value;
        return this;
      }
      public Builder clearGameServerSteamId() {
        result.hasGameServerSteamId = false;
        result.gameServerSteamId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSLobbyGameServerSet)
    }
    
    static {
      defaultInstance = new CMsgClientMMSLobbyGameServerSet(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSLobbyGameServerSet)
  }
  
  public static final class CMsgClientMMSUserJoinedLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSUserJoinedLobby.newBuilder() to construct.
    private CMsgClientMMSUserJoinedLobby() {
      initFields();
    }
    private CMsgClientMMSUserJoinedLobby(boolean noInit) {}
    
    private static final CMsgClientMMSUserJoinedLobby defaultInstance;
    public static CMsgClientMMSUserJoinedLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSUserJoinedLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSUserJoinedLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSUserJoinedLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_user = 3;
    public static final int STEAM_ID_USER_FIELD_NUMBER = 3;
    private boolean hasSteamIdUser;
    private long steamIdUser_ = 0L;
    public boolean hasSteamIdUser() { return hasSteamIdUser; }
    public long getSteamIdUser() { return steamIdUser_; }
    
    // optional string persona_name = 4;
    public static final int PERSONA_NAME_FIELD_NUMBER = 4;
    private boolean hasPersonaName;
    private java.lang.String personaName_ = "";
    public boolean hasPersonaName() { return hasPersonaName; }
    public java.lang.String getPersonaName() { return personaName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdUser()) {
        output.writeFixed64(3, getSteamIdUser());
      }
      if (hasPersonaName()) {
        output.writeString(4, getPersonaName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdUser()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdUser());
      }
      if (hasPersonaName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPersonaName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserJoinedLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSUserJoinedLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSUserJoinedLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSUserJoinedLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSUserJoinedLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSUserJoinedLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSUserJoinedLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSUserJoinedLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSUserJoinedLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSUserJoinedLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSUserJoinedLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSUserJoinedLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSUserJoinedLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSUserJoinedLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSUserJoinedLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSUserJoinedLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSUserJoinedLobby other) {
        if (other == SteamMessages.CMsgClientMMSUserJoinedLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdUser()) {
          setSteamIdUser(other.getSteamIdUser());
        }
        if (other.hasPersonaName()) {
          setPersonaName(other.getPersonaName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdUser(input.readFixed64());
              break;
            }
            case 34: {
              setPersonaName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_user = 3;
      public boolean hasSteamIdUser() {
        return result.hasSteamIdUser();
      }
      public long getSteamIdUser() {
        return result.getSteamIdUser();
      }
      public Builder setSteamIdUser(long value) {
        result.hasSteamIdUser = true;
        result.steamIdUser_ = value;
        return this;
      }
      public Builder clearSteamIdUser() {
        result.hasSteamIdUser = false;
        result.steamIdUser_ = 0L;
        return this;
      }
      
      // optional string persona_name = 4;
      public boolean hasPersonaName() {
        return result.hasPersonaName();
      }
      public java.lang.String getPersonaName() {
        return result.getPersonaName();
      }
      public Builder setPersonaName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
        result.personaName_ = value;
        return this;
      }
      public Builder clearPersonaName() {
        result.hasPersonaName = false;
        result.personaName_ = getDefaultInstance().getPersonaName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSUserJoinedLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSUserJoinedLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSUserJoinedLobby)
  }
  
  public static final class CMsgClientMMSUserLeftLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSUserLeftLobby.newBuilder() to construct.
    private CMsgClientMMSUserLeftLobby() {
      initFields();
    }
    private CMsgClientMMSUserLeftLobby(boolean noInit) {}
    
    private static final CMsgClientMMSUserLeftLobby defaultInstance;
    public static CMsgClientMMSUserLeftLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSUserLeftLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSUserLeftLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSUserLeftLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_user = 3;
    public static final int STEAM_ID_USER_FIELD_NUMBER = 3;
    private boolean hasSteamIdUser;
    private long steamIdUser_ = 0L;
    public boolean hasSteamIdUser() { return hasSteamIdUser; }
    public long getSteamIdUser() { return steamIdUser_; }
    
    // optional string persona_name = 4;
    public static final int PERSONA_NAME_FIELD_NUMBER = 4;
    private boolean hasPersonaName;
    private java.lang.String personaName_ = "";
    public boolean hasPersonaName() { return hasPersonaName; }
    public java.lang.String getPersonaName() { return personaName_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdUser()) {
        output.writeFixed64(3, getSteamIdUser());
      }
      if (hasPersonaName()) {
        output.writeString(4, getPersonaName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdUser()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdUser());
      }
      if (hasPersonaName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPersonaName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSUserLeftLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSUserLeftLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSUserLeftLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSUserLeftLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSUserLeftLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSUserLeftLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSUserLeftLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSUserLeftLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSUserLeftLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSUserLeftLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSUserLeftLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSUserLeftLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSUserLeftLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSUserLeftLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSUserLeftLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSUserLeftLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSUserLeftLobby other) {
        if (other == SteamMessages.CMsgClientMMSUserLeftLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdUser()) {
          setSteamIdUser(other.getSteamIdUser());
        }
        if (other.hasPersonaName()) {
          setPersonaName(other.getPersonaName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdUser(input.readFixed64());
              break;
            }
            case 34: {
              setPersonaName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_user = 3;
      public boolean hasSteamIdUser() {
        return result.hasSteamIdUser();
      }
      public long getSteamIdUser() {
        return result.getSteamIdUser();
      }
      public Builder setSteamIdUser(long value) {
        result.hasSteamIdUser = true;
        result.steamIdUser_ = value;
        return this;
      }
      public Builder clearSteamIdUser() {
        result.hasSteamIdUser = false;
        result.steamIdUser_ = 0L;
        return this;
      }
      
      // optional string persona_name = 4;
      public boolean hasPersonaName() {
        return result.hasPersonaName();
      }
      public java.lang.String getPersonaName() {
        return result.getPersonaName();
      }
      public Builder setPersonaName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPersonaName = true;
        result.personaName_ = value;
        return this;
      }
      public Builder clearPersonaName() {
        result.hasPersonaName = false;
        result.personaName_ = getDefaultInstance().getPersonaName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSUserLeftLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSUserLeftLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSUserLeftLobby)
  }
  
  public static final class CMsgClientMMSInviteToLobby extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientMMSInviteToLobby.newBuilder() to construct.
    private CMsgClientMMSInviteToLobby() {
      initFields();
    }
    private CMsgClientMMSInviteToLobby(boolean noInit) {}
    
    private static final CMsgClientMMSInviteToLobby defaultInstance;
    public static CMsgClientMMSInviteToLobby getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientMMSInviteToLobby getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientMMSInviteToLobby_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientMMSInviteToLobby_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional fixed64 steam_id_lobby = 2;
    public static final int STEAM_ID_LOBBY_FIELD_NUMBER = 2;
    private boolean hasSteamIdLobby;
    private long steamIdLobby_ = 0L;
    public boolean hasSteamIdLobby() { return hasSteamIdLobby; }
    public long getSteamIdLobby() { return steamIdLobby_; }
    
    // optional fixed64 steam_id_user_invited = 3;
    public static final int STEAM_ID_USER_INVITED_FIELD_NUMBER = 3;
    private boolean hasSteamIdUserInvited;
    private long steamIdUserInvited_ = 0L;
    public boolean hasSteamIdUserInvited() { return hasSteamIdUserInvited; }
    public long getSteamIdUserInvited() { return steamIdUserInvited_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        output.writeFixed64(2, getSteamIdLobby());
      }
      if (hasSteamIdUserInvited()) {
        output.writeFixed64(3, getSteamIdUserInvited());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasSteamIdLobby()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdLobby());
      }
      if (hasSteamIdUserInvited()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdUserInvited());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientMMSInviteToLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientMMSInviteToLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientMMSInviteToLobby result;
      
      // Construct using SteamMessages.CMsgClientMMSInviteToLobby.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientMMSInviteToLobby();
        return builder;
      }
      
      protected SteamMessages.CMsgClientMMSInviteToLobby internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientMMSInviteToLobby();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientMMSInviteToLobby.getDescriptor();
      }
      
      public SteamMessages.CMsgClientMMSInviteToLobby getDefaultInstanceForType() {
        return SteamMessages.CMsgClientMMSInviteToLobby.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientMMSInviteToLobby build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientMMSInviteToLobby buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientMMSInviteToLobby buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientMMSInviteToLobby returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientMMSInviteToLobby) {
          return mergeFrom((SteamMessages.CMsgClientMMSInviteToLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientMMSInviteToLobby other) {
        if (other == SteamMessages.CMsgClientMMSInviteToLobby.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamIdLobby()) {
          setSteamIdLobby(other.getSteamIdLobby());
        }
        if (other.hasSteamIdUserInvited()) {
          setSteamIdUserInvited(other.getSteamIdUserInvited());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 17: {
              setSteamIdLobby(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdUserInvited(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_lobby = 2;
      public boolean hasSteamIdLobby() {
        return result.hasSteamIdLobby();
      }
      public long getSteamIdLobby() {
        return result.getSteamIdLobby();
      }
      public Builder setSteamIdLobby(long value) {
        result.hasSteamIdLobby = true;
        result.steamIdLobby_ = value;
        return this;
      }
      public Builder clearSteamIdLobby() {
        result.hasSteamIdLobby = false;
        result.steamIdLobby_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_user_invited = 3;
      public boolean hasSteamIdUserInvited() {
        return result.hasSteamIdUserInvited();
      }
      public long getSteamIdUserInvited() {
        return result.getSteamIdUserInvited();
      }
      public Builder setSteamIdUserInvited(long value) {
        result.hasSteamIdUserInvited = true;
        result.steamIdUserInvited_ = value;
        return this;
      }
      public Builder clearSteamIdUserInvited() {
        result.hasSteamIdUserInvited = false;
        result.steamIdUserInvited_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientMMSInviteToLobby)
    }
    
    static {
      defaultInstance = new CMsgClientMMSInviteToLobby(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientMMSInviteToLobby)
  }
  
  public static final class CMsgClientChatInvite extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientChatInvite.newBuilder() to construct.
    private CMsgClientChatInvite() {
      initFields();
    }
    private CMsgClientChatInvite(boolean noInit) {}
    
    private static final CMsgClientChatInvite defaultInstance;
    public static CMsgClientChatInvite getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientChatInvite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientChatInvite_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientChatInvite_fieldAccessorTable;
    }
    
    // optional fixed64 steam_id_invited = 1;
    public static final int STEAM_ID_INVITED_FIELD_NUMBER = 1;
    private boolean hasSteamIdInvited;
    private long steamIdInvited_ = 0L;
    public boolean hasSteamIdInvited() { return hasSteamIdInvited; }
    public long getSteamIdInvited() { return steamIdInvited_; }
    
    // optional fixed64 steam_id_chat = 2;
    public static final int STEAM_ID_CHAT_FIELD_NUMBER = 2;
    private boolean hasSteamIdChat;
    private long steamIdChat_ = 0L;
    public boolean hasSteamIdChat() { return hasSteamIdChat; }
    public long getSteamIdChat() { return steamIdChat_; }
    
    // optional fixed64 steam_id_patron = 3;
    public static final int STEAM_ID_PATRON_FIELD_NUMBER = 3;
    private boolean hasSteamIdPatron;
    private long steamIdPatron_ = 0L;
    public boolean hasSteamIdPatron() { return hasSteamIdPatron; }
    public long getSteamIdPatron() { return steamIdPatron_; }
    
    // optional int32 chatroom_type = 4;
    public static final int CHATROOM_TYPE_FIELD_NUMBER = 4;
    private boolean hasChatroomType;
    private int chatroomType_ = 0;
    public boolean hasChatroomType() { return hasChatroomType; }
    public int getChatroomType() { return chatroomType_; }
    
    // optional fixed64 steam_id_friend_chat = 5;
    public static final int STEAM_ID_FRIEND_CHAT_FIELD_NUMBER = 5;
    private boolean hasSteamIdFriendChat;
    private long steamIdFriendChat_ = 0L;
    public boolean hasSteamIdFriendChat() { return hasSteamIdFriendChat; }
    public long getSteamIdFriendChat() { return steamIdFriendChat_; }
    
    // optional string chat_name = 6;
    public static final int CHAT_NAME_FIELD_NUMBER = 6;
    private boolean hasChatName;
    private java.lang.String chatName_ = "";
    public boolean hasChatName() { return hasChatName; }
    public java.lang.String getChatName() { return chatName_; }
    
    // optional fixed64 game_id = 7;
    public static final int GAME_ID_FIELD_NUMBER = 7;
    private boolean hasGameId;
    private long gameId_ = 0L;
    public boolean hasGameId() { return hasGameId; }
    public long getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSteamIdInvited()) {
        output.writeFixed64(1, getSteamIdInvited());
      }
      if (hasSteamIdChat()) {
        output.writeFixed64(2, getSteamIdChat());
      }
      if (hasSteamIdPatron()) {
        output.writeFixed64(3, getSteamIdPatron());
      }
      if (hasChatroomType()) {
        output.writeInt32(4, getChatroomType());
      }
      if (hasSteamIdFriendChat()) {
        output.writeFixed64(5, getSteamIdFriendChat());
      }
      if (hasChatName()) {
        output.writeString(6, getChatName());
      }
      if (hasGameId()) {
        output.writeFixed64(7, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSteamIdInvited()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getSteamIdInvited());
      }
      if (hasSteamIdChat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getSteamIdChat());
      }
      if (hasSteamIdPatron()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, getSteamIdPatron());
      }
      if (hasChatroomType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getChatroomType());
      }
      if (hasSteamIdFriendChat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, getSteamIdFriendChat());
      }
      if (hasChatName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getChatName());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientChatInvite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientChatInvite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientChatInvite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientChatInvite result;
      
      // Construct using SteamMessages.CMsgClientChatInvite.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientChatInvite();
        return builder;
      }
      
      protected SteamMessages.CMsgClientChatInvite internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientChatInvite();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientChatInvite.getDescriptor();
      }
      
      public SteamMessages.CMsgClientChatInvite getDefaultInstanceForType() {
        return SteamMessages.CMsgClientChatInvite.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientChatInvite build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientChatInvite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientChatInvite buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientChatInvite returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientChatInvite) {
          return mergeFrom((SteamMessages.CMsgClientChatInvite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientChatInvite other) {
        if (other == SteamMessages.CMsgClientChatInvite.getDefaultInstance()) return this;
        if (other.hasSteamIdInvited()) {
          setSteamIdInvited(other.getSteamIdInvited());
        }
        if (other.hasSteamIdChat()) {
          setSteamIdChat(other.getSteamIdChat());
        }
        if (other.hasSteamIdPatron()) {
          setSteamIdPatron(other.getSteamIdPatron());
        }
        if (other.hasChatroomType()) {
          setChatroomType(other.getChatroomType());
        }
        if (other.hasSteamIdFriendChat()) {
          setSteamIdFriendChat(other.getSteamIdFriendChat());
        }
        if (other.hasChatName()) {
          setChatName(other.getChatName());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setSteamIdInvited(input.readFixed64());
              break;
            }
            case 17: {
              setSteamIdChat(input.readFixed64());
              break;
            }
            case 25: {
              setSteamIdPatron(input.readFixed64());
              break;
            }
            case 32: {
              setChatroomType(input.readInt32());
              break;
            }
            case 41: {
              setSteamIdFriendChat(input.readFixed64());
              break;
            }
            case 50: {
              setChatName(input.readString());
              break;
            }
            case 57: {
              setGameId(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // optional fixed64 steam_id_invited = 1;
      public boolean hasSteamIdInvited() {
        return result.hasSteamIdInvited();
      }
      public long getSteamIdInvited() {
        return result.getSteamIdInvited();
      }
      public Builder setSteamIdInvited(long value) {
        result.hasSteamIdInvited = true;
        result.steamIdInvited_ = value;
        return this;
      }
      public Builder clearSteamIdInvited() {
        result.hasSteamIdInvited = false;
        result.steamIdInvited_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_chat = 2;
      public boolean hasSteamIdChat() {
        return result.hasSteamIdChat();
      }
      public long getSteamIdChat() {
        return result.getSteamIdChat();
      }
      public Builder setSteamIdChat(long value) {
        result.hasSteamIdChat = true;
        result.steamIdChat_ = value;
        return this;
      }
      public Builder clearSteamIdChat() {
        result.hasSteamIdChat = false;
        result.steamIdChat_ = 0L;
        return this;
      }
      
      // optional fixed64 steam_id_patron = 3;
      public boolean hasSteamIdPatron() {
        return result.hasSteamIdPatron();
      }
      public long getSteamIdPatron() {
        return result.getSteamIdPatron();
      }
      public Builder setSteamIdPatron(long value) {
        result.hasSteamIdPatron = true;
        result.steamIdPatron_ = value;
        return this;
      }
      public Builder clearSteamIdPatron() {
        result.hasSteamIdPatron = false;
        result.steamIdPatron_ = 0L;
        return this;
      }
      
      // optional int32 chatroom_type = 4;
      public boolean hasChatroomType() {
        return result.hasChatroomType();
      }
      public int getChatroomType() {
        return result.getChatroomType();
      }
      public Builder setChatroomType(int value) {
        result.hasChatroomType = true;
        result.chatroomType_ = value;
        return this;
      }
      public Builder clearChatroomType() {
        result.hasChatroomType = false;
        result.chatroomType_ = 0;
        return this;
      }
      
      // optional fixed64 steam_id_friend_chat = 5;
      public boolean hasSteamIdFriendChat() {
        return result.hasSteamIdFriendChat();
      }
      public long getSteamIdFriendChat() {
        return result.getSteamIdFriendChat();
      }
      public Builder setSteamIdFriendChat(long value) {
        result.hasSteamIdFriendChat = true;
        result.steamIdFriendChat_ = value;
        return this;
      }
      public Builder clearSteamIdFriendChat() {
        result.hasSteamIdFriendChat = false;
        result.steamIdFriendChat_ = 0L;
        return this;
      }
      
      // optional string chat_name = 6;
      public boolean hasChatName() {
        return result.hasChatName();
      }
      public java.lang.String getChatName() {
        return result.getChatName();
      }
      public Builder setChatName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasChatName = true;
        result.chatName_ = value;
        return this;
      }
      public Builder clearChatName() {
        result.hasChatName = false;
        result.chatName_ = getDefaultInstance().getChatName();
        return this;
      }
      
      // optional fixed64 game_id = 7;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public long getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(long value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientChatInvite)
    }
    
    static {
      defaultInstance = new CMsgClientChatInvite(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientChatInvite)
  }
  
  public static final class CMsgClientReportOverlayDetourFailure extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientReportOverlayDetourFailure.newBuilder() to construct.
    private CMsgClientReportOverlayDetourFailure() {
      initFields();
    }
    private CMsgClientReportOverlayDetourFailure(boolean noInit) {}
    
    private static final CMsgClientReportOverlayDetourFailure defaultInstance;
    public static CMsgClientReportOverlayDetourFailure getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientReportOverlayDetourFailure getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientReportOverlayDetourFailure_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientReportOverlayDetourFailure_fieldAccessorTable;
    }
    
    // repeated string failure_string = 1;
    public static final int FAILURE_STRING_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> failureString_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getFailureStringList() {
      return failureString_;
    }
    public int getFailureStringCount() { return failureString_.size(); }
    public java.lang.String getFailureString(int index) {
      return failureString_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getFailureStringList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getFailureStringList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFailureStringList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientReportOverlayDetourFailure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientReportOverlayDetourFailure prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientReportOverlayDetourFailure result;
      
      // Construct using SteamMessages.CMsgClientReportOverlayDetourFailure.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientReportOverlayDetourFailure();
        return builder;
      }
      
      protected SteamMessages.CMsgClientReportOverlayDetourFailure internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientReportOverlayDetourFailure();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientReportOverlayDetourFailure.getDescriptor();
      }
      
      public SteamMessages.CMsgClientReportOverlayDetourFailure getDefaultInstanceForType() {
        return SteamMessages.CMsgClientReportOverlayDetourFailure.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientReportOverlayDetourFailure build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientReportOverlayDetourFailure buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientReportOverlayDetourFailure buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.failureString_ != java.util.Collections.EMPTY_LIST) {
          result.failureString_ =
            java.util.Collections.unmodifiableList(result.failureString_);
        }
        SteamMessages.CMsgClientReportOverlayDetourFailure returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientReportOverlayDetourFailure) {
          return mergeFrom((SteamMessages.CMsgClientReportOverlayDetourFailure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientReportOverlayDetourFailure other) {
        if (other == SteamMessages.CMsgClientReportOverlayDetourFailure.getDefaultInstance()) return this;
        if (!other.failureString_.isEmpty()) {
          if (result.failureString_.isEmpty()) {
            result.failureString_ = new java.util.ArrayList<java.lang.String>();
          }
          result.failureString_.addAll(other.failureString_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addFailureString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string failure_string = 1;
      public java.util.List<java.lang.String> getFailureStringList() {
        return java.util.Collections.unmodifiableList(result.failureString_);
      }
      public int getFailureStringCount() {
        return result.getFailureStringCount();
      }
      public java.lang.String getFailureString(int index) {
        return result.getFailureString(index);
      }
      public Builder setFailureString(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.failureString_.set(index, value);
        return this;
      }
      public Builder addFailureString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.failureString_.isEmpty()) {
          result.failureString_ = new java.util.ArrayList<java.lang.String>();
        }
        result.failureString_.add(value);
        return this;
      }
      public Builder addAllFailureString(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.failureString_.isEmpty()) {
          result.failureString_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.failureString_);
        return this;
      }
      public Builder clearFailureString() {
        result.failureString_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientReportOverlayDetourFailure)
    }
    
    static {
      defaultInstance = new CMsgClientReportOverlayDetourFailure(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientReportOverlayDetourFailure)
  }
  
  public static final class CMsgClientRequestEncryptedAppTicket extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientRequestEncryptedAppTicket.newBuilder() to construct.
    private CMsgClientRequestEncryptedAppTicket() {
      initFields();
    }
    private CMsgClientRequestEncryptedAppTicket(boolean noInit) {}
    
    private static final CMsgClientRequestEncryptedAppTicket defaultInstance;
    public static CMsgClientRequestEncryptedAppTicket getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientRequestEncryptedAppTicket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientRequestEncryptedAppTicket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientRequestEncryptedAppTicket_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional bytes userdata = 2;
    public static final int USERDATA_FIELD_NUMBER = 2;
    private boolean hasUserdata;
    private com.google.protobuf.ByteString userdata_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasUserdata() { return hasUserdata; }
    public com.google.protobuf.ByteString getUserdata() { return userdata_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasUserdata()) {
        output.writeBytes(2, getUserdata());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasUserdata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserdata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientRequestEncryptedAppTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientRequestEncryptedAppTicket result;
      
      // Construct using SteamMessages.CMsgClientRequestEncryptedAppTicket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientRequestEncryptedAppTicket();
        return builder;
      }
      
      protected SteamMessages.CMsgClientRequestEncryptedAppTicket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientRequestEncryptedAppTicket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientRequestEncryptedAppTicket.getDescriptor();
      }
      
      public SteamMessages.CMsgClientRequestEncryptedAppTicket getDefaultInstanceForType() {
        return SteamMessages.CMsgClientRequestEncryptedAppTicket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientRequestEncryptedAppTicket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientRequestEncryptedAppTicket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientRequestEncryptedAppTicket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientRequestEncryptedAppTicket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientRequestEncryptedAppTicket) {
          return mergeFrom((SteamMessages.CMsgClientRequestEncryptedAppTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientRequestEncryptedAppTicket other) {
        if (other == SteamMessages.CMsgClientRequestEncryptedAppTicket.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasUserdata()) {
          setUserdata(other.getUserdata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 18: {
              setUserdata(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional bytes userdata = 2;
      public boolean hasUserdata() {
        return result.hasUserdata();
      }
      public com.google.protobuf.ByteString getUserdata() {
        return result.getUserdata();
      }
      public Builder setUserdata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUserdata = true;
        result.userdata_ = value;
        return this;
      }
      public Builder clearUserdata() {
        result.hasUserdata = false;
        result.userdata_ = getDefaultInstance().getUserdata();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientRequestEncryptedAppTicket)
    }
    
    static {
      defaultInstance = new CMsgClientRequestEncryptedAppTicket(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientRequestEncryptedAppTicket)
  }
  
  public static final class CMsgClientRequestEncryptedAppTicketResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CMsgClientRequestEncryptedAppTicketResponse.newBuilder() to construct.
    private CMsgClientRequestEncryptedAppTicketResponse() {
      initFields();
    }
    private CMsgClientRequestEncryptedAppTicketResponse(boolean noInit) {}
    
    private static final CMsgClientRequestEncryptedAppTicketResponse defaultInstance;
    public static CMsgClientRequestEncryptedAppTicketResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMsgClientRequestEncryptedAppTicketResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamMessages.internal_static_CMsgClientRequestEncryptedAppTicketResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamMessages.internal_static_CMsgClientRequestEncryptedAppTicketResponse_fieldAccessorTable;
    }
    
    // optional uint32 app_id = 1;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private int appId_ = 0;
    public boolean hasAppId() { return hasAppId; }
    public int getAppId() { return appId_; }
    
    // optional int32 eresult = 2 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 2;
    private boolean hasEresult;
    private int eresult_ = 2;
    public boolean hasEresult() { return hasEresult; }
    public int getEresult() { return eresult_; }
    
    // optional .EncryptedAppTicket encrypted_app_ticket = 3;
    public static final int ENCRYPTED_APP_TICKET_FIELD_NUMBER = 3;
    private boolean hasEncryptedAppTicket;
    private SteamStruct.EncryptedAppTicket encryptedAppTicket_;
    public boolean hasEncryptedAppTicket() { return hasEncryptedAppTicket; }
    public SteamStruct.EncryptedAppTicket getEncryptedAppTicket() { return encryptedAppTicket_; }
    
    private void initFields() {
      encryptedAppTicket_ = SteamStruct.EncryptedAppTicket.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeUInt32(1, getAppId());
      }
      if (hasEresult()) {
        output.writeInt32(2, getEresult());
      }
      if (hasEncryptedAppTicket()) {
        output.writeMessage(3, getEncryptedAppTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getAppId());
      }
      if (hasEresult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEresult());
      }
      if (hasEncryptedAppTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEncryptedAppTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamMessages.CMsgClientRequestEncryptedAppTicketResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamMessages.CMsgClientRequestEncryptedAppTicketResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamMessages.CMsgClientRequestEncryptedAppTicketResponse result;
      
      // Construct using SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamMessages.CMsgClientRequestEncryptedAppTicketResponse();
        return builder;
      }
      
      protected SteamMessages.CMsgClientRequestEncryptedAppTicketResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamMessages.CMsgClientRequestEncryptedAppTicketResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.getDescriptor();
      }
      
      public SteamMessages.CMsgClientRequestEncryptedAppTicketResponse getDefaultInstanceForType() {
        return SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamMessages.CMsgClientRequestEncryptedAppTicketResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamMessages.CMsgClientRequestEncryptedAppTicketResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamMessages.CMsgClientRequestEncryptedAppTicketResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamMessages.CMsgClientRequestEncryptedAppTicketResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamMessages.CMsgClientRequestEncryptedAppTicketResponse) {
          return mergeFrom((SteamMessages.CMsgClientRequestEncryptedAppTicketResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamMessages.CMsgClientRequestEncryptedAppTicketResponse other) {
        if (other == SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        if (other.hasEncryptedAppTicket()) {
          mergeEncryptedAppTicket(other.getEncryptedAppTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAppId(input.readUInt32());
              break;
            }
            case 16: {
              setEresult(input.readInt32());
              break;
            }
            case 26: {
              SteamStruct.EncryptedAppTicket.Builder subBuilder = SteamStruct.EncryptedAppTicket.newBuilder();
              if (hasEncryptedAppTicket()) {
                subBuilder.mergeFrom(getEncryptedAppTicket());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEncryptedAppTicket(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 app_id = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public int getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(int value) {
        result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = 0;
        return this;
      }
      
      // optional int32 eresult = 2 [default = 2];
      public boolean hasEresult() {
        return result.hasEresult();
      }
      public int getEresult() {
        return result.getEresult();
      }
      public Builder setEresult(int value) {
        result.hasEresult = true;
        result.eresult_ = value;
        return this;
      }
      public Builder clearEresult() {
        result.hasEresult = false;
        result.eresult_ = 2;
        return this;
      }
      
      // optional .EncryptedAppTicket encrypted_app_ticket = 3;
      public boolean hasEncryptedAppTicket() {
        return result.hasEncryptedAppTicket();
      }
      public SteamStruct.EncryptedAppTicket getEncryptedAppTicket() {
        return result.getEncryptedAppTicket();
      }
      public Builder setEncryptedAppTicket(SteamStruct.EncryptedAppTicket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEncryptedAppTicket = true;
        result.encryptedAppTicket_ = value;
        return this;
      }
      public Builder setEncryptedAppTicket(SteamStruct.EncryptedAppTicket.Builder builderForValue) {
        result.hasEncryptedAppTicket = true;
        result.encryptedAppTicket_ = builderForValue.build();
        return this;
      }
      public Builder mergeEncryptedAppTicket(SteamStruct.EncryptedAppTicket value) {
        if (result.hasEncryptedAppTicket() &&
            result.encryptedAppTicket_ != SteamStruct.EncryptedAppTicket.getDefaultInstance()) {
          result.encryptedAppTicket_ =
            SteamStruct.EncryptedAppTicket.newBuilder(result.encryptedAppTicket_).mergeFrom(value).buildPartial();
        } else {
          result.encryptedAppTicket_ = value;
        }
        result.hasEncryptedAppTicket = true;
        return this;
      }
      public Builder clearEncryptedAppTicket() {
        result.hasEncryptedAppTicket = false;
        result.encryptedAppTicket_ = SteamStruct.EncryptedAppTicket.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMsgClientRequestEncryptedAppTicketResponse)
    }
    
    static {
      defaultInstance = new CMsgClientRequestEncryptedAppTicketResponse(true);
      SteamMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMsgClientRequestEncryptedAppTicketResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgProtoBufHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgProtoBufHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMulti_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMulti_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetPlayerLinkDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetPlayerLinkDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetPlayerLinkDetailsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetPlayerLinkDetailsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWebAPIKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWebAPIKey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHttpRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHttpRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHttpRequest_RequestHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHttpRequest_RequestHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHttpRequest_QueryParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHttpRequest_QueryParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWebAPIRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWebAPIRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHttpResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHttpResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgHttpResponse_ResponseHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgHttpResponse_ResponseHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientHeartBeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientHeartBeat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientSubscribeToPersonaFeed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientSubscribeToPersonaFeed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMSubscribeToPersonaFeed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMSubscribeToPersonaFeed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientUDSP2PSessionStarted_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientUDSP2PSessionStarted_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientUDSP2PSessionEnded_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientUDSP2PSessionEnded_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientRegisterAuthTicketWithCM_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientRegisterAuthTicketWithCM_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientTicketAuthComplete_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientTicketAuthComplete_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLogon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLogon_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLogonResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLogonResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLogOff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLogOff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLoggedOff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLoggedOff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientCMList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientCMList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientP2PConnectionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientP2PConnectionInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientP2PConnectionFailInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientP2PConnectionFailInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientGetAppOwnershipTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientGetAppOwnershipTicket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientGetAppOwnershipTicketResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientGetAppOwnershipTicketResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientSessionToken_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientSessionToken_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAuthTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAuthTicket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientGameConnectTokens_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientGameConnectTokens_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSServerType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSServerType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSStatusReply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSStatusReply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSUserPlaying_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSUserPlaying_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSDisconnectNotice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSDisconnectNotice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientGamesPlayed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientGamesPlayed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientGamesPlayed_GamePlayed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientGamesPlayed_GamePlayed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSApprove_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSApprove_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSDeny_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSDeny_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGSKick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGSKick_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientAuthList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientAuthList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMTicketAuthRequestOrResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMTicketAuthRequestOrResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientFriendsList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientFriendsList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientFriendsList_Friend_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientFriendsList_Friend_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLicenseList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLicenseList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLicenseList_License_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLicenseList_License_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSSetScore_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSSetScore_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSSetScoreResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSSetScoreResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSFindOrCreateLB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSFindOrCreateLB_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSFindOrCreateLBResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSFindOrCreateLBResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSGetLBEntries_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSGetLBEntries_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSGetLBEntriesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSGetLBEntriesResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDownloadRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDownloadRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDownloadResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDownloadResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDownloadResponse_FileData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDownloadResponse_FileData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDownloadChunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDownloadChunk_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDeleteFileRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDeleteFileRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgUFSDeleteFileResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgUFSDeleteFileResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientAccountInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientAccountInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientAppMinutesPlayedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientAppMinutesPlayedData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMFindAccounts_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMFindAccounts_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMFindAccountsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMFindAccountsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientIsLimitedAccount_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientIsLimitedAccount_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientRequestFriendData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientRequestFriendData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientPersonaState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientPersonaState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientPersonaState_Friend_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientPersonaState_Friend_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgAMRouteToClients_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgAMRouteToClients_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSCreateLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSCreateLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSCreateLobbyResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSCreateLobbyResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSJoinLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSJoinLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSJoinLobbyResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSJoinLobbyResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSJoinLobbyResponse_Member_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSJoinLobbyResponse_Member_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLeaveLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLeaveLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLeaveLobbyResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLeaveLobbyResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSGetLobbyList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSGetLobbyList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSGetLobbyList_Filter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSGetLobbyList_Filter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSGetLobbyListResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSGetLobbyListResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSetLobbyData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSetLobbyData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSetLobbyDataResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSetLobbyDataResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSGetLobbyData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSGetLobbyData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLobbyData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLobbyData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLobbyData_Member_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLobbyData_Member_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSendLobbyChatMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSendLobbyChatMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLobbyChatMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLobbyChatMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSetLobbyOwner_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSetLobbyOwner_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSetLobbyOwnerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSetLobbyOwnerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSSetLobbyGameServer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSSetLobbyGameServer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSLobbyGameServerSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSLobbyGameServerSet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSUserJoinedLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSUserJoinedLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSUserLeftLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSUserLeftLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientMMSInviteToLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientMMSInviteToLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientChatInvite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientChatInvite_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientReportOverlayDetourFailure_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientReportOverlayDetourFailure_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientRequestEncryptedAppTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientRequestEncryptedAppTicket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientRequestEncryptedAppTicketResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientRequestEncryptedAppTicketResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023SteamMessages.proto\032\021steamstruct.proto" +
      "\"\273\001\n\022CMsgProtoBufHeader\022\027\n\017client_steam_" +
      "id\030\001 \001(\006\022\031\n\021client_session_id\030\002 \001(\005\022+\n\rj" +
      "ob_id_source\030\n \001(\006:\02418446744073709551615" +
      "\022+\n\rjob_id_target\030\013 \001(\006:\024184467440737095" +
      "51615\022\027\n\017target_job_name\030\014 \001(\t\"8\n\tCMsgMu" +
      "lti\022\025\n\rsize_unzipped\030\001 \001(\r\022\024\n\014message_bo" +
      "dy\030\002 \001(\014\"h\n\027CMsgAMGetAccountDetails\022\036\n\026a" +
      "uthenticated_steam_id\030\001 \001(\006\022\027\n\017requester" +
      "_flags\030\002 \001(\r\022\024\n\014account_list\030\003 \003(\006\"\343\013\n\037C",
      "MsgAMGetAccountDetailsResponse\022@\n\010accoun" +
      "ts\030\001 \003(\0132..CMsgAMGetAccountDetailsRespon" +
      "se.AccountDetail\032\375\n\n\rAccountDetail\022U\n\013pu" +
      "blic_data\030\001 \001(\0132@.CMsgAMGetAccountDetail" +
      "sResponse.AccountDetail.AccountPublicDat" +
      "a\022W\n\014private_data\030\002 \001(\0132A.CMsgAMGetAccou" +
      "ntDetailsResponse.AccountDetail.AccountP" +
      "rivateData\032\035\n\007License\022\022\n\npackage_id\030\001 \001(" +
      "\005\032d\n\nGamePlayed\022\017\n\007game_id\030\001 \001(\006\022%\n\035minu" +
      "tes_played_last_two_weeks\030\002 \001(\r\022\036\n\026minut",
      "es_played_forever\030\003 \001(\r\032\341\002\n\021AccountPubli" +
      "cData\022\020\n\010steam_id\030\001 \002(\006\022\030\n\020visibility_st" +
      "ate\030\002 \001(\005\022\025\n\rprivacy_state\030\003 \001(\005\022\025\n\rprof" +
      "ile_state\030\004 \001(\005\022\032\n\022comment_permission\030\005 " +
      "\001(\005\022\030\n\020last_logoff_time\030\006 \001(\r\022\030\n\020ban_exp" +
      "ires_time\030\007 \001(\r\022\025\n\raccount_flags\030\010 \001(\r\022\031" +
      "\n\021sha_digest_avatar\030\t \001(\014\022\022\n\nclan_count\030" +
      "\n \001(\005\022\024\n\014persona_name\030\013 \001(\t\022\023\n\013profile_u" +
      "rl\030\014 \001(\t\022\025\n\ris_vac_banned\030\r \001(\010\022\032\n\022is_li" +
      "mited_account\030\016 \001(\010\032\322\005\n\022AccountPrivateDa",
      "ta\022\025\n\rpersona_state\030\001 \001(\005\022\027\n\017primary_cla" +
      "n_id\030\002 \001(\006\022\025\n\rfriends_count\030\003 \001(\005\022\017\n\007cit" +
      "y_id\030\004 \001(\005\022\027\n\017favorite_app_id\030\005 \001(\005\022\024\n\014t" +
      "ime_created\030\006 \001(\r\022\017\n\007game_id\030\007 \001(\006\022\034\n\024ga" +
      "me_server_steam_id\030\010 \001(\006\022\036\n\026game_server_" +
      "ip_address\030\t \001(\r\022\030\n\020game_server_port\030\n \001" +
      "(\r\022\017\n\007skin_id\030\013 \001(\005\022\033\n\023wishlist_item_cou" +
      "nt\030\014 \001(\r\022\027\n\017game_extra_info\030\r \001(\t\022\021\n\trea" +
      "l_name\030\016 \001(\t\022\022\n\nstate_code\030\017 \001(\t\022\024\n\014coun" +
      "try_code\030\020 \001(\t\022\r\n\005email\030\021 \001(\t\022\020\n\010headlin",
      "e\030\022 \001(\t\022\017\n\007summary\030\023 \001(\t\022\024\n\014account_name" +
      "\030\024 \001(\t\022H\n\010licenses\030\025 \003(\01326.CMsgAMGetAcco" +
      "untDetailsResponse.AccountDetail.License" +
      "\022M\n\rtemp_licenses\030\026 \003(\01326.CMsgAMGetAccou" +
      "ntDetailsResponse.AccountDetail.License\022" +
      "O\n\014games_played\030\027 \003(\01329.CMsgAMGetAccount" +
      "DetailsResponse.AccountDetail.GamePlayed" +
      "\022\026\n\016lobby_steam_id\030\030 \001(\006\"k\n\032CMsgAMGetPla" +
      "yerLinkDetails\022\036\n\026authenticated_steam_id" +
      "\030\001 \001(\006\022\027\n\017requester_flags\030\002 \001(\r\022\024\n\014accou",
      "nt_list\030\003 \003(\006\"\251\007\n\"CMsgAMGetPlayerLinkDet" +
      "ailsResponse\022C\n\010accounts\030\001 \003(\01321.CMsgAMG" +
      "etPlayerLinkDetailsResponse.AccountDetai" +
      "l\032\275\006\n\rAccountDetail\022X\n\013public_data\030\001 \001(\013" +
      "2C.CMsgAMGetPlayerLinkDetailsResponse.Ac" +
      "countDetail.AccountPublicData\022Z\n\014private" +
      "_data\030\002 \001(\0132D.CMsgAMGetPlayerLinkDetails" +
      "Response.AccountDetail.AccountPrivateDat" +
      "a\032\232\002\n\021AccountPublicData\022\020\n\010steam_id\030\001 \002(" +
      "\006\022\030\n\020visibility_state\030\002 \001(\005\022\025\n\rprivacy_s",
      "tate\030\003 \001(\005\022\025\n\rprofile_state\030\004 \001(\005\022\032\n\022com" +
      "ment_permission\030\005 \001(\005\022\030\n\020last_logoff_tim" +
      "e\030\006 \001(\r\022\030\n\020ban_expires_time\030\007 \001(\r\022\025\n\racc" +
      "ount_flags\030\010 \001(\r\022\031\n\021sha_digest_avatar\030\t " +
      "\001(\014\022\024\n\014persona_name\030\013 \001(\t\022\023\n\013profile_url" +
      "\030\014 \001(\t\032\330\002\n\022AccountPrivateData\022\025\n\rpersona" +
      "_state\030\001 \001(\005\022\027\n\017primary_clan_id\030\002 \001(\006\022\017\n" +
      "\007city_id\030\004 \001(\005\022\024\n\014time_created\030\006 \001(\r\022\017\n\007" +
      "game_id\030\007 \001(\006\022\034\n\024game_server_steam_id\030\010 " +
      "\001(\006\022\036\n\026game_server_ip_address\030\t \001(\r\022\030\n\020g",
      "ame_server_port\030\n \001(\r\022\027\n\017game_extra_info" +
      "\030\r \001(\t\022\021\n\treal_name\030\016 \001(\t\022\022\n\nstate_code\030" +
      "\017 \001(\t\022\024\n\014country_code\030\020 \001(\t\022\024\n\014account_n" +
      "ame\030\024 \001(\t\022\026\n\016lobby_steam_id\030\025 \001(\006\"z\n\rCMs" +
      "gWebAPIKey\022\023\n\006status\030\001 \001(\r:\003255\022\025\n\naccou" +
      "nt_id\030\002 \001(\r:\0010\022\035\n\022publisher_group_id\030\003 \001" +
      "(\r:\0010\022\016\n\006key_id\030\004 \001(\r\022\016\n\006domain\030\005 \001(\t\"\303\002" +
      "\n\017CMsgHttpRequest\022\026\n\016request_method\030\001 \001(" +
      "\r\022\020\n\010hostname\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\022/\n\007head" +
      "ers\030\004 \003(\0132\036.CMsgHttpRequest.RequestHeade",
      "r\022/\n\nget_params\030\005 \003(\0132\033.CMsgHttpRequest." +
      "QueryParam\0220\n\013post_params\030\006 \003(\0132\033.CMsgHt" +
      "tpRequest.QueryParam\022\014\n\004body\030\007 \001(\014\032,\n\rRe" +
      "questHeader\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t" +
      "\032)\n\nQueryParam\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 " +
      "\001(\014\"\306\001\n\021CMsgWebAPIRequest\022\027\n\017UNUSED_job_" +
      "name\030\001 \001(\t\022\026\n\016interface_name\030\002 \001(\t\022\023\n\013me" +
      "thod_name\030\003 \001(\t\022\017\n\007version\030\004 \001(\r\022\037\n\007api_" +
      "key\030\005 \001(\0132\016.CMsgWebAPIKey\022!\n\007request\030\006 \001" +
      "(\0132\020.CMsgHttpRequest\022\026\n\016routing_app_id\030\007",
      " \001(\r\"\227\001\n\020CMsgHttpResponse\022\023\n\013status_code" +
      "\030\001 \001(\r\0221\n\007headers\030\002 \003(\0132 .CMsgHttpRespon" +
      "se.ResponseHeader\022\014\n\004body\030\003 \001(\014\032-\n\016Respo" +
      "nseHeader\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\025" +
      "\n\023CMsgClientHeartBeat\"\233\001\n CMsgClientSubs" +
      "cribeToPersonaFeed\022D\n\rpersona_feeds\030\001 \003(" +
      "\0132-.CMsgClientSubscribeToPersonaFeed.Per" +
      "sonaFeed\0321\n\013PersonaFeed\022\017\n\007steamID\030\001 \001(\006" +
      "\022\021\n\tsubscribe\030\002 \001(\010\"m\n\034CMsgAMSubscribeTo" +
      "PersonaFeed\022\026\n\016steamid_client\030\001 \001(\006\022\"\n\032s",
      "teamid_persona_feed_owner\030\002 \001(\006\022\021\n\tsubsc" +
      "ribe\030\003 \001(\010\"G\n\036CMsgClientUDSP2PSessionSta" +
      "rted\022\026\n\016steamid_remote\030\001 \001(\006\022\r\n\005appid\030\002 " +
      "\001(\005\"\201\002\n\034CMsgClientUDSP2PSessionEnded\022\026\n\016" +
      "steamid_remote\030\001 \001(\006\022\r\n\005appid\030\002 \001(\005\022\032\n\022s" +
      "ession_length_sec\030\003 \001(\005\022\025\n\rsession_error" +
      "\030\004 \001(\005\022\017\n\007nattype\030\005 \001(\005\022\022\n\nbytes_recv\030\006 " +
      "\001(\005\022\022\n\nbytes_sent\030\007 \001(\005\022\030\n\020bytes_sent_re" +
      "lay\030\010 \001(\005\022\030\n\020bytes_recv_relay\030\t \001(\005\022\032\n\022t" +
      "ime_to_connect_ms\030\n \001(\005\"N\n\"CMsgClientReg",
      "isterAuthTicketWithCM\022\030\n\020protocol_versio" +
      "n\030\001 \001(\r\022\016\n\006ticket\030\003 \001(\014\"\271\001\n\034CMsgClientTi" +
      "cketAuthComplete\022\020\n\010steam_id\030\001 \001(\006\022\017\n\007ga" +
      "me_id\030\002 \001(\006\022\016\n\006estate\030\003 \001(\r\022\036\n\026eauth_ses" +
      "sion_response\030\004 \001(\r\022\031\n\021DEPRECATED_ticket" +
      "\030\005 \001(\014\022\022\n\nticket_crc\030\006 \001(\r\022\027\n\017ticket_seq" +
      "uence\030\007 \001(\r\"\351\004\n\017CMsgClientLogon\022\030\n\020proto" +
      "col_version\030\001 \001(\r\022\037\n\027obfustucated_privat" +
      "e_ip\030\002 \001(\r\022\017\n\007cell_id\030\003 \001(\r\022\027\n\017last_sess" +
      "ion_id\030\004 \001(\r\022\036\n\026client_package_version\030\005",
      " \001(\r\022\027\n\017client_language\030\006 \001(\t\022\026\n\016client_" +
      "os_type\030\007 \001(\r\022\'\n\030should_remember_passwor" +
      "d\030\010 \001(\010:\005false\022\024\n\014wine_version\030\t \001(\t\022\021\n\t" +
      "public_ip\030\024 \001(\r\022\021\n\tqos_level\030\025 \001(\r\022 \n\030cl" +
      "ient_supplied_steam_id\030\026 \001(\006\022\022\n\nmachine_" +
      "id\030\036 \001(\014\022\032\n\022steam2_auth_ticket\030) \001(\014\022\025\n\r" +
      "email_address\030* \001(\t\022 \n\030rtime32_account_c" +
      "reation\030+ \001(\007\022\024\n\014account_name\0302 \001(\t\022\020\n\010p" +
      "assword\0303 \001(\t\022\021\n\tlogin_key\030< \001(\t\022+\n\034was_" +
      "converted_deprecated_msg\030F \001(\010:\005false\022%\n",
      "\035anon_user_target_account_name\030P \001(\t\022!\n\031" +
      "anon_user_target_steam_id\030Q \001(\006\"\337\001\n\027CMsg" +
      "ClientLogonResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022" +
      "%\n\035out_of_game_heartbeat_seconds\030\002 \001(\005\022!" +
      "\n\031in_game_heartbeat_seconds\030\003 \001(\005\022\021\n\tpub" +
      "lic_ip\030\004 \001(\r\022\033\n\023rtime32_server_time\030\005 \001(" +
      "\007\022\025\n\raccount_flags\030\006 \001(\r\022\037\n\027client_suppl" +
      "ied_steamid\030\024 \001(\006\"\022\n\020CMsgClientLogOff\")\n" +
      "\023CMsgClientLoggedOff\022\022\n\007eresult\030\001 \001(\005:\0012" +
      "\"(\n\020CMsgClientCMList\022\024\n\014cm_addresses\030\001 \003",
      "(\r\"m\n\033CMsgClientP2PConnectionInfo\022\025\n\rste" +
      "am_id_dest\030\001 \001(\006\022\024\n\014steam_id_src\030\002 \001(\006\022\016" +
      "\n\006app_id\030\003 \001(\r\022\021\n\tcandidate\030\004 \001(\014\"z\n\037CMs" +
      "gClientP2PConnectionFailInfo\022\025\n\rsteam_id" +
      "_dest\030\001 \001(\006\022\024\n\014steam_id_src\030\002 \001(\006\022\016\n\006app" +
      "_id\030\003 \001(\r\022\032\n\022ep2p_session_error\030\004 \001(\r\"1\n" +
      "\037CMsgClientGetAppOwnershipTicket\022\016\n\006app_" +
      "id\030\001 \001(\r\"]\n\'CMsgClientGetAppOwnershipTic" +
      "ketResponse\022\022\n\007eresult\030\001 \001(\r:\0012\022\016\n\006app_i" +
      "d\030\002 \001(\r\022\016\n\006ticket\030\003 \001(\014\"\'\n\026CMsgClientSes",
      "sionToken\022\r\n\005token\030\001 \001(\004\"\221\001\n\016CMsgAuthTic" +
      "ket\022\016\n\006estate\030\001 \001(\r\022\022\n\007eresult\030\002 \001(\r:\0012\022" +
      "\020\n\010steam_id\030\003 \001(\006\022\017\n\007game_id\030\004 \001(\006\022\024\n\014h_" +
      "steam_pipe\030\005 \001(\r\022\022\n\nticket_crc\030\006 \001(\r\022\016\n\006" +
      "ticket\030\007 \001(\014\"M\n\033CMsgClientGameConnectTok" +
      "ens\022\036\n\022max_tokens_to_keep\030\001 \001(\r:\00210\022\016\n\006t" +
      "okens\030\002 \003(\014\"\245\001\n\020CMsgGSServerType\022\025\n\rapp_" +
      "id_served\030\001 \001(\r\022\r\n\005flags\030\002 \001(\r\022\027\n\017game_i" +
      "p_address\030\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\020\n\010ga" +
      "me_dir\030\005 \001(\t\022\024\n\014game_version\030\006 \001(\t\022\027\n\017ga",
      "me_query_port\030\007 \001(\r\"&\n\021CMsgGSStatusReply" +
      "\022\021\n\tis_secure\030\001 \001(\010\"G\n\021CMsgGSUserPlaying" +
      "\022\020\n\010steam_id\030\001 \001(\006\022\021\n\tpublic_ip\030\002 \001(\r\022\r\n" +
      "\005token\030\003 \001(\014\"*\n\026CMsgGSDisconnectNotice\022\020" +
      "\n\010steam_id\030\001 \001(\006\"\230\002\n\025CMsgClientGamesPlay" +
      "ed\0227\n\014games_played\030\001 \003(\0132!.CMsgClientGam" +
      "esPlayed.GamePlayed\032\305\001\n\nGamePlayed\022\023\n\013st" +
      "eam_id_gs\030\001 \001(\004\022\017\n\007game_id\030\002 \001(\006\022\027\n\017game" +
      "_ip_address\030\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\021\n\t" +
      "is_secure\030\005 \001(\010\022\r\n\005token\030\006 \001(\014\022\027\n\017game_e",
      "xtra_info\030\007 \001(\t\022\026\n\016game_data_blob\030\010 \001(\014\022" +
      "\022\n\nprocess_id\030\t \001(\r\"!\n\rCMsgGSApprove\022\020\n\010" +
      "steam_id\030\001 \001(\006\"I\n\nCMsgGSDeny\022\020\n\010steam_id" +
      "\030\001 \001(\006\022\024\n\014edeny_reason\030\002 \001(\005\022\023\n\013deny_str" +
      "ing\030\003 \001(\t\"4\n\nCMsgGSKick\022\020\n\010steam_id\030\001 \001(" +
      "\006\022\024\n\014edeny_reason\030\002 \001(\005\"\213\001\n\022CMsgClientAu" +
      "thList\022\023\n\013tokens_left\030\001 \001(\r\022\030\n\020last_requ" +
      "est_seq\030\002 \001(\r\022$\n\034last_request_seq_from_s" +
      "erver\030\003 \001(\r\022 \n\007tickets\030\004 \003(\0132\017.CMsgAuthT" +
      "icket\"Y\n!CMsgAMTicketAuthRequestOrRespon",
      "se\022\023\n\013steam_id_to\030\001 \001(\006\022\037\n\006ticket\030\002 \001(\0132" +
      "\017.CMsgAuthTicket\"\230\001\n\025CMsgClientFriendsLi" +
      "st\022\024\n\014bincremental\030\001 \001(\010\022.\n\007friends\030\002 \003(" +
      "\0132\035.CMsgClientFriendsList.Friend\0329\n\006Frie" +
      "nd\022\022\n\nulfriendid\030\001 \001(\006\022\033\n\023efriendrelatio" +
      "nship\030\002 \001(\r\"\316\002\n\025CMsgClientLicenseList\022\022\n" +
      "\007eresult\030\001 \001(\005:\0012\0220\n\010licenses\030\002 \003(\0132\036.CM" +
      "sgClientLicenseList.License\032\356\001\n\007License\022" +
      "\022\n\npackage_id\030\001 \001(\r\022\024\n\014time_created\030\002 \001(" +
      "\007\022\031\n\021time_next_process\030\003 \001(\007\022\024\n\014minute_l",
      "imit\030\004 \001(\005\022\024\n\014minutes_used\030\005 \001(\005\022\026\n\016paym" +
      "ent_method\030\006 \001(\r\022\r\n\005flags\030\007 \001(\r\022\035\n\025purch" +
      "ase_country_code\030\010 \001(\t\022\024\n\014license_type\030\t" +
      " \001(\r\022\026\n\016territory_code\030\n \001(\005\"|\n\025CMsgClie" +
      "ntLBSSetScore\022\016\n\006app_id\030\001 \001(\r\022\026\n\016leaderb" +
      "oard_id\030\002 \001(\005\022\r\n\005score\030\003 \001(\005\022\017\n\007details\030" +
      "\004 \001(\014\022\033\n\023upload_score_method\030\005 \001(\005\"\242\001\n\035C" +
      "MsgClientLBSSetScoreResponse\022\022\n\007eresult\030" +
      "\001 \001(\005:\0012\022\037\n\027leaderboard_entry_count\030\002 \001(" +
      "\005\022\025\n\rscore_changed\030\003 \001(\010\022\034\n\024global_rank_",
      "previous\030\004 \001(\005\022\027\n\017global_rank_new\030\005 \001(\005\"" +
      "\247\001\n\033CMsgClientLBSFindOrCreateLB\022\016\n\006app_i" +
      "d\030\001 \001(\r\022\037\n\027leaderboard_sort_method\030\002 \001(\005" +
      "\022 \n\030leaderboard_display_type\030\003 \001(\005\022\033\n\023cr" +
      "eate_if_not_found\030\004 \001(\010\022\030\n\020leaderboard_n" +
      "ame\030\005 \001(\t\"\325\001\n#CMsgClientLBSFindOrCreateL" +
      "BResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\026\n\016leaderb" +
      "oard_id\030\002 \001(\005\022\037\n\027leaderboard_entry_count" +
      "\030\003 \001(\005\022\"\n\027leaderboard_sort_method\030\004 \001(\005:" +
      "\0010\022#\n\030leaderboard_display_type\030\005 \001(\005:\0010\022",
      "\030\n\020leaderboard_name\030\006 \001(\t\"\215\001\n\031CMsgClient" +
      "LBSGetLBEntries\022\016\n\006app_id\030\001 \001(\005\022\026\n\016leade" +
      "rboard_id\030\002 \001(\005\022\023\n\013range_start\030\003 \001(\005\022\021\n\t" +
      "range_end\030\004 \001(\005\022 \n\030leaderboard_data_requ" +
      "est\030\005 \001(\005\"\350\001\n!CMsgClientLBSGetLBEntriesR" +
      "esponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027leaderboa" +
      "rd_entry_count\030\002 \001(\005\0229\n\007entries\030\003 \003(\0132(." +
      "CMsgClientLBSGetLBEntriesResponse.Entry\032" +
      "S\n\005Entry\022\025\n\rsteam_id_user\030\001 \001(\006\022\023\n\013globa" +
      "l_rank\030\002 \001(\005\022\r\n\005score\030\003 \001(\005\022\017\n\007details\030\004",
      " \001(\014\"L\n\026CMsgUFSDownloadRequest\022\020\n\010steam_" +
      "id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\005\022\020\n\010filename\030\003 \001" +
      "(\t\"\276\001\n\027CMsgUFSDownloadResponse\022\022\n\007eresul" +
      "t\030\001 \001(\r:\0012\0224\n\tfile_data\030\002 \001(\0132!.CMsgUFSD" +
      "ownloadResponse.FileData\032Y\n\010FileData\022\021\n\t" +
      "file_size\030\001 \001(\r\022\025\n\rraw_file_size\030\002 \001(\r\022\020" +
      "\n\010sha_file\030\003 \001(\014\022\021\n\ttimestamp\030\004 \001(\004\"4\n\024C" +
      "MsgUFSDownloadChunk\022\016\n\006offset\030\001 \001(\r\022\014\n\004d" +
      "ata\030\002 \001(\014\"N\n\030CMsgUFSDeleteFileRequest\022\020\n" +
      "\010steam_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\005\022\020\n\010filen",
      "ame\030\003 \001(\t\"/\n\031CMsgUFSDeleteFileResponse\022\022" +
      "\n\007eresult\030\001 \001(\r:\0012\"u\n\025CMsgClientAccountI" +
      "nfo\022\024\n\014persona_name\030\001 \001(\t\022\022\n\nip_country\030" +
      "\002 \001(\t\022\025\n\rsalt_password\030\003 \001(\014\022\033\n\023sha_dige" +
      "st_Password\030\004 \001(\014\"\277\001\n\036CMsgClientAppMinut" +
      "esPlayedData\022L\n\016minutes_played\030\001 \003(\01324.C" +
      "MsgClientAppMinutesPlayedData.AppMinutes" +
      "PlayedData\032O\n\024AppMinutesPlayedData\022\016\n\006ap" +
      "p_id\030\001 \001(\r\022\017\n\007forever\030\002 \001(\005\022\026\n\016last_two_" +
      "weeks\030\003 \001(\005\"@\n\022CMsgAMFindAccounts\022\023\n\013sea",
      "rch_type\030\001 \001(\r\022\025\n\rsearch_string\030\002 \001(\t\".\n" +
      "\032CMsgAMFindAccountsResponse\022\020\n\010steam_id\030" +
      "\001 \003(\006\"9\n\032CMsgClientIsLimitedAccount\022\033\n\023b" +
      "is_limited_account\030\001 \001(\010\"O\n\033CMsgClientRe" +
      "questFriendData\022\037\n\027persona_state_request" +
      "ed\030\001 \001(\r\022\017\n\007friends\030\002 \003(\006\"\346\003\n\026CMsgClient" +
      "PersonaState\022\024\n\014status_flags\030\001 \001(\r\022/\n\007fr" +
      "iends\030\002 \003(\0132\036.CMsgClientPersonaState.Fri" +
      "end\032\204\003\n\006Friend\022\020\n\010friendid\030\001 \001(\006\022\025\n\rpers" +
      "ona_state\030\002 \001(\r\022\032\n\022game_played_app_id\030\003 ",
      "\001(\r\022\026\n\016game_server_ip\030\004 \001(\r\022\030\n\020game_serv" +
      "er_port\030\005 \001(\r\022\023\n\013player_name\030\017 \001(\t\022\022\n\nqu" +
      "ery_port\030\024 \001(\r\022\026\n\016steamid_source\030\031 \001(\006\022\r" +
      "\n\005cm_ip\030\036 \001(\r\022\023\n\013avatar_hash\030\037 \001(\014\022\025\n\rch" +
      "at_metadata\030( \001(\014\022\023\n\013last_logoff\030- \001(\r\022\022" +
      "\n\nlast_logon\030. \001(\r\022\021\n\tclan_rank\0302 \001(\r\022\021\n" +
      "\tgame_name\0307 \001(\t\022\016\n\006gameid\0308 \001(\006\022\026\n\016game" +
      "_data_blob\030< \001(\014\022\020\n\010clan_tag\030A \001(\t\"W\n\024CM" +
      "sgAMRouteToClients\022\035\n\025contains_protobuf_" +
      "msg\030\001 \001(\010\022\017\n\007payload\030\002 \001(\014\022\017\n\007clients\030\003 ",
      "\003(\006\"\272\001\n\030CMsgClientMMSCreateLobby\022\016\n\006app_" +
      "id\030\001 \001(\r\022\023\n\013max_members\030\002 \001(\005\022\022\n\nlobby_t" +
      "ype\030\003 \001(\005\022\023\n\013lobby_flags\030\004 \001(\005\022\017\n\007cell_i" +
      "d\030\005 \001(\r\022\021\n\tpublic_ip\030\006 \001(\r\022\020\n\010metadata\030\007" +
      " \001(\014\022\032\n\022persona_name_owner\030\010 \001(\t\"^\n CMsg" +
      "ClientMMSCreateLobbyResponse\022\016\n\006app_id\030\001" +
      " \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\022\n\007eresult\030" +
      "\003 \001(\005:\0012\"V\n\026CMsgClientMMSJoinLobby\022\016\n\006ap" +
      "p_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\024\n\014pe" +
      "rsona_name\030\003 \001(\t\"\317\002\n\036CMsgClientMMSJoinLo",
      "bbyResponse\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_" +
      "lobby\030\002 \001(\006\022 \n\030chat_room_enter_response\030" +
      "\003 \001(\005\022\023\n\013max_members\030\004 \001(\005\022\022\n\nlobby_type" +
      "\030\005 \001(\005\022\023\n\013lobby_flags\030\006 \001(\005\022\026\n\016steam_id_" +
      "owner\030\007 \001(\006\022\020\n\010metadata\030\010 \001(\014\0227\n\007members" +
      "\030\t \003(\0132&.CMsgClientMMSJoinLobbyResponse." +
      "Member\032B\n\006Member\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014pe" +
      "rsona_name\030\002 \001(\t\022\020\n\010metadata\030\003 \001(\014\"A\n\027CM" +
      "sgClientMMSLeaveLobby\022\016\n\006app_id\030\001 \001(\r\022\026\n" +
      "\016steam_id_lobby\030\002 \001(\006\"]\n\037CMsgClientMMSLe",
      "aveLobbyResponse\022\016\n\006app_id\030\001 \001(\r\022\026\n\016stea" +
      "m_id_lobby\030\002 \001(\006\022\022\n\007eresult\030\003 \001(\005:\0012\"\362\001\n" +
      "\031CMsgClientMMSGetLobbyList\022\016\n\006app_id\030\001 \001" +
      "(\r\022\035\n\025num_lobbies_requested\030\003 \001(\005\022\017\n\007cel" +
      "l_id\030\004 \001(\r\022\021\n\tpublic_ip\030\005 \001(\r\0222\n\007filters" +
      "\030\006 \003(\0132!.CMsgClientMMSGetLobbyList.Filte" +
      "r\032N\n\006Filter\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022" +
      "\023\n\013comparision\030\003 \001(\005\022\023\n\013filter_type\030\004 \001(" +
      "\005\"\245\002\n!CMsgClientMMSGetLobbyListResponse\022" +
      "\016\n\006app_id\030\001 \001(\r\022\022\n\007eresult\030\003 \001(\005:\0012\0229\n\007l",
      "obbies\030\004 \003(\0132(.CMsgClientMMSGetLobbyList" +
      "Response.Lobby\032\240\001\n\005Lobby\022\020\n\010steam_id\030\001 \001" +
      "(\006\022\023\n\013max_members\030\002 \001(\005\022\022\n\nlobby_type\030\003 " +
      "\001(\005\022\023\n\013lobby_flags\030\004 \001(\005\022\020\n\010metadata\030\005 \001" +
      "(\014\022\023\n\013num_members\030\006 \001(\005\022\020\n\010distance\030\007 \001(" +
      "\002\022\016\n\006weight\030\010 \001(\003\"\254\001\n\031CMsgClientMMSSetLo" +
      "bbyData\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobb" +
      "y\030\002 \001(\006\022\027\n\017steam_id_member\030\003 \001(\006\022\023\n\013max_" +
      "members\030\004 \001(\005\022\022\n\nlobby_type\030\005 \001(\005\022\023\n\013lob" +
      "by_flags\030\006 \001(\005\022\020\n\010metadata\030\007 \001(\014\"_\n!CMsg",
      "ClientMMSSetLobbyDataResponse\022\016\n\006app_id\030" +
      "\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\022\n\007eresult" +
      "\030\003 \001(\005:\0012\"C\n\031CMsgClientMMSGetLobbyData\022\016" +
      "\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\"\262" +
      "\002\n\026CMsgClientMMSLobbyData\022\016\n\006app_id\030\001 \001(" +
      "\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\023\n\013num_members" +
      "\030\003 \001(\005\022\023\n\013max_members\030\004 \001(\005\022\022\n\nlobby_typ" +
      "e\030\005 \001(\005\022\023\n\013lobby_flags\030\006 \001(\005\022\026\n\016steam_id" +
      "_owner\030\007 \001(\006\022\020\n\010metadata\030\010 \001(\014\022/\n\007member" +
      "s\030\t \003(\0132\036.CMsgClientMMSLobbyData.Member\032",
      "B\n\006Member\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014persona_n" +
      "ame\030\002 \001(\t\022\020\n\010metadata\030\003 \001(\014\"w\n\035CMsgClien" +
      "tMMSSendLobbyChatMsg\022\016\n\006app_id\030\001 \001(\r\022\026\n\016" +
      "steam_id_lobby\030\002 \001(\006\022\027\n\017steam_id_target\030" +
      "\003 \001(\006\022\025\n\rlobby_message\030\004 \001(\014\"s\n\031CMsgClie" +
      "ntMMSLobbyChatMsg\022\016\n\006app_id\030\001 \001(\r\022\026\n\016ste" +
      "am_id_lobby\030\002 \001(\006\022\027\n\017steam_id_sender\030\003 \001" +
      "(\006\022\025\n\rlobby_message\030\004 \001(\014\"`\n\032CMsgClientM" +
      "MSSetLobbyOwner\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam" +
      "_id_lobby\030\002 \001(\006\022\032\n\022steam_id_new_owner\030\003 ",
      "\001(\006\"`\n\"CMsgClientMMSSetLobbyOwnerRespons" +
      "e\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(" +
      "\006\022\022\n\007eresult\030\003 \001(\005:\0012\"\231\001\n\037CMsgClientMMSS" +
      "etLobbyGameServer\022\016\n\006app_id\030\001 \001(\r\022\026\n\016ste" +
      "am_id_lobby\030\002 \001(\006\022\026\n\016game_server_ip\030\003 \001(" +
      "\r\022\030\n\020game_server_port\030\004 \001(\r\022\034\n\024game_serv" +
      "er_steam_id\030\005 \001(\006\"\231\001\n\037CMsgClientMMSLobby" +
      "GameServerSet\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_i" +
      "d_lobby\030\002 \001(\006\022\026\n\016game_server_ip\030\003 \001(\r\022\030\n" +
      "\020game_server_port\030\004 \001(\r\022\034\n\024game_server_s",
      "team_id\030\005 \001(\006\"s\n\034CMsgClientMMSUserJoined" +
      "Lobby\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030" +
      "\002 \001(\006\022\025\n\rsteam_id_user\030\003 \001(\006\022\024\n\014persona_" +
      "name\030\004 \001(\t\"q\n\032CMsgClientMMSUserLeftLobby" +
      "\022\016\n\006app_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006" +
      "\022\025\n\rsteam_id_user\030\003 \001(\006\022\024\n\014persona_name\030" +
      "\004 \001(\t\"c\n\032CMsgClientMMSInviteToLobby\022\016\n\006a" +
      "pp_id\030\001 \001(\r\022\026\n\016steam_id_lobby\030\002 \001(\006\022\035\n\025s" +
      "team_id_user_invited\030\003 \001(\006\"\271\001\n\024CMsgClien" +
      "tChatInvite\022\030\n\020steam_id_invited\030\001 \001(\006\022\025\n",
      "\rsteam_id_chat\030\002 \001(\006\022\027\n\017steam_id_patron\030" +
      "\003 \001(\006\022\025\n\rchatroom_type\030\004 \001(\005\022\034\n\024steam_id" +
      "_friend_chat\030\005 \001(\006\022\021\n\tchat_name\030\006 \001(\t\022\017\n" +
      "\007game_id\030\007 \001(\006\">\n$CMsgClientReportOverla" +
      "yDetourFailure\022\026\n\016failure_string\030\001 \003(\t\"G" +
      "\n#CMsgClientRequestEncryptedAppTicket\022\016\n" +
      "\006app_id\030\001 \001(\r\022\020\n\010userdata\030\002 \001(\014\"\204\001\n+CMsg" +
      "ClientRequestEncryptedAppTicketResponse\022" +
      "\016\n\006app_id\030\001 \001(\r\022\022\n\007eresult\030\002 \001(\005:\0012\0221\n\024e" +
      "ncrypted_app_ticket\030\003 \001(\0132\023.EncryptedApp",
      "Ticket"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CMsgProtoBufHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CMsgProtoBufHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgProtoBufHeader_descriptor,
              new java.lang.String[] { "ClientSteamId", "ClientSessionId", "JobIdSource", "JobIdTarget", "TargetJobName", },
              SteamMessages.CMsgProtoBufHeader.class,
              SteamMessages.CMsgProtoBufHeader.Builder.class);
          internal_static_CMsgMulti_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_CMsgMulti_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgMulti_descriptor,
              new java.lang.String[] { "SizeUnzipped", "MessageBody", },
              SteamMessages.CMsgMulti.class,
              SteamMessages.CMsgMulti.Builder.class);
          internal_static_CMsgAMGetAccountDetails_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CMsgAMGetAccountDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetails_descriptor,
              new java.lang.String[] { "AuthenticatedSteamId", "RequesterFlags", "AccountList", },
              SteamMessages.CMsgAMGetAccountDetails.class,
              SteamMessages.CMsgAMGetAccountDetails.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_CMsgAMGetAccountDetailsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_descriptor,
              new java.lang.String[] { "Accounts", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor =
            internal_static_CMsgAMGetAccountDetailsResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor,
              new java.lang.String[] { "PublicData", "PrivateData", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_descriptor =
            internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(0);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_License_descriptor,
              new java.lang.String[] { "PackageId", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.License.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_descriptor =
            internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(1);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_GamePlayed_descriptor,
              new java.lang.String[] { "GameId", "MinutesPlayedLastTwoWeeks", "MinutesPlayedForever", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.GamePlayed.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_descriptor =
            internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(2);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPublicData_descriptor,
              new java.lang.String[] { "SteamId", "VisibilityState", "PrivacyState", "ProfileState", "CommentPermission", "LastLogoffTime", "BanExpiresTime", "AccountFlags", "ShaDigestAvatar", "ClanCount", "PersonaName", "ProfileUrl", "IsVacBanned", "IsLimitedAccount", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPublicData.Builder.class);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_descriptor =
            internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(3);
          internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetAccountDetailsResponse_AccountDetail_AccountPrivateData_descriptor,
              new java.lang.String[] { "PersonaState", "PrimaryClanId", "FriendsCount", "CityId", "FavoriteAppId", "TimeCreated", "GameId", "GameServerSteamId", "GameServerIpAddress", "GameServerPort", "SkinId", "WishlistItemCount", "GameExtraInfo", "RealName", "StateCode", "CountryCode", "Email", "Headline", "Summary", "AccountName", "Licenses", "TempLicenses", "GamesPlayed", "LobbySteamId", },
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.class,
              SteamMessages.CMsgAMGetAccountDetailsResponse.AccountDetail.AccountPrivateData.Builder.class);
          internal_static_CMsgAMGetPlayerLinkDetails_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_CMsgAMGetPlayerLinkDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetPlayerLinkDetails_descriptor,
              new java.lang.String[] { "AuthenticatedSteamId", "RequesterFlags", "AccountList", },
              SteamMessages.CMsgAMGetPlayerLinkDetails.class,
              SteamMessages.CMsgAMGetPlayerLinkDetails.Builder.class);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetPlayerLinkDetailsResponse_descriptor,
              new java.lang.String[] { "Accounts", },
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.class,
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.Builder.class);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor =
            internal_static_CMsgAMGetPlayerLinkDetailsResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor,
              new java.lang.String[] { "PublicData", "PrivateData", },
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.class,
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.Builder.class);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_descriptor =
            internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(0);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPublicData_descriptor,
              new java.lang.String[] { "SteamId", "VisibilityState", "PrivacyState", "ProfileState", "CommentPermission", "LastLogoffTime", "BanExpiresTime", "AccountFlags", "ShaDigestAvatar", "PersonaName", "ProfileUrl", },
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.class,
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPublicData.Builder.class);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_descriptor =
            internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_descriptor.getNestedTypes().get(1);
          internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMGetPlayerLinkDetailsResponse_AccountDetail_AccountPrivateData_descriptor,
              new java.lang.String[] { "PersonaState", "PrimaryClanId", "CityId", "TimeCreated", "GameId", "GameServerSteamId", "GameServerIpAddress", "GameServerPort", "GameExtraInfo", "RealName", "StateCode", "CountryCode", "AccountName", "LobbySteamId", },
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.class,
              SteamMessages.CMsgAMGetPlayerLinkDetailsResponse.AccountDetail.AccountPrivateData.Builder.class);
          internal_static_CMsgWebAPIKey_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_CMsgWebAPIKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgWebAPIKey_descriptor,
              new java.lang.String[] { "Status", "AccountId", "PublisherGroupId", "KeyId", "Domain", },
              SteamMessages.CMsgWebAPIKey.class,
              SteamMessages.CMsgWebAPIKey.Builder.class);
          internal_static_CMsgHttpRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_CMsgHttpRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgHttpRequest_descriptor,
              new java.lang.String[] { "RequestMethod", "Hostname", "Url", "Headers", "GetParams", "PostParams", "Body", },
              SteamMessages.CMsgHttpRequest.class,
              SteamMessages.CMsgHttpRequest.Builder.class);
          internal_static_CMsgHttpRequest_RequestHeader_descriptor =
            internal_static_CMsgHttpRequest_descriptor.getNestedTypes().get(0);
          internal_static_CMsgHttpRequest_RequestHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgHttpRequest_RequestHeader_descriptor,
              new java.lang.String[] { "Name", "Value", },
              SteamMessages.CMsgHttpRequest.RequestHeader.class,
              SteamMessages.CMsgHttpRequest.RequestHeader.Builder.class);
          internal_static_CMsgHttpRequest_QueryParam_descriptor =
            internal_static_CMsgHttpRequest_descriptor.getNestedTypes().get(1);
          internal_static_CMsgHttpRequest_QueryParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgHttpRequest_QueryParam_descriptor,
              new java.lang.String[] { "Name", "Value", },
              SteamMessages.CMsgHttpRequest.QueryParam.class,
              SteamMessages.CMsgHttpRequest.QueryParam.Builder.class);
          internal_static_CMsgWebAPIRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_CMsgWebAPIRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgWebAPIRequest_descriptor,
              new java.lang.String[] { "UNUSEDJobName", "InterfaceName", "MethodName", "Version", "ApiKey", "Request", "RoutingAppId", },
              SteamMessages.CMsgWebAPIRequest.class,
              SteamMessages.CMsgWebAPIRequest.Builder.class);
          internal_static_CMsgHttpResponse_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_CMsgHttpResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgHttpResponse_descriptor,
              new java.lang.String[] { "StatusCode", "Headers", "Body", },
              SteamMessages.CMsgHttpResponse.class,
              SteamMessages.CMsgHttpResponse.Builder.class);
          internal_static_CMsgHttpResponse_ResponseHeader_descriptor =
            internal_static_CMsgHttpResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgHttpResponse_ResponseHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgHttpResponse_ResponseHeader_descriptor,
              new java.lang.String[] { "Name", "Value", },
              SteamMessages.CMsgHttpResponse.ResponseHeader.class,
              SteamMessages.CMsgHttpResponse.ResponseHeader.Builder.class);
          internal_static_CMsgClientHeartBeat_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_CMsgClientHeartBeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientHeartBeat_descriptor,
              new java.lang.String[] { },
              SteamMessages.CMsgClientHeartBeat.class,
              SteamMessages.CMsgClientHeartBeat.Builder.class);
          internal_static_CMsgClientSubscribeToPersonaFeed_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_CMsgClientSubscribeToPersonaFeed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientSubscribeToPersonaFeed_descriptor,
              new java.lang.String[] { "PersonaFeeds", },
              SteamMessages.CMsgClientSubscribeToPersonaFeed.class,
              SteamMessages.CMsgClientSubscribeToPersonaFeed.Builder.class);
          internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_descriptor =
            internal_static_CMsgClientSubscribeToPersonaFeed_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientSubscribeToPersonaFeed_PersonaFeed_descriptor,
              new java.lang.String[] { "SteamID", "Subscribe", },
              SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.class,
              SteamMessages.CMsgClientSubscribeToPersonaFeed.PersonaFeed.Builder.class);
          internal_static_CMsgAMSubscribeToPersonaFeed_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_CMsgAMSubscribeToPersonaFeed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMSubscribeToPersonaFeed_descriptor,
              new java.lang.String[] { "SteamidClient", "SteamidPersonaFeedOwner", "Subscribe", },
              SteamMessages.CMsgAMSubscribeToPersonaFeed.class,
              SteamMessages.CMsgAMSubscribeToPersonaFeed.Builder.class);
          internal_static_CMsgClientUDSP2PSessionStarted_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_CMsgClientUDSP2PSessionStarted_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientUDSP2PSessionStarted_descriptor,
              new java.lang.String[] { "SteamidRemote", "Appid", },
              SteamMessages.CMsgClientUDSP2PSessionStarted.class,
              SteamMessages.CMsgClientUDSP2PSessionStarted.Builder.class);
          internal_static_CMsgClientUDSP2PSessionEnded_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_CMsgClientUDSP2PSessionEnded_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientUDSP2PSessionEnded_descriptor,
              new java.lang.String[] { "SteamidRemote", "Appid", "SessionLengthSec", "SessionError", "Nattype", "BytesRecv", "BytesSent", "BytesSentRelay", "BytesRecvRelay", "TimeToConnectMs", },
              SteamMessages.CMsgClientUDSP2PSessionEnded.class,
              SteamMessages.CMsgClientUDSP2PSessionEnded.Builder.class);
          internal_static_CMsgClientRegisterAuthTicketWithCM_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_CMsgClientRegisterAuthTicketWithCM_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientRegisterAuthTicketWithCM_descriptor,
              new java.lang.String[] { "ProtocolVersion", "Ticket", },
              SteamMessages.CMsgClientRegisterAuthTicketWithCM.class,
              SteamMessages.CMsgClientRegisterAuthTicketWithCM.Builder.class);
          internal_static_CMsgClientTicketAuthComplete_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_CMsgClientTicketAuthComplete_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientTicketAuthComplete_descriptor,
              new java.lang.String[] { "SteamId", "GameId", "Estate", "EauthSessionResponse", "DEPRECATEDTicket", "TicketCrc", "TicketSequence", },
              SteamMessages.CMsgClientTicketAuthComplete.class,
              SteamMessages.CMsgClientTicketAuthComplete.Builder.class);
          internal_static_CMsgClientLogon_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_CMsgClientLogon_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLogon_descriptor,
              new java.lang.String[] { "ProtocolVersion", "ObfustucatedPrivateIp", "CellId", "LastSessionId", "ClientPackageVersion", "ClientLanguage", "ClientOsType", "ShouldRememberPassword", "WineVersion", "PublicIp", "QosLevel", "ClientSuppliedSteamId", "MachineId", "Steam2AuthTicket", "EmailAddress", "Rtime32AccountCreation", "AccountName", "Password", "LoginKey", "WasConvertedDeprecatedMsg", "AnonUserTargetAccountName", "AnonUserTargetSteamId", },
              SteamMessages.CMsgClientLogon.class,
              SteamMessages.CMsgClientLogon.Builder.class);
          internal_static_CMsgClientLogonResponse_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_CMsgClientLogonResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLogonResponse_descriptor,
              new java.lang.String[] { "Eresult", "OutOfGameHeartbeatSeconds", "InGameHeartbeatSeconds", "PublicIp", "Rtime32ServerTime", "AccountFlags", "ClientSuppliedSteamid", },
              SteamMessages.CMsgClientLogonResponse.class,
              SteamMessages.CMsgClientLogonResponse.Builder.class);
          internal_static_CMsgClientLogOff_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_CMsgClientLogOff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLogOff_descriptor,
              new java.lang.String[] { },
              SteamMessages.CMsgClientLogOff.class,
              SteamMessages.CMsgClientLogOff.Builder.class);
          internal_static_CMsgClientLoggedOff_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_CMsgClientLoggedOff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLoggedOff_descriptor,
              new java.lang.String[] { "Eresult", },
              SteamMessages.CMsgClientLoggedOff.class,
              SteamMessages.CMsgClientLoggedOff.Builder.class);
          internal_static_CMsgClientCMList_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_CMsgClientCMList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientCMList_descriptor,
              new java.lang.String[] { "CmAddresses", },
              SteamMessages.CMsgClientCMList.class,
              SteamMessages.CMsgClientCMList.Builder.class);
          internal_static_CMsgClientP2PConnectionInfo_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_CMsgClientP2PConnectionInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientP2PConnectionInfo_descriptor,
              new java.lang.String[] { "SteamIdDest", "SteamIdSrc", "AppId", "Candidate", },
              SteamMessages.CMsgClientP2PConnectionInfo.class,
              SteamMessages.CMsgClientP2PConnectionInfo.Builder.class);
          internal_static_CMsgClientP2PConnectionFailInfo_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_CMsgClientP2PConnectionFailInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientP2PConnectionFailInfo_descriptor,
              new java.lang.String[] { "SteamIdDest", "SteamIdSrc", "AppId", "Ep2PSessionError", },
              SteamMessages.CMsgClientP2PConnectionFailInfo.class,
              SteamMessages.CMsgClientP2PConnectionFailInfo.Builder.class);
          internal_static_CMsgClientGetAppOwnershipTicket_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_CMsgClientGetAppOwnershipTicket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientGetAppOwnershipTicket_descriptor,
              new java.lang.String[] { "AppId", },
              SteamMessages.CMsgClientGetAppOwnershipTicket.class,
              SteamMessages.CMsgClientGetAppOwnershipTicket.Builder.class);
          internal_static_CMsgClientGetAppOwnershipTicketResponse_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_CMsgClientGetAppOwnershipTicketResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientGetAppOwnershipTicketResponse_descriptor,
              new java.lang.String[] { "Eresult", "AppId", "Ticket", },
              SteamMessages.CMsgClientGetAppOwnershipTicketResponse.class,
              SteamMessages.CMsgClientGetAppOwnershipTicketResponse.Builder.class);
          internal_static_CMsgClientSessionToken_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_CMsgClientSessionToken_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientSessionToken_descriptor,
              new java.lang.String[] { "Token", },
              SteamMessages.CMsgClientSessionToken.class,
              SteamMessages.CMsgClientSessionToken.Builder.class);
          internal_static_CMsgAuthTicket_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_CMsgAuthTicket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAuthTicket_descriptor,
              new java.lang.String[] { "Estate", "Eresult", "SteamId", "GameId", "HSteamPipe", "TicketCrc", "Ticket", },
              SteamMessages.CMsgAuthTicket.class,
              SteamMessages.CMsgAuthTicket.Builder.class);
          internal_static_CMsgClientGameConnectTokens_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_CMsgClientGameConnectTokens_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientGameConnectTokens_descriptor,
              new java.lang.String[] { "MaxTokensToKeep", "Tokens", },
              SteamMessages.CMsgClientGameConnectTokens.class,
              SteamMessages.CMsgClientGameConnectTokens.Builder.class);
          internal_static_CMsgGSServerType_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_CMsgGSServerType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSServerType_descriptor,
              new java.lang.String[] { "AppIdServed", "Flags", "GameIpAddress", "GamePort", "GameDir", "GameVersion", "GameQueryPort", },
              SteamMessages.CMsgGSServerType.class,
              SteamMessages.CMsgGSServerType.Builder.class);
          internal_static_CMsgGSStatusReply_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_CMsgGSStatusReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSStatusReply_descriptor,
              new java.lang.String[] { "IsSecure", },
              SteamMessages.CMsgGSStatusReply.class,
              SteamMessages.CMsgGSStatusReply.Builder.class);
          internal_static_CMsgGSUserPlaying_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_CMsgGSUserPlaying_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSUserPlaying_descriptor,
              new java.lang.String[] { "SteamId", "PublicIp", "Token", },
              SteamMessages.CMsgGSUserPlaying.class,
              SteamMessages.CMsgGSUserPlaying.Builder.class);
          internal_static_CMsgGSDisconnectNotice_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_CMsgGSDisconnectNotice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSDisconnectNotice_descriptor,
              new java.lang.String[] { "SteamId", },
              SteamMessages.CMsgGSDisconnectNotice.class,
              SteamMessages.CMsgGSDisconnectNotice.Builder.class);
          internal_static_CMsgClientGamesPlayed_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_CMsgClientGamesPlayed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientGamesPlayed_descriptor,
              new java.lang.String[] { "GamesPlayed", },
              SteamMessages.CMsgClientGamesPlayed.class,
              SteamMessages.CMsgClientGamesPlayed.Builder.class);
          internal_static_CMsgClientGamesPlayed_GamePlayed_descriptor =
            internal_static_CMsgClientGamesPlayed_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientGamesPlayed_GamePlayed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientGamesPlayed_GamePlayed_descriptor,
              new java.lang.String[] { "SteamIdGs", "GameId", "GameIpAddress", "GamePort", "IsSecure", "Token", "GameExtraInfo", "GameDataBlob", "ProcessId", },
              SteamMessages.CMsgClientGamesPlayed.GamePlayed.class,
              SteamMessages.CMsgClientGamesPlayed.GamePlayed.Builder.class);
          internal_static_CMsgGSApprove_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_CMsgGSApprove_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSApprove_descriptor,
              new java.lang.String[] { "SteamId", },
              SteamMessages.CMsgGSApprove.class,
              SteamMessages.CMsgGSApprove.Builder.class);
          internal_static_CMsgGSDeny_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_CMsgGSDeny_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSDeny_descriptor,
              new java.lang.String[] { "SteamId", "EdenyReason", "DenyString", },
              SteamMessages.CMsgGSDeny.class,
              SteamMessages.CMsgGSDeny.Builder.class);
          internal_static_CMsgGSKick_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_CMsgGSKick_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGSKick_descriptor,
              new java.lang.String[] { "SteamId", "EdenyReason", },
              SteamMessages.CMsgGSKick.class,
              SteamMessages.CMsgGSKick.Builder.class);
          internal_static_CMsgClientAuthList_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_CMsgClientAuthList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientAuthList_descriptor,
              new java.lang.String[] { "TokensLeft", "LastRequestSeq", "LastRequestSeqFromServer", "Tickets", },
              SteamMessages.CMsgClientAuthList.class,
              SteamMessages.CMsgClientAuthList.Builder.class);
          internal_static_CMsgAMTicketAuthRequestOrResponse_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_CMsgAMTicketAuthRequestOrResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMTicketAuthRequestOrResponse_descriptor,
              new java.lang.String[] { "SteamIdTo", "Ticket", },
              SteamMessages.CMsgAMTicketAuthRequestOrResponse.class,
              SteamMessages.CMsgAMTicketAuthRequestOrResponse.Builder.class);
          internal_static_CMsgClientFriendsList_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_CMsgClientFriendsList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientFriendsList_descriptor,
              new java.lang.String[] { "Bincremental", "Friends", },
              SteamMessages.CMsgClientFriendsList.class,
              SteamMessages.CMsgClientFriendsList.Builder.class);
          internal_static_CMsgClientFriendsList_Friend_descriptor =
            internal_static_CMsgClientFriendsList_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientFriendsList_Friend_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientFriendsList_Friend_descriptor,
              new java.lang.String[] { "Ulfriendid", "Efriendrelationship", },
              SteamMessages.CMsgClientFriendsList.Friend.class,
              SteamMessages.CMsgClientFriendsList.Friend.Builder.class);
          internal_static_CMsgClientLicenseList_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_CMsgClientLicenseList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLicenseList_descriptor,
              new java.lang.String[] { "Eresult", "Licenses", },
              SteamMessages.CMsgClientLicenseList.class,
              SteamMessages.CMsgClientLicenseList.Builder.class);
          internal_static_CMsgClientLicenseList_License_descriptor =
            internal_static_CMsgClientLicenseList_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientLicenseList_License_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLicenseList_License_descriptor,
              new java.lang.String[] { "PackageId", "TimeCreated", "TimeNextProcess", "MinuteLimit", "MinutesUsed", "PaymentMethod", "Flags", "PurchaseCountryCode", "LicenseType", "TerritoryCode", },
              SteamMessages.CMsgClientLicenseList.License.class,
              SteamMessages.CMsgClientLicenseList.License.Builder.class);
          internal_static_CMsgClientLBSSetScore_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_CMsgClientLBSSetScore_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSSetScore_descriptor,
              new java.lang.String[] { "AppId", "LeaderboardId", "Score", "Details", "UploadScoreMethod", },
              SteamMessages.CMsgClientLBSSetScore.class,
              SteamMessages.CMsgClientLBSSetScore.Builder.class);
          internal_static_CMsgClientLBSSetScoreResponse_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_CMsgClientLBSSetScoreResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSSetScoreResponse_descriptor,
              new java.lang.String[] { "Eresult", "LeaderboardEntryCount", "ScoreChanged", "GlobalRankPrevious", "GlobalRankNew", },
              SteamMessages.CMsgClientLBSSetScoreResponse.class,
              SteamMessages.CMsgClientLBSSetScoreResponse.Builder.class);
          internal_static_CMsgClientLBSFindOrCreateLB_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_CMsgClientLBSFindOrCreateLB_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSFindOrCreateLB_descriptor,
              new java.lang.String[] { "AppId", "LeaderboardSortMethod", "LeaderboardDisplayType", "CreateIfNotFound", "LeaderboardName", },
              SteamMessages.CMsgClientLBSFindOrCreateLB.class,
              SteamMessages.CMsgClientLBSFindOrCreateLB.Builder.class);
          internal_static_CMsgClientLBSFindOrCreateLBResponse_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_CMsgClientLBSFindOrCreateLBResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSFindOrCreateLBResponse_descriptor,
              new java.lang.String[] { "Eresult", "LeaderboardId", "LeaderboardEntryCount", "LeaderboardSortMethod", "LeaderboardDisplayType", "LeaderboardName", },
              SteamMessages.CMsgClientLBSFindOrCreateLBResponse.class,
              SteamMessages.CMsgClientLBSFindOrCreateLBResponse.Builder.class);
          internal_static_CMsgClientLBSGetLBEntries_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_CMsgClientLBSGetLBEntries_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSGetLBEntries_descriptor,
              new java.lang.String[] { "AppId", "LeaderboardId", "RangeStart", "RangeEnd", "LeaderboardDataRequest", },
              SteamMessages.CMsgClientLBSGetLBEntries.class,
              SteamMessages.CMsgClientLBSGetLBEntries.Builder.class);
          internal_static_CMsgClientLBSGetLBEntriesResponse_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_CMsgClientLBSGetLBEntriesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSGetLBEntriesResponse_descriptor,
              new java.lang.String[] { "Eresult", "LeaderboardEntryCount", "Entries", },
              SteamMessages.CMsgClientLBSGetLBEntriesResponse.class,
              SteamMessages.CMsgClientLBSGetLBEntriesResponse.Builder.class);
          internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_descriptor =
            internal_static_CMsgClientLBSGetLBEntriesResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientLBSGetLBEntriesResponse_Entry_descriptor,
              new java.lang.String[] { "SteamIdUser", "GlobalRank", "Score", "Details", },
              SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.class,
              SteamMessages.CMsgClientLBSGetLBEntriesResponse.Entry.Builder.class);
          internal_static_CMsgUFSDownloadRequest_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_CMsgUFSDownloadRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDownloadRequest_descriptor,
              new java.lang.String[] { "SteamId", "AppId", "Filename", },
              SteamMessages.CMsgUFSDownloadRequest.class,
              SteamMessages.CMsgUFSDownloadRequest.Builder.class);
          internal_static_CMsgUFSDownloadResponse_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_CMsgUFSDownloadResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDownloadResponse_descriptor,
              new java.lang.String[] { "Eresult", "FileData", },
              SteamMessages.CMsgUFSDownloadResponse.class,
              SteamMessages.CMsgUFSDownloadResponse.Builder.class);
          internal_static_CMsgUFSDownloadResponse_FileData_descriptor =
            internal_static_CMsgUFSDownloadResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgUFSDownloadResponse_FileData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDownloadResponse_FileData_descriptor,
              new java.lang.String[] { "FileSize", "RawFileSize", "ShaFile", "Timestamp", },
              SteamMessages.CMsgUFSDownloadResponse.FileData.class,
              SteamMessages.CMsgUFSDownloadResponse.FileData.Builder.class);
          internal_static_CMsgUFSDownloadChunk_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_CMsgUFSDownloadChunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDownloadChunk_descriptor,
              new java.lang.String[] { "Offset", "Data", },
              SteamMessages.CMsgUFSDownloadChunk.class,
              SteamMessages.CMsgUFSDownloadChunk.Builder.class);
          internal_static_CMsgUFSDeleteFileRequest_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_CMsgUFSDeleteFileRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDeleteFileRequest_descriptor,
              new java.lang.String[] { "SteamId", "AppId", "Filename", },
              SteamMessages.CMsgUFSDeleteFileRequest.class,
              SteamMessages.CMsgUFSDeleteFileRequest.Builder.class);
          internal_static_CMsgUFSDeleteFileResponse_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_CMsgUFSDeleteFileResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgUFSDeleteFileResponse_descriptor,
              new java.lang.String[] { "Eresult", },
              SteamMessages.CMsgUFSDeleteFileResponse.class,
              SteamMessages.CMsgUFSDeleteFileResponse.Builder.class);
          internal_static_CMsgClientAccountInfo_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_CMsgClientAccountInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientAccountInfo_descriptor,
              new java.lang.String[] { "PersonaName", "IpCountry", "SaltPassword", "ShaDigestPassword", },
              SteamMessages.CMsgClientAccountInfo.class,
              SteamMessages.CMsgClientAccountInfo.Builder.class);
          internal_static_CMsgClientAppMinutesPlayedData_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_CMsgClientAppMinutesPlayedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientAppMinutesPlayedData_descriptor,
              new java.lang.String[] { "MinutesPlayed", },
              SteamMessages.CMsgClientAppMinutesPlayedData.class,
              SteamMessages.CMsgClientAppMinutesPlayedData.Builder.class);
          internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_descriptor =
            internal_static_CMsgClientAppMinutesPlayedData_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientAppMinutesPlayedData_AppMinutesPlayedData_descriptor,
              new java.lang.String[] { "AppId", "Forever", "LastTwoWeeks", },
              SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.class,
              SteamMessages.CMsgClientAppMinutesPlayedData.AppMinutesPlayedData.Builder.class);
          internal_static_CMsgAMFindAccounts_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_CMsgAMFindAccounts_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMFindAccounts_descriptor,
              new java.lang.String[] { "SearchType", "SearchString", },
              SteamMessages.CMsgAMFindAccounts.class,
              SteamMessages.CMsgAMFindAccounts.Builder.class);
          internal_static_CMsgAMFindAccountsResponse_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_CMsgAMFindAccountsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMFindAccountsResponse_descriptor,
              new java.lang.String[] { "SteamId", },
              SteamMessages.CMsgAMFindAccountsResponse.class,
              SteamMessages.CMsgAMFindAccountsResponse.Builder.class);
          internal_static_CMsgClientIsLimitedAccount_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_CMsgClientIsLimitedAccount_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientIsLimitedAccount_descriptor,
              new java.lang.String[] { "BisLimitedAccount", },
              SteamMessages.CMsgClientIsLimitedAccount.class,
              SteamMessages.CMsgClientIsLimitedAccount.Builder.class);
          internal_static_CMsgClientRequestFriendData_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_CMsgClientRequestFriendData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientRequestFriendData_descriptor,
              new java.lang.String[] { "PersonaStateRequested", "Friends", },
              SteamMessages.CMsgClientRequestFriendData.class,
              SteamMessages.CMsgClientRequestFriendData.Builder.class);
          internal_static_CMsgClientPersonaState_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_CMsgClientPersonaState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientPersonaState_descriptor,
              new java.lang.String[] { "StatusFlags", "Friends", },
              SteamMessages.CMsgClientPersonaState.class,
              SteamMessages.CMsgClientPersonaState.Builder.class);
          internal_static_CMsgClientPersonaState_Friend_descriptor =
            internal_static_CMsgClientPersonaState_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientPersonaState_Friend_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientPersonaState_Friend_descriptor,
              new java.lang.String[] { "Friendid", "PersonaState", "GamePlayedAppId", "GameServerIp", "GameServerPort", "PlayerName", "QueryPort", "SteamidSource", "CmIp", "AvatarHash", "ChatMetadata", "LastLogoff", "LastLogon", "ClanRank", "GameName", "Gameid", "GameDataBlob", "ClanTag", },
              SteamMessages.CMsgClientPersonaState.Friend.class,
              SteamMessages.CMsgClientPersonaState.Friend.Builder.class);
          internal_static_CMsgAMRouteToClients_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_CMsgAMRouteToClients_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgAMRouteToClients_descriptor,
              new java.lang.String[] { "ContainsProtobufMsg", "Payload", "Clients", },
              SteamMessages.CMsgAMRouteToClients.class,
              SteamMessages.CMsgAMRouteToClients.Builder.class);
          internal_static_CMsgClientMMSCreateLobby_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_CMsgClientMMSCreateLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSCreateLobby_descriptor,
              new java.lang.String[] { "AppId", "MaxMembers", "LobbyType", "LobbyFlags", "CellId", "PublicIp", "Metadata", "PersonaNameOwner", },
              SteamMessages.CMsgClientMMSCreateLobby.class,
              SteamMessages.CMsgClientMMSCreateLobby.Builder.class);
          internal_static_CMsgClientMMSCreateLobbyResponse_descriptor =
            getDescriptor().getMessageTypes().get(61);
          internal_static_CMsgClientMMSCreateLobbyResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSCreateLobbyResponse_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "Eresult", },
              SteamMessages.CMsgClientMMSCreateLobbyResponse.class,
              SteamMessages.CMsgClientMMSCreateLobbyResponse.Builder.class);
          internal_static_CMsgClientMMSJoinLobby_descriptor =
            getDescriptor().getMessageTypes().get(62);
          internal_static_CMsgClientMMSJoinLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSJoinLobby_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "PersonaName", },
              SteamMessages.CMsgClientMMSJoinLobby.class,
              SteamMessages.CMsgClientMMSJoinLobby.Builder.class);
          internal_static_CMsgClientMMSJoinLobbyResponse_descriptor =
            getDescriptor().getMessageTypes().get(63);
          internal_static_CMsgClientMMSJoinLobbyResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSJoinLobbyResponse_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "ChatRoomEnterResponse", "MaxMembers", "LobbyType", "LobbyFlags", "SteamIdOwner", "Metadata", "Members", },
              SteamMessages.CMsgClientMMSJoinLobbyResponse.class,
              SteamMessages.CMsgClientMMSJoinLobbyResponse.Builder.class);
          internal_static_CMsgClientMMSJoinLobbyResponse_Member_descriptor =
            internal_static_CMsgClientMMSJoinLobbyResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientMMSJoinLobbyResponse_Member_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSJoinLobbyResponse_Member_descriptor,
              new java.lang.String[] { "SteamId", "PersonaName", "Metadata", },
              SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.class,
              SteamMessages.CMsgClientMMSJoinLobbyResponse.Member.Builder.class);
          internal_static_CMsgClientMMSLeaveLobby_descriptor =
            getDescriptor().getMessageTypes().get(64);
          internal_static_CMsgClientMMSLeaveLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLeaveLobby_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", },
              SteamMessages.CMsgClientMMSLeaveLobby.class,
              SteamMessages.CMsgClientMMSLeaveLobby.Builder.class);
          internal_static_CMsgClientMMSLeaveLobbyResponse_descriptor =
            getDescriptor().getMessageTypes().get(65);
          internal_static_CMsgClientMMSLeaveLobbyResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLeaveLobbyResponse_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "Eresult", },
              SteamMessages.CMsgClientMMSLeaveLobbyResponse.class,
              SteamMessages.CMsgClientMMSLeaveLobbyResponse.Builder.class);
          internal_static_CMsgClientMMSGetLobbyList_descriptor =
            getDescriptor().getMessageTypes().get(66);
          internal_static_CMsgClientMMSGetLobbyList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSGetLobbyList_descriptor,
              new java.lang.String[] { "AppId", "NumLobbiesRequested", "CellId", "PublicIp", "Filters", },
              SteamMessages.CMsgClientMMSGetLobbyList.class,
              SteamMessages.CMsgClientMMSGetLobbyList.Builder.class);
          internal_static_CMsgClientMMSGetLobbyList_Filter_descriptor =
            internal_static_CMsgClientMMSGetLobbyList_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientMMSGetLobbyList_Filter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSGetLobbyList_Filter_descriptor,
              new java.lang.String[] { "Key", "Value", "Comparision", "FilterType", },
              SteamMessages.CMsgClientMMSGetLobbyList.Filter.class,
              SteamMessages.CMsgClientMMSGetLobbyList.Filter.Builder.class);
          internal_static_CMsgClientMMSGetLobbyListResponse_descriptor =
            getDescriptor().getMessageTypes().get(67);
          internal_static_CMsgClientMMSGetLobbyListResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSGetLobbyListResponse_descriptor,
              new java.lang.String[] { "AppId", "Eresult", "Lobbies", },
              SteamMessages.CMsgClientMMSGetLobbyListResponse.class,
              SteamMessages.CMsgClientMMSGetLobbyListResponse.Builder.class);
          internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_descriptor =
            internal_static_CMsgClientMMSGetLobbyListResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSGetLobbyListResponse_Lobby_descriptor,
              new java.lang.String[] { "SteamId", "MaxMembers", "LobbyType", "LobbyFlags", "Metadata", "NumMembers", "Distance", "Weight", },
              SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.class,
              SteamMessages.CMsgClientMMSGetLobbyListResponse.Lobby.Builder.class);
          internal_static_CMsgClientMMSSetLobbyData_descriptor =
            getDescriptor().getMessageTypes().get(68);
          internal_static_CMsgClientMMSSetLobbyData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSetLobbyData_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdMember", "MaxMembers", "LobbyType", "LobbyFlags", "Metadata", },
              SteamMessages.CMsgClientMMSSetLobbyData.class,
              SteamMessages.CMsgClientMMSSetLobbyData.Builder.class);
          internal_static_CMsgClientMMSSetLobbyDataResponse_descriptor =
            getDescriptor().getMessageTypes().get(69);
          internal_static_CMsgClientMMSSetLobbyDataResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSetLobbyDataResponse_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "Eresult", },
              SteamMessages.CMsgClientMMSSetLobbyDataResponse.class,
              SteamMessages.CMsgClientMMSSetLobbyDataResponse.Builder.class);
          internal_static_CMsgClientMMSGetLobbyData_descriptor =
            getDescriptor().getMessageTypes().get(70);
          internal_static_CMsgClientMMSGetLobbyData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSGetLobbyData_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", },
              SteamMessages.CMsgClientMMSGetLobbyData.class,
              SteamMessages.CMsgClientMMSGetLobbyData.Builder.class);
          internal_static_CMsgClientMMSLobbyData_descriptor =
            getDescriptor().getMessageTypes().get(71);
          internal_static_CMsgClientMMSLobbyData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLobbyData_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "NumMembers", "MaxMembers", "LobbyType", "LobbyFlags", "SteamIdOwner", "Metadata", "Members", },
              SteamMessages.CMsgClientMMSLobbyData.class,
              SteamMessages.CMsgClientMMSLobbyData.Builder.class);
          internal_static_CMsgClientMMSLobbyData_Member_descriptor =
            internal_static_CMsgClientMMSLobbyData_descriptor.getNestedTypes().get(0);
          internal_static_CMsgClientMMSLobbyData_Member_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLobbyData_Member_descriptor,
              new java.lang.String[] { "SteamId", "PersonaName", "Metadata", },
              SteamMessages.CMsgClientMMSLobbyData.Member.class,
              SteamMessages.CMsgClientMMSLobbyData.Member.Builder.class);
          internal_static_CMsgClientMMSSendLobbyChatMsg_descriptor =
            getDescriptor().getMessageTypes().get(72);
          internal_static_CMsgClientMMSSendLobbyChatMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSendLobbyChatMsg_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdTarget", "LobbyMessage", },
              SteamMessages.CMsgClientMMSSendLobbyChatMsg.class,
              SteamMessages.CMsgClientMMSSendLobbyChatMsg.Builder.class);
          internal_static_CMsgClientMMSLobbyChatMsg_descriptor =
            getDescriptor().getMessageTypes().get(73);
          internal_static_CMsgClientMMSLobbyChatMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLobbyChatMsg_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdSender", "LobbyMessage", },
              SteamMessages.CMsgClientMMSLobbyChatMsg.class,
              SteamMessages.CMsgClientMMSLobbyChatMsg.Builder.class);
          internal_static_CMsgClientMMSSetLobbyOwner_descriptor =
            getDescriptor().getMessageTypes().get(74);
          internal_static_CMsgClientMMSSetLobbyOwner_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSetLobbyOwner_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdNewOwner", },
              SteamMessages.CMsgClientMMSSetLobbyOwner.class,
              SteamMessages.CMsgClientMMSSetLobbyOwner.Builder.class);
          internal_static_CMsgClientMMSSetLobbyOwnerResponse_descriptor =
            getDescriptor().getMessageTypes().get(75);
          internal_static_CMsgClientMMSSetLobbyOwnerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSetLobbyOwnerResponse_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "Eresult", },
              SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.class,
              SteamMessages.CMsgClientMMSSetLobbyOwnerResponse.Builder.class);
          internal_static_CMsgClientMMSSetLobbyGameServer_descriptor =
            getDescriptor().getMessageTypes().get(76);
          internal_static_CMsgClientMMSSetLobbyGameServer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSSetLobbyGameServer_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "GameServerIp", "GameServerPort", "GameServerSteamId", },
              SteamMessages.CMsgClientMMSSetLobbyGameServer.class,
              SteamMessages.CMsgClientMMSSetLobbyGameServer.Builder.class);
          internal_static_CMsgClientMMSLobbyGameServerSet_descriptor =
            getDescriptor().getMessageTypes().get(77);
          internal_static_CMsgClientMMSLobbyGameServerSet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSLobbyGameServerSet_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "GameServerIp", "GameServerPort", "GameServerSteamId", },
              SteamMessages.CMsgClientMMSLobbyGameServerSet.class,
              SteamMessages.CMsgClientMMSLobbyGameServerSet.Builder.class);
          internal_static_CMsgClientMMSUserJoinedLobby_descriptor =
            getDescriptor().getMessageTypes().get(78);
          internal_static_CMsgClientMMSUserJoinedLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSUserJoinedLobby_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdUser", "PersonaName", },
              SteamMessages.CMsgClientMMSUserJoinedLobby.class,
              SteamMessages.CMsgClientMMSUserJoinedLobby.Builder.class);
          internal_static_CMsgClientMMSUserLeftLobby_descriptor =
            getDescriptor().getMessageTypes().get(79);
          internal_static_CMsgClientMMSUserLeftLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSUserLeftLobby_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdUser", "PersonaName", },
              SteamMessages.CMsgClientMMSUserLeftLobby.class,
              SteamMessages.CMsgClientMMSUserLeftLobby.Builder.class);
          internal_static_CMsgClientMMSInviteToLobby_descriptor =
            getDescriptor().getMessageTypes().get(80);
          internal_static_CMsgClientMMSInviteToLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientMMSInviteToLobby_descriptor,
              new java.lang.String[] { "AppId", "SteamIdLobby", "SteamIdUserInvited", },
              SteamMessages.CMsgClientMMSInviteToLobby.class,
              SteamMessages.CMsgClientMMSInviteToLobby.Builder.class);
          internal_static_CMsgClientChatInvite_descriptor =
            getDescriptor().getMessageTypes().get(81);
          internal_static_CMsgClientChatInvite_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientChatInvite_descriptor,
              new java.lang.String[] { "SteamIdInvited", "SteamIdChat", "SteamIdPatron", "ChatroomType", "SteamIdFriendChat", "ChatName", "GameId", },
              SteamMessages.CMsgClientChatInvite.class,
              SteamMessages.CMsgClientChatInvite.Builder.class);
          internal_static_CMsgClientReportOverlayDetourFailure_descriptor =
            getDescriptor().getMessageTypes().get(82);
          internal_static_CMsgClientReportOverlayDetourFailure_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientReportOverlayDetourFailure_descriptor,
              new java.lang.String[] { "FailureString", },
              SteamMessages.CMsgClientReportOverlayDetourFailure.class,
              SteamMessages.CMsgClientReportOverlayDetourFailure.Builder.class);
          internal_static_CMsgClientRequestEncryptedAppTicket_descriptor =
            getDescriptor().getMessageTypes().get(83);
          internal_static_CMsgClientRequestEncryptedAppTicket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientRequestEncryptedAppTicket_descriptor,
              new java.lang.String[] { "AppId", "Userdata", },
              SteamMessages.CMsgClientRequestEncryptedAppTicket.class,
              SteamMessages.CMsgClientRequestEncryptedAppTicket.Builder.class);
          internal_static_CMsgClientRequestEncryptedAppTicketResponse_descriptor =
            getDescriptor().getMessageTypes().get(84);
          internal_static_CMsgClientRequestEncryptedAppTicketResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientRequestEncryptedAppTicketResponse_descriptor,
              new java.lang.String[] { "AppId", "Eresult", "EncryptedAppTicket", },
              SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.class,
              SteamMessages.CMsgClientRequestEncryptedAppTicketResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteamStruct.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
