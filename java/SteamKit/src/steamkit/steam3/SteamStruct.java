package steamkit.steam3;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steamstruct.proto

public final class SteamStruct {
  private SteamStruct() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class EncryptedAppTicket extends
      com.google.protobuf.GeneratedMessage {
    // Use EncryptedAppTicket.newBuilder() to construct.
    private EncryptedAppTicket() {
      initFields();
    }
    private EncryptedAppTicket(boolean noInit) {}
    
    private static final EncryptedAppTicket defaultInstance;
    public static EncryptedAppTicket getDefaultInstance() {
      return defaultInstance;
    }
    
    public EncryptedAppTicket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteamStruct.internal_static_EncryptedAppTicket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteamStruct.internal_static_EncryptedAppTicket_fieldAccessorTable;
    }
    
    // optional uint32 ticket_version_no = 1;
    public static final int TICKET_VERSION_NO_FIELD_NUMBER = 1;
    private boolean hasTicketVersionNo;
    private int ticketVersionNo_ = 0;
    public boolean hasTicketVersionNo() { return hasTicketVersionNo; }
    public int getTicketVersionNo() { return ticketVersionNo_; }
    
    // optional uint32 crc_encryptedticket = 2;
    public static final int CRC_ENCRYPTEDTICKET_FIELD_NUMBER = 2;
    private boolean hasCrcEncryptedticket;
    private int crcEncryptedticket_ = 0;
    public boolean hasCrcEncryptedticket() { return hasCrcEncryptedticket; }
    public int getCrcEncryptedticket() { return crcEncryptedticket_; }
    
    // optional uint32 cb_encrypteduserdata = 3;
    public static final int CB_ENCRYPTEDUSERDATA_FIELD_NUMBER = 3;
    private boolean hasCbEncrypteduserdata;
    private int cbEncrypteduserdata_ = 0;
    public boolean hasCbEncrypteduserdata() { return hasCbEncrypteduserdata; }
    public int getCbEncrypteduserdata() { return cbEncrypteduserdata_; }
    
    // optional uint32 cb_encrypted_appownershipticket = 4;
    public static final int CB_ENCRYPTED_APPOWNERSHIPTICKET_FIELD_NUMBER = 4;
    private boolean hasCbEncryptedAppownershipticket;
    private int cbEncryptedAppownershipticket_ = 0;
    public boolean hasCbEncryptedAppownershipticket() { return hasCbEncryptedAppownershipticket; }
    public int getCbEncryptedAppownershipticket() { return cbEncryptedAppownershipticket_; }
    
    // optional bytes encrypted_ticket = 5;
    public static final int ENCRYPTED_TICKET_FIELD_NUMBER = 5;
    private boolean hasEncryptedTicket;
    private com.google.protobuf.ByteString encryptedTicket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasEncryptedTicket() { return hasEncryptedTicket; }
    public com.google.protobuf.ByteString getEncryptedTicket() { return encryptedTicket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTicketVersionNo()) {
        output.writeUInt32(1, getTicketVersionNo());
      }
      if (hasCrcEncryptedticket()) {
        output.writeUInt32(2, getCrcEncryptedticket());
      }
      if (hasCbEncrypteduserdata()) {
        output.writeUInt32(3, getCbEncrypteduserdata());
      }
      if (hasCbEncryptedAppownershipticket()) {
        output.writeUInt32(4, getCbEncryptedAppownershipticket());
      }
      if (hasEncryptedTicket()) {
        output.writeBytes(5, getEncryptedTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTicketVersionNo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getTicketVersionNo());
      }
      if (hasCrcEncryptedticket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getCrcEncryptedticket());
      }
      if (hasCbEncrypteduserdata()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getCbEncrypteduserdata());
      }
      if (hasCbEncryptedAppownershipticket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getCbEncryptedAppownershipticket());
      }
      if (hasEncryptedTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getEncryptedTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static SteamStruct.EncryptedAppTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamStruct.EncryptedAppTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SteamStruct.EncryptedAppTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteamStruct.EncryptedAppTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private SteamStruct.EncryptedAppTicket result;
      
      // Construct using Steamstruct.EncryptedAppTicket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new SteamStruct.EncryptedAppTicket();
        return builder;
      }
      
      protected SteamStruct.EncryptedAppTicket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new SteamStruct.EncryptedAppTicket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteamStruct.EncryptedAppTicket.getDescriptor();
      }
      
      public SteamStruct.EncryptedAppTicket getDefaultInstanceForType() {
        return SteamStruct.EncryptedAppTicket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public SteamStruct.EncryptedAppTicket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private SteamStruct.EncryptedAppTicket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public SteamStruct.EncryptedAppTicket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        SteamStruct.EncryptedAppTicket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteamStruct.EncryptedAppTicket) {
          return mergeFrom((SteamStruct.EncryptedAppTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SteamStruct.EncryptedAppTicket other) {
        if (other == SteamStruct.EncryptedAppTicket.getDefaultInstance()) return this;
        if (other.hasTicketVersionNo()) {
          setTicketVersionNo(other.getTicketVersionNo());
        }
        if (other.hasCrcEncryptedticket()) {
          setCrcEncryptedticket(other.getCrcEncryptedticket());
        }
        if (other.hasCbEncrypteduserdata()) {
          setCbEncrypteduserdata(other.getCbEncrypteduserdata());
        }
        if (other.hasCbEncryptedAppownershipticket()) {
          setCbEncryptedAppownershipticket(other.getCbEncryptedAppownershipticket());
        }
        if (other.hasEncryptedTicket()) {
          setEncryptedTicket(other.getEncryptedTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTicketVersionNo(input.readUInt32());
              break;
            }
            case 16: {
              setCrcEncryptedticket(input.readUInt32());
              break;
            }
            case 24: {
              setCbEncrypteduserdata(input.readUInt32());
              break;
            }
            case 32: {
              setCbEncryptedAppownershipticket(input.readUInt32());
              break;
            }
            case 42: {
              setEncryptedTicket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 ticket_version_no = 1;
      public boolean hasTicketVersionNo() {
        return result.hasTicketVersionNo();
      }
      public int getTicketVersionNo() {
        return result.getTicketVersionNo();
      }
      public Builder setTicketVersionNo(int value) {
        result.hasTicketVersionNo = true;
        result.ticketVersionNo_ = value;
        return this;
      }
      public Builder clearTicketVersionNo() {
        result.hasTicketVersionNo = false;
        result.ticketVersionNo_ = 0;
        return this;
      }
      
      // optional uint32 crc_encryptedticket = 2;
      public boolean hasCrcEncryptedticket() {
        return result.hasCrcEncryptedticket();
      }
      public int getCrcEncryptedticket() {
        return result.getCrcEncryptedticket();
      }
      public Builder setCrcEncryptedticket(int value) {
        result.hasCrcEncryptedticket = true;
        result.crcEncryptedticket_ = value;
        return this;
      }
      public Builder clearCrcEncryptedticket() {
        result.hasCrcEncryptedticket = false;
        result.crcEncryptedticket_ = 0;
        return this;
      }
      
      // optional uint32 cb_encrypteduserdata = 3;
      public boolean hasCbEncrypteduserdata() {
        return result.hasCbEncrypteduserdata();
      }
      public int getCbEncrypteduserdata() {
        return result.getCbEncrypteduserdata();
      }
      public Builder setCbEncrypteduserdata(int value) {
        result.hasCbEncrypteduserdata = true;
        result.cbEncrypteduserdata_ = value;
        return this;
      }
      public Builder clearCbEncrypteduserdata() {
        result.hasCbEncrypteduserdata = false;
        result.cbEncrypteduserdata_ = 0;
        return this;
      }
      
      // optional uint32 cb_encrypted_appownershipticket = 4;
      public boolean hasCbEncryptedAppownershipticket() {
        return result.hasCbEncryptedAppownershipticket();
      }
      public int getCbEncryptedAppownershipticket() {
        return result.getCbEncryptedAppownershipticket();
      }
      public Builder setCbEncryptedAppownershipticket(int value) {
        result.hasCbEncryptedAppownershipticket = true;
        result.cbEncryptedAppownershipticket_ = value;
        return this;
      }
      public Builder clearCbEncryptedAppownershipticket() {
        result.hasCbEncryptedAppownershipticket = false;
        result.cbEncryptedAppownershipticket_ = 0;
        return this;
      }
      
      // optional bytes encrypted_ticket = 5;
      public boolean hasEncryptedTicket() {
        return result.hasEncryptedTicket();
      }
      public com.google.protobuf.ByteString getEncryptedTicket() {
        return result.getEncryptedTicket();
      }
      public Builder setEncryptedTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEncryptedTicket = true;
        result.encryptedTicket_ = value;
        return this;
      }
      public Builder clearEncryptedTicket() {
        result.hasEncryptedTicket = false;
        result.encryptedTicket_ = getDefaultInstance().getEncryptedTicket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EncryptedAppTicket)
    }
    
    static {
      defaultInstance = new EncryptedAppTicket(true);
      SteamStruct.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EncryptedAppTicket)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EncryptedAppTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EncryptedAppTicket_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021steamstruct.proto\"\255\001\n\022EncryptedAppTick" +
      "et\022\031\n\021ticket_version_no\030\001 \001(\r\022\033\n\023crc_enc" +
      "ryptedticket\030\002 \001(\r\022\034\n\024cb_encrypteduserda" +
      "ta\030\003 \001(\r\022\'\n\037cb_encrypted_appownershiptic" +
      "ket\030\004 \001(\r\022\030\n\020encrypted_ticket\030\005 \001(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_EncryptedAppTicket_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_EncryptedAppTicket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EncryptedAppTicket_descriptor,
              new java.lang.String[] { "TicketVersionNo", "CrcEncryptedticket", "CbEncrypteduserdata", "CbEncryptedAppownershipticket", "EncryptedTicket", },
              SteamStruct.EncryptedAppTicket.class,
              SteamStruct.EncryptedAppTicket.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
